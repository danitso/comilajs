{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Parser/Constant/TableIndexes.js","webpack:///./src/Parser/Reference/RowReference.js","webpack:///./node_modules/extend/index.js","webpack:///./src/Parser/Exception/ParserException.js","webpack:///./src/Exception/NotImplementedException.js","webpack:///./src/Parser/Directory/ResourceDirectory.js","webpack:///./src/Parser/Constant/ImageAttributes.js","webpack:///./src/Exception/CustomException.js","webpack:///./src/Parser/Header/DataDirectoryHeader.js","webpack:///./src/Compiler/Module.js","webpack:///./src/Compiler/Compiler.js","webpack:///./src/Parser/Row/TypeSpecRow.js","webpack:///./src/Parser/Row/TypeRefRow.js","webpack:///./src/Parser/Row/TypeDefRow.js","webpack:///./src/Parser/Header/TablesHeader.js","webpack:///./src/Parser/Row/StandAloneSigRow.js","webpack:///./src/Parser/Row/PropertyRow.js","webpack:///./src/Parser/Row/PropertyMapRow.js","webpack:///./src/Parser/Header/SectionHeader.js","webpack:///./src/Parser/Entry/ResourceDataEntry.js","webpack:///./src/Parser/Entry/ResourceDirectoryEntry.js","webpack:///./src/Parser/Header/OptionalHeader.js","webpack:///./src/Parser/Header/DOSHeader.js","webpack:///./src/Parser/Header/COFFHeader.js","webpack:///./src/Parser/BinaryParser.js","webpack:///./src/Parser/PEParser.js","webpack:///./src/Parser/Row/ParamRow.js","webpack:///./src/Parser/Row/ModuleRow.js","webpack:///./src/Parser/Row/ModuleRefRow.js","webpack:///./src/Parser/Row/MethodSemanticsRow.js","webpack:///./src/Parser/Row/MethodImplRow.js","webpack:///./src/Parser/Constant/MethodFlags.js","webpack:///./src/Parser/Header/MethodHeader.js","webpack:///./src/Parser/Row/MethodDefRow.js","webpack:///./src/Parser/Row/NestedClassRow.js","webpack:///./src/Parser/Row/MemberRefRow.js","webpack:///./src/Parser/Header/StreamHeader.js","webpack:///./src/Parser/Header/MetadataHeader.js","webpack:///./src/Parser/Row/ManifestResourceRow.js","webpack:///./src/Parser/Row/InterfaceImplRow.js","webpack:///./src/Parser/Row/ImplMapRow.js","webpack:///./src/Parser/Row/GenericParamConstraintRow.js","webpack:///./src/Parser/Row/GenericParamRow.js","webpack:///./src/Parser/Row/FileRow.js","webpack:///./src/Parser/Row/FieldMarshalRow.js","webpack:///./src/Parser/Row/FieldLayoutRow.js","webpack:///./src/Parser/Row/FieldRVARow.js","webpack:///./src/Parser/Row/FieldRow.js","webpack:///./src/Parser/Row/ExportedTypeRow.js","webpack:///./src/Parser/Row/EventRow.js","webpack:///./src/Parser/Row/EventMapRow.js","webpack:///./src/Parser/Row/DeclSecurityRow.js","webpack:///./src/Parser/Row/CustomAttributeRow.js","webpack:///./src/Parser/Header/CORHeader.js","webpack:///./src/Parser/Row/ConstantRow.js","webpack:///./src/Parser/Row/ClassLayoutRow.js","webpack:///./src/Parser/Row/AssemblyRow.js","webpack:///./src/Parser/Row/AssemblyRefRow.js","webpack:///./src/Parser/Row/AssemblyRefProcessorRow.js","webpack:///./src/Parser/Row/AssemblyRefOSRow.js","webpack:///./src/Parser/Row/AssemblyProcessorRow.js","webpack:///./src/Parser/Row/AssemblyOSRow.js","webpack:///./src/Parser/CILParser.js","webpack:///./src/Main.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","this","ASSEMBLY","ASSEMBLY_OS","ASSEMBLY_PROCESSOR","ASSEMBLY_REF","ASSEMBLY_REF_OS","ASSEMBLY_REF_PROCESSOR","CLASS_LAYOUT","CONSTANT","CUSTOM_ATTRIBUTE","DECL_SECURITY","EVENT","EVENT_MAP","EXPORTED_TYPE","FIELD","FIELD_LAYOUT","FIELD_MARSHAL","FIELD_RVA","FILE","GENERIC_PARAM","GENERIC_PARAM_CONSTRAINT","IMPL_MAP","INTERFACE_IMPL","MANIFEST_RESOURCE","MEMBER_REF","METHOD_DEF","METHOD_IMPL","METHOD_SEMANTICS","MODULE","MODULE_REF","NESTED_CLASS","PARAM","PROPERTY","PROPERTY_MAP","STAND_ALONE_SIG","TYPE_REF","TYPE_DEF","TYPE_SPEC","reader","tableIndexes","tableIndex","rowIndex","bv","bc","size","tables","readTables","Math","pow","length","tableRowIndex","readUInt","hasOwn","toStr","toString","isArray","arr","Array","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","extend","options","src","copy","copyIsArray","clone","target","arguments","deep","CustomException","Extend","message","characteristics","timeDateStamp","majorVersion","minorVersion","numberOfNamedEntries","numberOfIdEntries","entries","position","getPosition","setPosition","ResourceDirectoryEntry","IMAGE_DOS_SIGNATURE","IMAGE_NT_OPTIONAL_HDR64_MAGIC","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_SIGNATURE","IMAGE_ROM_OPTIONAL_HDR_MAGIC","type","_message","_type","getMessage","getType","virtualAddress","NotImplementedException","_blob","_guid","_strings","_tables","_unicodeStrings","run","parser","compile","console","log","readDOSHeader","readCOFFHeader","readOptionalHeader","readSectionHeaders","readResourceDirectory","readCORHeader","readMetadataHeader","readTablesHeader","readMethodHeaders","signature","readBlobIndex","RowReference","TableIndexes","resolutionScope","typeName","readStringIndex","typeNamespace","flags","extends","fieldList","methodList","i1","i2","reserved1","heapOffsetSizes","reserved2","maskValidArray","maskValid","maskSortedArray","maskSorted","tablesOffset","parent","propertyList","readUTF8String","misc","sizeOfRawData","pointerToRawData","pointerToRelocations","pointerToLinenumbers","numberOfRelocations","numberOfLinenumbers","offsetToData","getFileOffset","codePage","reserved","ResourceDataEntry","ResourceDirectory","data","directory","getResourceDirectoryFileOffset","DataDirectoryHeader","ImageAttributes","magic","majorLinkerVersion","minorLinkerVersion","sizeOfCode","sizeOfInitializedData","sizeOfUninitializedData","addressOfEntryPoint","baseOfCode","baseOfData","imageBase","sectionAlignment","fileAlignment","majorOperatingSystemVersion","minorOperatingSystemVersion","majorImageVersion","minorImageVersion","majorSubsystemVersion","minorSubsystemVersion","win32VersionValue","sizeOfImage","sizeOfHeaders","checkSum","subsystem","dllCharacteristics","sizeOfStackReserve","sizeOfStackCommit","sizeOfHeapReserve","sizeOfHeapCommit","loaderFlags","numberOfRvaAndSizes","dataDirectory","cblp","cp","crlc","cparhdr","minAlloc","maxAlloc","ss","sp","csum","ip","cs","lfarlc","ovno","res1","readUIntArray","oemid","oeminfo","res2","lfanew","machine","numberOfSections","pointerToSymbolTable","numberOfSymbols","sizeOfOptionalHeader","path","_data","Uint8Array","_path","_position","getPath","getSize","byteLength","loadFile","success","error","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","response","send","readBytes","count","bytes","push","readString","terminate","boundary","String","fromCharCode","endsWith","indexOf","substring","integer","integers","decodeURI","encodeURIComponent","setPath","BinaryParser","COFFHeader","DOSHeader","ParserException","OptionalHeader","SectionHeader","_coffHeader","_dosHeader","_optionalHeader","_resourceDirectory","_resourceDirectoryFileOffset","_sectionHeaders","rva","sectionHeaders","sectionHeader","sequence","generation","mvid","readGUIDIndex","encId","encBaseId","semantics","method","association","class","methodBody","methodDeclaration","FAT_FORMAT","INITIALIZE_LOCALS","MORE_SECTIONS","TINY_FORMAT","MethodFlags","flagsAndSize","tiny","headerSize","maxStack","codeSize","localVarSigTok","codeOffset","implFlags","paramList","nestedClass","enclosingClass","offset","StreamHeader","versionLength","version","streams","streamHeaders","implementation","interface","mappingFlags","memberForwarded","importName","importScope","owner","constraint","number","hashValue","nativeType","field","typeDefId","eventFlags","eventType","eventList","action","permissionSet","sizeOfHeader","majorRuntimeVersion","minorRuntimeVersion","metadata","entryPoint","resources","strongNameSignature","codeManagerTable","vTableFixups","exportAddressTableJumps","managedNativeHeader","packingSize","classSize","hashAlgId","buildNumber","revisionNumber","publicKey","culture","publicKeyOrToken","processor","assemblyRef","osPlatformID","osMajorVersion","osMinorVersion","AssemblyOSRow","AssemblyProcessorRow","AssemblyRefOSRow","AssemblyRefProcessorRow","AssemblyRefRow","AssemblyRow","ClassLayoutRow","ConstantRow","CORHeader","CustomAttributeRow","DeclSecurityRow","EventMapRow","EventRow","ExportedTypeRow","FieldRow","FieldRVARow","FieldLayoutRow","FieldMarshalRow","FileRow","GenericParamRow","GenericParamConstraintRow","ImplMapRow","InterfaceImplRow","ManifestResourceRow","MetadataHeader","MemberRefRow","NestedClassRow","MethodDefRow","MethodHeader","MethodImplRow","MethodSemanticsRow","ModuleRefRow","ModuleRow","ParamRow","PEParser","PropertyMapRow","PropertyRow","StandAloneSigRow","TablesHeader","TypeDefRow","TypeRefRow","TypeSpecRow","_corHeader","_metadataHeader","_methodHeaders","_tablesHeader","getStreamHeader","readGUIDFromHeap","index","streamHeader","guid","hex","charCodeAt","toUpperCase","readMethodInstructions","header","readStringFromHeap","decodeURIComponent","rowClass","_getTableRowClass","rowCount","CILParser","Compiler","info","ex"],"mappings":"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","file":"comila.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"comilajs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"comilajs\"] = factory();\n\telse\n\t\troot[\"comilajs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 63);\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TableIndexes.\n *\n * @constructor\n * @struct\n */\nfunction TableIndexes () {\n\n  'use strict';\n\n  /**\n   * The table index for the 'Assembly' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY = 32;\n\n  /**\n   * The table index for the 'AssemblyOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_OS = 34;\n\n  /**\n   * The table index for the 'AssemblyProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_PROCESSOR = 33;\n\n  /**\n   * The table index for the 'AssemblyRef' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF = 35;\n\n  /**\n   * The table index for the 'AssemblyRefOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_OS = 37;\n\n  /**\n   * The table index for the 'AssemblyRefProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_PROCESSOR = 36;\n\n  /**\n   * The table index for the 'ClassLayout' table.\n   *\n   * @const {number}\n   */\n  this.CLASS_LAYOUT = 15;\n\n  /**\n   * The table index for the 'Constant' table.\n   *\n   * @const {number}\n   */\n  this.CONSTANT = 11;\n\n  /**\n   * The table index for the 'CustomAttribute' table.\n   *\n   * @const {number}\n   */\n  this.CUSTOM_ATTRIBUTE = 12;\n\n  /**\n   * The table index for the 'DeclSecurity' table.\n   *\n   * @const {number}\n   */\n  this.DECL_SECURITY = 14;\n\n  /**\n   * The table index for the 'Event' table.\n   *\n   * @const {number}\n   */\n  this.EVENT = 20;\n\n  /**\n   * The table index for the 'EventMap' table.\n   *\n   * @const {number}\n   */\n  this.EVENT_MAP = 18;\n\n  /**\n   * The table index for the 'ExportedType' table.\n   *\n   * @const {number}\n   */\n  this.EXPORTED_TYPE = 39;\n\n  /**\n   * The table index for the 'Field' table.\n   *\n   * @const {number}\n   */\n  this.FIELD = 4;\n\n  /**\n   * The table index for the 'FieldLayout' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_LAYOUT = 16;\n\n  /**\n   * The table index for the 'FieldMarshal' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_MARSHAL = 13;\n\n  /**\n   * The table index for the 'FieldRVA' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_RVA = 29;\n\n  /**\n   * The table index for the 'File' table.\n   *\n   * @const {number}\n   */\n  this.FILE = 38;\n\n  /**\n   * The table index for the 'GenericParam' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM = 42;\n\n  /**\n   * The table index for the 'GenericParamConstraint' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM_CONSTRAINT = 44;\n\n  /**\n   * The table index for the 'ImplMap' table.\n   *\n   * @const {number}\n   */\n  this.IMPL_MAP = 28;\n\n  /**\n   * The table index for the 'InterfaceImpl' table.\n   *\n   * @const {number}\n   */\n  this.INTERFACE_IMPL = 9;\n\n  /**\n   * The table index for the 'ManifestResource' table.\n   *\n   * @const {number}\n   */\n  this.MANIFEST_RESOURCE = 40;\n\n  /**\n   * The table index for the 'MemberRef' table.\n   *\n   * @const {number}\n   */\n  this.MEMBER_REF = 10;\n\n  /**\n   * The table index for the 'MethodDef' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_DEF = 6;\n\n  /**\n   * The table index for the 'MethodImpl' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_IMPL = 25;\n\n  /**\n   * The table index for the 'MethodSemantics' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_SEMANTICS = 24;\n\n  /**\n   * The table index for the 'Module' table.\n   *\n   * @const {number}\n   */\n  this.MODULE = 0;\n\n  /**\n   * The table index for the 'ModuleRef' table.\n   *\n   * @const {number}\n   */\n  this.MODULE_REF = 26;\n\n  /**\n   * The table index for the 'NestedClass' table.\n   *\n   * @const {number}\n   */\n  this.NESTED_CLASS = 41;\n\n  /**\n   * The table index for the 'Param' table.\n   *\n   * @const {number}\n   */\n  this.PARAM = 8;\n\n  /**\n   * The table index for the 'Property' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY = 23;\n\n  /**\n   * The table index for the 'PropertyMap' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY_MAP = 21;\n\n  /**\n   * The table index for the 'StandAloneSig' table.\n   *\n   * @const {number}\n   */\n  this.STAND_ALONE_SIG = 17;\n\n  /**\n   * The table index for the 'TypeRef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_REF = 1;\n\n  /**\n   * The table index for the 'TypeDef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_DEF = 2;\n\n  /**\n   * The table index for the 'TypeSpec' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_SPEC = 27;\n\n}\n\nmodule.exports = new TableIndexes();\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class RowReference.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n * @param {Array<number>} tableIndexes\n *   The table indexes.\n *\n * @constructor\n * @struct\n */\nfunction RowReference (reader, tableIndexes) {\n\n  'use strict';\n\n  /**\n   * The table index.\n   *\n   * @type {number}\n   */\n  this.tableIndex = -1;\n\n  /**\n   * The row index.\n   *\n   * @type {number}\n   */\n  this.rowIndex = -1;\n\n  // Initialize the object.\n  (function (object, reader, tableIndexes) {\n\n    var bc = 1, bv, size = 2, tables = reader.readTables();\n\n    // Determine how many bits are required to represent the table index.\n    while ((bv = Math.pow(2, bc - 1)) < tableIndexes.length) {\n      bc++;\n    }\n\n    // Determine if the index is represented as a 16-bit or 32-bit integer.\n    for (var i = 0; i < tableIndexes.length; i++) {\n      if ((tables[tableIndexes[i]]) &&\n        (tables[tableIndexes[i]].length > 0xFFFF)) {\n        size = 4;\n        break;\n      }\n    }\n\n    // Read the integer that contains both the table index and the row index.\n    var tableRowIndex = reader.readUInt(size);\n\n    // Split the integer into two separate values and update the properties.\n    object.tableIndex = tableIndexes[tableRowIndex & (bv - 1)];\n    object.rowIndex = tableRowIndex >> bc;\n\n  }(this, reader, tableIndexes));\n\n}\n\nmodule.exports = RowReference;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CustomException = require('./../../Exception/CustomException');\nvar Extend = require('extend');\n\n/**\n * Class ParserException.\n *\n * @param {string} message\n *   The message.\n *\n * @constructor\n * @extends {CustomException}\n */\nfunction ParserException (message) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new CustomException(message, 'ParserException'));\n\n}\n\nmodule.exports = ParserException;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CustomException = require('./CustomException');\nvar Extend = require('extend');\n\n/**\n * Class NotImplementedException.\n *\n * @param {string} message\n *   The message.\n *\n * @constructor\n * @extends {CustomException}\n */\nfunction NotImplementedException (message) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new CustomException(message, 'NotImplementedException'));\n\n}\n\nmodule.exports = NotImplementedException;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDirectory.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectory (reader) {\n\n  'use strict';\n\n  /**\n   * The characteristics.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n  /**\n   * The time/date stamp describing the creation time of the resource.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The major version number.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use names and that follow this structure.\n   *\n   * @type {number}\n   */\n  this.numberOfNamedEntries = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use integer IDs, and which follow this\n   * structure.\n   *\n   * @type {number}\n   */\n  this.numberOfIdEntries = reader.readUInt(2);\n\n  /**\n   * The resource directory entries.\n   *\n   * @type {Array<ResourceDirectoryEntry>}\n   */\n  this.entries = new Array(this.numberOfIdEntries + this.numberOfNamedEntries);\n\n  // Parse the resource directory entries.\n  var position = reader.getPosition();\n\n  for (var i = 0; i < this.entries.length; i++) {\n    reader.setPosition(position + (i * 8));\n    this.entries[i] = new ResourceDirectoryEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectory;\n\nvar ResourceDirectoryEntry = require('./../Entry/ResourceDirectoryEntry');\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ImageAttributes.\n *\n * @constructor\n * @struct\n */\nfunction ImageAttributes () {\n\n  'use strict';\n\n  /**\n   * The DOS header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_DOS_SIGNATURE = 0x5a4d;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\n\n  /**\n   * The NT header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_SIGNATURE = 0x4550;\n\n  /**\n   * The file is a ROM image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_ROM_OPTIONAL_HDR_MAGIC = 0x107;\n\n}\n\nmodule.exports = new ImageAttributes();\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class CustomException.\n *\n * @param {string} message\n *   The message.\n * @param {string} type\n *   The type of exception.\n *\n * @constructor\n */\nfunction CustomException (message, type) {\n\n  'use strict';\n\n  /**\n   * The exception message.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._message = message;\n\n  /**\n   * The exception type.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._type = (typeof type !== 'undefined') ? type : 'CustomException';\n\n  /**\n   * Retrieves the exception message.\n   *\n   * @return {string}\n   */\n  this.getMessage = function () {\n    return this._message;\n  };\n\n  /**\n   * Retrieves the exception type.\n   *\n   * @return {string}\n   */\n  this.getType = function () {\n    return this._type;\n  };\n\n  /**\n   * Converts the exception to a string.\n   *\n   * @return {string}\n   */\n  this.toString = function () {\n    return this.getMessage();\n  };\n\n}\n\nmodule.exports = CustomException;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DataDirectoryHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DataDirectoryHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The relative virtual address of the table.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the table, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n}\n\nmodule.exports = DataDirectoryHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar NotImplementedException = require('./../Exception/NotImplementedException');\n\n/**\n * Class Module.\n *\n * @param {CILParser} reader\n *   The CLR reader.\n *\n * @constructor\n */\nfunction Module (reader) {\n\n  'use strict';\n\n  /**\n   * The blobs.\n   *\n   * @type {Object<number, Blob>}\n   *\n   * @protected\n   */\n  this._blob = {};\n\n  /**\n   * The GUIDs.\n   *\n   * @type {Object<number, string>}\n   *\n   * @protected\n   */\n  this._guid = {};\n\n  /**\n   * The ANSI strings.\n   *\n   * @type {Object<number, string>}\n   *\n   * @protected\n   */\n  this._strings = {};\n\n  /**\n   * The tables.\n   *\n   * @type {Object<number, *>}\n   *\n   * @protected\n   */\n  this._tables = {};\n\n  /**\n   * The unicode strings.\n   *\n   * @type {Object<number, string>}\n   *\n   * @protected\n   */\n  this._unicodeStrings = {};\n\n  /**\n   * Runs the module.\n   */\n  this.run = function () {\n    throw new NotImplementedException(\n      'The run() function has not been implemented');\n  };\n\n}\n\nmodule.exports = Module;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar Module = require('./Module');\nvar NotImplementedException = require('./../Exception/NotImplementedException');\n\n/**\n * Class Compiler.\n *\n * @param {CILParser} parser\n *   The CLR parser.\n *\n * @constructor\n */\nfunction Compiler (parser) {\n\n  'use strict';\n\n  /**\n   * Compiles CIL to JavaScript.\n   *\n   * @return {Module}\n   *   Returns the compiled module object.\n   *\n   * @throws {NotImplementedException}\n   *   Thrown as long as the function has not been fully implemented.\n   */\n  this.compile = function () {\n    // Log some information about the executable.\n    console.log(parser.readDOSHeader());\n    console.log(parser.readCOFFHeader());\n    console.log(parser.readOptionalHeader());\n    console.log(parser.readSectionHeaders());\n    console.log(parser.readResourceDirectory());\n    console.log(parser.readCORHeader());\n    console.log(parser.readMetadataHeader());\n    console.log(parser.readTablesHeader());\n    console.log(parser.readTables());\n    console.log(parser.readMethodHeaders());\n\n    // Throw an exception as the compiler has not been fully implemented.\n    throw new NotImplementedException(\n      'The compile() function has not been fully implemented');\n  };\n\n}\n\nmodule.exports = Compiler;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TypeSpecRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeSpecRow (reader) {\n\n  'use strict';\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = TypeSpecRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class TypeRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.resolutionScope = new RowReference(reader, [\n    TableIndexes.MODULE,\n    TableIndexes.MODULE_REF,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.TYPE_REF\n  ]);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n}\n\nmodule.exports = TypeRefRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class TypeDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeDefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.extends = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The reference to the field information row.\n   *\n   * @type {RowReference}\n   */\n  this.fieldList = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n  /**\n   * The reference to the method information row.\n   *\n   * @type {RowReference}\n   */\n  this.methodList = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n}\n\nmodule.exports = TypeDefRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TablesHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction TablesHeader (reader) {\n\n  'use strict';\n\n  var i1, i2;\n\n  /**\n   * The first reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved1 = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(1);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(1);\n\n  /**\n   * The size of the indexes into the different streams.\n   *\n   * @type {number}\n   */\n  this.heapOffsetSizes = reader.readUInt(1);\n\n  /**\n   * The second reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved2 = reader.readUInt(1);\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {Array<number>}\n   */\n  this.maskValidArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {number}\n   */\n  this.maskValid = (i2 << 32) | i1;\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {Array<number>}\n   */\n  this.maskSortedArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {number}\n   */\n  this.maskSorted = (i2 << 32) | i1;\n\n  /**\n   * The file offset to the tables relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.tablesOffset = reader.getPosition();\n\n}\n\nmodule.exports = TablesHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StandAloneSigRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction StandAloneSigRow (reader) {\n\n  'use strict';\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = StandAloneSigRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class PropertyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyRow (reader) {\n\n  'use strict';\n\n  /**\n   * The property flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.type = reader.readBlobIndex();\n\n}\n\nmodule.exports = PropertyRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class PropertyMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyMapRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first property row.\n   *\n   * @type {RowReference}\n   */\n  this.propertyList = new RowReference(reader, [\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = PropertyMapRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class SectionHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction SectionHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The section name.\n   *\n   * @type {string}\n   */\n  this.name = reader.readUTF8String(8, true);\n\n  /**\n   * The file address or the total size of the section when loaded into memory,\n   * in bytes.\n   *\n   * @type {number}\n   */\n  this.misc = reader.readUInt(4);\n\n  /**\n   * The address of the first byte of the section when loaded into memory,\n   * relative to the image base.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data on disk, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the first page within the COFF file.\n   *\n   * @type {number}\n   */\n  this.pointerToRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToRelocations = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToLinenumbers = reader.readUInt(4);\n\n  /**\n   * The number of relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfRelocations = reader.readUInt(2);\n\n  /**\n   * The number of line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfLinenumbers = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n}\n\nmodule.exports = SectionHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDataEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDataEntry (reader) {\n\n  'use strict';\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.getFileOffset(reader.readUInt(4));\n\n  /**\n   * The data size.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The code page.\n   *\n   * @type {number}\n   */\n  this.codePage = reader.readUInt(4);\n\n  /**\n   * The reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n}\n\nmodule.exports = ResourceDataEntry;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar ResourceDataEntry = require('./ResourceDataEntry');\nvar ResourceDirectory = require('./../Directory/ResourceDirectory');\n\n/**\n * Class ResourceDirectoryEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectoryEntry (reader) {\n\n  'use strict';\n\n  /**\n   * The name.\n   *\n   * @type {number}\n   */\n  this.name = reader.readUInt(4);\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.readUInt(4);\n\n  /**\n   * The data entry.\n   *\n   * @type {ResourceDataEntry}\n   */\n  this.data = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *   The resource directory or NULL if this entry does not point to one.\n   */\n  this.directory = null;\n\n  // Read either a resource directory or a data entry.\n  if (this.offsetToData >>> 31 === 1) {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      (this.offsetToData << 1 >>> 1);\n    reader.setPosition(this.offsetToData);\n    this.directory = new ResourceDirectory(reader);\n  }\n  else {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      this.offsetToData;\n    reader.setPosition(this.offsetToData);\n    this.data = new ResourceDataEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectoryEntry;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = require('./DataDirectoryHeader');\nvar ImageAttributes = require('./../Constant/ImageAttributes');\n\n/**\n * Class OptionalHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction OptionalHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The state of the image file.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The major version number of the linker.\n   *\n   * @type {number}\n   */\n  this.majorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The minor version number of the linker.\n   *\n   * @type {number}\n   */\n  this.minorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The size of the code section, in bytes, or the sum of all such sections if\n   * there are multiple code sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfCode = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data section, in bytes, or the sum of all such\n   * sections if there are multiple initialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfInitializedData = reader.readUInt(4);\n\n  /**\n   * The size of the uninitialized data section, in bytes, or the sum of all\n   * such sections if there are multiple uninitialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfUninitializedData = reader.readUInt(4);\n\n  /**\n   * A pointer to the entry point function, relative to the image base address.\n   *\n   * @type {number}\n   */\n  this.addressOfEntryPoint = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the code section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfCode = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the data section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfData = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 0 : 4);\n\n  /**\n   * The preferred address of the first byte of the image when it is loaded in\n   * memory.\n   *\n   * @type {number}\n   */\n  this.imageBase = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The alignment of sections loaded in memory, in bytes.\n   *\n   * @type {number}\n   */\n  this.sectionAlignment = reader.readUInt(4);\n\n  /**\n   * The alignment of the raw data of sections in the image file, in bytes.\n   *\n   * @type {number}\n   */\n  this.fileAlignment = reader.readUInt(4);\n\n  /**\n   * The major version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.majorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.minorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the image.\n   *\n   * @type {number}\n   */\n  this.majorImageVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the image.\n   *\n   * @type {number}\n   */\n  this.minorImageVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.majorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.minorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * This member is reserved and must be 0.\n   *\n   * @type {number}\n   */\n  this.win32VersionValue = reader.readUInt(4);\n\n  /**\n   * The size of the image, in bytes, including all headers.\n   *\n   * @type {number}\n   */\n  this.sizeOfImage = reader.readUInt(4);\n\n  /**\n   * The combined size of the following items, rounded to a multiple of the\n   * value specified in the fileAlignment member.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeaders = reader.readUInt(4);\n\n  /**\n   * The image file checksum.\n   *\n   * @type {number}\n   */\n  this.checkSum = reader.readUInt(4);\n\n  /**\n   * The subsystem required to run this image.\n   *\n   * @type {number}\n   */\n  this.subsystem = reader.readUInt(2);\n\n  /**\n   * The DLL characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.dllCharacteristics = reader.readUInt(2);\n\n  /**\n   * The number of bytes to reserve for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to reserve for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * This member is obsolete.\n   *\n   * @type {number}\n   */\n  this.loaderFlags = reader.readUInt(4);\n\n  /**\n   * The number of directory entries in the remainder of the optional header.\n   *\n   * @type {number}\n   */\n  this.numberOfRvaAndSizes = reader.readUInt(4);\n\n  /**\n   * The array of data directory headers.\n   *\n   * @type {Array<DataDirectoryHeader>}\n   */\n  this.dataDirectory = new Array(this.numberOfRvaAndSizes);\n\n  // Read the data directory headers.\n  for (var i = 0; i < this.dataDirectory.length; i++) {\n    this.dataDirectory[i] = new DataDirectoryHeader(reader);\n  }\n\n}\n\nmodule.exports = OptionalHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DOSHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DOSHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The magic number.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The number of bytes on the last page in the file.\n   *\n   * @type {number}\n   */\n  this.cblp = reader.readUInt(2);\n\n  /**\n   * The number of pages in the file.\n   *\n   * @type {number}\n   */\n  this.cp = reader.readUInt(2);\n\n  /**\n   * The number of relocations.\n   *\n   * @type {number}\n   */\n  this.crlc = reader.readUInt(2);\n\n  /**\n   * The size of the header in paragraphs.\n   *\n   * @type {number}\n   */\n  this.cparhdr = reader.readUInt(2);\n\n  /**\n   * The minimum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.minAlloc = reader.readUInt(2);\n\n  /**\n   * The maximum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.maxAlloc = reader.readUInt(2);\n\n  /**\n   * The initial (relative) SS value.\n   *\n   * @type {number}\n   */\n  this.ss = reader.readUInt(2);\n\n  /**\n   * The initial SP value.\n   *\n   * @type {number}\n   */\n  this.sp = reader.readUInt(2);\n\n  /**\n   * The checksum.\n   *\n   * @type {number}\n   */\n  this.csum = reader.readUInt(2);\n\n  /**\n   * The initial IP value.\n   *\n   * @type {number}\n   */\n  this.ip = reader.readUInt(2);\n\n  /**\n   * The initial (relative) CS value.\n   *\n   * @type {number}\n   */\n  this.cs = reader.readUInt(2);\n\n  /**\n   * The file address of the relocation table.\n   *\n   * @type {number}\n   */\n  this.lfarlc = reader.readUInt(2);\n\n  /**\n   * The overlay number.\n   *\n   * @type {number}\n   */\n  this.ovno = reader.readUInt(2);\n\n  /**\n   * The first reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res1 = reader.readUIntArray(2, 4);\n\n  /**\n   * The OEM identifier.\n   *\n   * @type {number}\n   */\n  this.oemid = reader.readUInt(2);\n\n  /**\n   * The OEM information.\n   *\n   * @type {number}\n   */\n  this.oeminfo = reader.readUInt(2);\n\n  /**\n   * The second reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res2 = reader.readUIntArray(2, 10);\n\n  /**\n   * The file address of the new EXE header.\n   *\n   * @type {number}\n   */\n  this.lfanew = reader.readUInt(4);\n\n}\n\nmodule.exports = DOSHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class COFFHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction COFFHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The signature.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The architecture type of the computer.\n   *\n   * @type {number}\n   */\n  this.machine = reader.readUInt(2);\n\n  /**\n   * The number of sections.\n   *\n   * @type {number}\n   */\n  this.numberOfSections = reader.readUInt(2);\n\n  /**\n   * The low 32 bits of the time stamp of the image.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The offset of the symbol table, in bytes, or zero if no COFF symbol table\n   * exists.\n   *\n   * @type {number}\n   */\n  this.pointerToSymbolTable = reader.readUInt(4);\n\n  /**\n   * The number of symbols in the symbol table.\n   *\n   * @type {number}\n   */\n  this.numberOfSymbols = reader.readUInt(4);\n\n  /**\n   * The size of the optional header, in bytes. This value should be 0 for\n   * object files.\n   *\n   * @type {number}\n   */\n  this.sizeOfOptionalHeader = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image. This member can be one or more of the\n   * following values.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(2);\n\n}\n\nmodule.exports = COFFHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar ParserException = require('./Exception/ParserException');\n\n/**\n * Class BinaryParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n */\nfunction BinaryParser (path, data) {\n\n  'use strict';\n\n  /**\n   * The file contents.\n   *\n   * @type {ArrayBuffer}\n   *\n   * @protected\n   */\n  this._data = (typeof data !== 'undefined') ? new Uint8Array(data) : null;\n\n  /**\n   * The file path.\n   *\n   * @type {string}\n   *\n   * @protected\n   */\n  this._path = path;\n\n  /**\n   * The file position.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._position = 0;\n\n  /**\n   * Retrieves the file path.\n   *\n   * @return {string}\n   *   Returns a path.\n   */\n  this.getPath = function () {\n    return this._path;\n  };\n\n  /**\n   * Retrieves the buffer position.\n   *\n   * @return {number}\n   *   Returns the buffer position.\n   */\n  this.getPosition = function () {\n    return this._position;\n  };\n\n  /**\n   * Retrieves the buffer size.\n   *\n   * @return {number}\n   *   Returns the buffer size.\n   */\n  this.getSize = function () {\n    return this._data.byteLength;\n  };\n\n  /**\n   * Loads the file contents.\n   *\n   * @param {Function} success\n   *   The success callback.\n   * @param {Function} error\n   *   The error callback.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   */\n  this.loadFile = function (success, error) {\n    var request = new XMLHttpRequest();\n    request.open('GET', this.getPath(), true);\n    request.responseType = 'arraybuffer';\n    request.onreadystatechange = (function (parser) {\n      return function () {\n        if (request.readyState === XMLHttpRequest.DONE) {\n          if (request.status === 200) {\n            // Store the data as an UInt8 array and reset the position.\n            parser._data = new Uint8Array(request.response);\n            parser._position = 0;\n\n            // Invoke the success callback in order for the invoker to proceed.\n            success(parser);\n          }\n          else {\n            error(parser, request.status);\n          }\n        }\n      };\n    })(this);\n    request.send(null);\n    return this;\n  };\n\n  /**\n   * Reads the next bytes from the buffer.\n   *\n   * @param {number} count\n   *   The number of bytes to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readBytes = function (count) {\n    var bytes = [];\n\n    for (var i = 0; i < count; i++) {\n      if (this._position >= this.getSize()) {\n        break;\n      }\n\n      bytes.push(this._data[this._position++]);\n    }\n\n    return bytes;\n  };\n\n  /**\n   * Reads an ASCII string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a NULL\n   *   terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a NULL terminator after the string has been read in\n   *   which case the string will be terminated.\n   * @param {number} boundary\n   *   The string boundary in bytes.\n   *\n   * @return {string}\n   *   Returns an ASCII string.\n   */\n  this.readString = function (length, terminate, boundary) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (((!boundary) || (s.length % boundary === 0)) &&\n        (s.endsWith(String.fromCharCode(0)))) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(String.fromCharCode(0))) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return s;\n  };\n\n  /**\n   * Reads the next unsigned integer from the buffer.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   *\n   * @return {number|null}\n   *   Returns the integer or NULL if the end is reached.\n   */\n  this.readUInt = function (size) {\n    var bytes = this.readBytes(size);\n    var integer = 0;\n\n    if (bytes.length != size) {\n      return null;\n    }\n\n    for (var i = size - 1; i > -1; i--) {\n      integer |= (bytes[i] << (8 * i));\n    }\n\n    return integer;\n  };\n\n  /**\n   * Reads the next unsigned integers.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   * @param {number} count\n   *   The number of integers to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of integers.\n   */\n  this.readUIntArray = function (size, count) {\n    var integers = [];\n\n    for (var i = 0; i < count; i++) {\n      var integer = this.readUInt(size);\n\n      if (integer === null) {\n        break;\n      }\n\n      integers.push(integer);\n    }\n\n    return integers;\n  };\n\n  /**\n   * Reads a UTF-8 string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a\n   *   string terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a string terminator after the string has been read in\n   *   which case the string will always be terminated.\n   *\n   * @return {string}\n   *   Returns a UTF-8 string.\n   */\n  this.readUTF8String = function (length, terminate) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (s.endsWith(String.fromCharCode(0, 0))) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(String.fromCharCode(0, 0))) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return decodeURI(encodeURIComponent(s));\n  };\n\n  /**\n   * Sets the file path.\n   *\n   * @param {string} path\n   *   The file path.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPath = function (path) {\n    this._path = path;\n    return this;\n  };\n\n  /**\n   * Sets the buffer position.\n   *\n   * @param {number} position\n   *   The new position.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPosition = function (position) {\n    this._position = position;\n    return this;\n  };\n\n}\n\nmodule.exports = BinaryParser;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar BinaryParser = require('./BinaryParser');\nvar COFFHeader = require('./Header/COFFHeader');\nvar DOSHeader = require('./Header/DOSHeader');\nvar Extend = require('extend');\nvar ImageAttributes = require('./Constant/ImageAttributes');\nvar ParserException = require('./Exception/ParserException');\nvar OptionalHeader = require('./Header/OptionalHeader');\nvar ResourceDirectory = require('./Directory/ResourceDirectory');\nvar SectionHeader = require('./Header/SectionHeader');\n\n/**\n * Class PEParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {BinaryParser}\n */\nfunction PEParser (path, data) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new BinaryParser(path, data));\n\n  /**\n   * The COFF header.\n   *\n   * @type {COFFHeader}\n   *\n   * @protected\n   */\n  this._coffHeader = null;\n\n  /**\n   * The DOS header.\n   *\n   * @type {DOSHeader}\n   *\n   * @protected\n   */\n  this._dosHeader = null;\n\n  /**\n   * The optional header.\n   *\n   * @type {OptionalHeader}\n   *\n   * @protected\n   */\n  this._optionalHeader = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *\n   * @protected\n   */\n  this._resourceDirectory = null;\n\n  /**\n   * The resource directory file offset.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._resourceDirectoryFileOffset = null;\n\n  /**\n   * The section headers.\n   *\n   * @type {Array<SectionHeader>}\n   *\n   * @protected\n   */\n  this._sectionHeaders = null;\n\n  /**\n   * Calculates the file offset for a relative virtual address.\n   *\n   * @param {number} rva\n   *   The relative virtual address.\n   *\n   * @return {number}\n   *   Returns a file offset.\n   */\n  this.getFileOffset = function (rva) {\n    // Determine which section the address belongs to and convert it to a file\n    // offset.\n    var sectionHeaders = this.readSectionHeaders();\n\n    for (var i = 0; i < sectionHeaders.length; i++) {\n      if ((rva >= sectionHeaders[i].virtualAddress) &&\n        (rva <= sectionHeaders[i].virtualAddress +\n        sectionHeaders[i].sizeOfRawData)) {\n        return sectionHeaders[i].pointerToRawData +\n          (rva - sectionHeaders[i].virtualAddress);\n      }\n    }\n\n    return -1;\n  };\n\n  /**\n   * Retrieves the resource directory file offset.\n   *\n   * @return {number}\n   *   Returns the file offset or -1 if the resource directory is empty.\n   */\n  this.getResourceDirectoryFileOffset = function () {\n    if (!this._resourceDirectoryFileOffset) {\n      // Locate the resource section in order to determine the file offset.\n      var sectionHeaders = this.readSectionHeaders();\n      var sectionHeader = null;\n\n      for (var i = 0; i < sectionHeaders.length; i++) {\n        if (sectionHeaders[i].name === '.rsrc') {\n          sectionHeader = sectionHeaders[i];\n          break;\n        }\n      }\n\n      if (sectionHeader) {\n        this._resourceDirectoryFileOffset = sectionHeader.pointerToRawData;\n      }\n      else {\n        this._resourceDirectoryFileOffset = -1;\n      }\n    }\n\n    return this._resourceDirectoryFileOffset;\n  };\n\n  /**\n   * Reads the COFF header.\n   *\n   * @return {COFFHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readCOFFHeader = function () {\n    if (!this._coffHeader) {\n      // Move the stream cursor to the position of the COFF header as specified\n      // by the DOS header.\n      this.setPosition(this.readDOSHeader().lfanew);\n\n      // Read the header and throw an exception if the header seems to be\n      // invalid.\n      this._coffHeader = new COFFHeader(this);\n\n      if (this._coffHeader.signature !== ImageAttributes.IMAGE_NT_SIGNATURE) {\n        throw new ParserException('Invalid COFF header');\n      }\n    }\n\n    return this._coffHeader;\n  };\n\n  /**\n   * Reads the DOS header.\n   *\n   * @return {DOSHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readDOSHeader = function () {\n    if (!this._dosHeader) {\n      // Reset the position to the beginning of the stream.\n      this.setPosition(0);\n\n      // Read the header from the buffer and throw an exception if the header is\n      // invalid.\n      this._dosHeader = new DOSHeader(this);\n\n      if (this._dosHeader.magic !== ImageAttributes.IMAGE_DOS_SIGNATURE) {\n        throw new ParserException('Invalid DOS header');\n      }\n    }\n\n    return this._dosHeader;\n  };\n\n  /**\n   * Reads the optional header.\n   *\n   * @return {OptionalHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readOptionalHeader = function () {\n    if ((!this._optionalHeader) &&\n      (this.readCOFFHeader().sizeOfOptionalHeader > 0)) {\n      // Move the stream cursor to the position of the optional header as\n      // specified by the DOS header and the size of the COFF header.\n      this.setPosition(this.readDOSHeader().lfanew + 24);\n\n      // Read the entire header including the data directories.\n      this._optionalHeader = new OptionalHeader(this);\n\n      if ((this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR32_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_ROM_OPTIONAL_HDR_MAGIC)) {\n        throw new ParserException('Invalid optional header');\n      }\n    }\n\n    return this._optionalHeader;\n  };\n\n  /**\n   * Reads the resource directory.\n   *\n   * @return {ResourceDirectory}\n   *   Returns the resource directory.\n   */\n  this.readResourceDirectory = function () {\n    if (this.getResourceDirectoryFileOffset() < 1) {\n      return this._resourceDirectory;\n    }\n\n    this.setPosition(this.getResourceDirectoryFileOffset());\n    this._resourceDirectory = new ResourceDirectory(this);\n    return this._resourceDirectory;\n  };\n\n  /**\n   * Reads the section headers.\n   *\n   * @return {Array<SectionHeader>}\n   *   Returns an array of section headers.\n   */\n  this.readSectionHeaders = function () {\n    if (!this._sectionHeaders) {\n      // Move the stream cursor to the position of the section headers.\n      this.setPosition(this.readDOSHeader().lfanew + 24 +\n        this.readCOFFHeader().sizeOfOptionalHeader);\n\n      // Read each of the section headers.\n      this._sectionHeaders = new Array(this.readCOFFHeader().numberOfSections);\n\n      for (var i = 0; i < this._sectionHeaders.length; i++) {\n        this._sectionHeaders[i] = new SectionHeader(this);\n      }\n    }\n\n    return this._sectionHeaders;\n  };\n\n}\n\nmodule.exports = PEParser;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ParamRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The sequence.\n   *\n   * @type {number}\n   */\n  this.sequence = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ParamRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRow (reader) {\n\n  'use strict';\n\n  /**\n   * The generation.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.generation = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The module id as an index into the GUID heap.\n   *\n   * @type {number}\n   */\n  this.mvid = reader.readGUIDIndex();\n\n  /**\n   * The encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encId = reader.readGUIDIndex();\n\n  /**\n   * The base encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encBaseId = reader.readGUIDIndex();\n\n}\n\nmodule.exports = ModuleRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ModuleRefRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MethodSemanticsRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodSemanticsRow (reader) {\n\n  'use strict';\n\n  /**\n   * The semantics.\n   *\n   * @type {number}\n   */\n  this.semantics = reader.readUInt(2);\n\n  /**\n   * The reference to the method row.\n   *\n   * @type {RowReference}\n   */\n  this.method = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The reference to the associated row.\n   *\n   * @type {RowReference}\n   */\n  this.association = new RowReference(reader, [\n    TableIndexes.EVENT,\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = MethodSemanticsRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MethodImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodImplRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the method body row.\n   *\n   * @type {RowReference}\n   */\n  this.methodBody = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n  /**\n   * The reference to the method declaration row.\n   *\n   * @type {RowReference}\n   */\n  this.methodDeclaration = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n}\n\nmodule.exports = MethodImplRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class MethodFlags.\n *\n * @constructor\n * @struct\n */\nfunction MethodFlags () {\n\n  'use strict';\n\n  /**\n   * The fat format flag.\n   *\n   * @const {number}\n   */\n  this.FAT_FORMAT = 0x3;\n\n  /**\n   * The initialize locals flag.\n   *\n   * @const {number}\n   */\n  this.INITIALIZE_LOCALS = 0x10;\n\n  /**\n   * The more sections flag.\n   *\n   * @const {number}\n   */\n  this.MORE_SECTIONS = 0x8;\n\n  /**\n   * The tiny format flag.\n   *\n   * @const {number}\n   */\n  this.TINY_FORMAT = 0x2;\n\n}\n\nmodule.exports = new MethodFlags();\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar MethodFlags = require('../Constant/MethodFlags');\n\n/**\n * Class MethodHeader.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodHeader (reader) {\n\n  'use strict';\n\n  // Retrieve the first one or two bytes specifying the flags and header size.\n  var flagsAndSize = reader.readUInt(1);\n  var tiny = true;\n\n  if ((flagsAndSize & MethodFlags.TINY_FORMAT) === 0) {\n    reader.setPosition(reader.getPosition() - 1);\n    flagsAndSize = reader.readUInt(2);\n    tiny = false;\n  }\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = tiny ? flagsAndSize & 0x03 : flagsAndSize & 0xFFF;\n\n  /**\n   * The header size.\n   *\n   * @type {number}\n   */\n  this.headerSize = tiny ? 1 : flagsAndSize >> 12;\n\n  /**\n   * The maximum number of items on the operand stack.\n   *\n   * @return {number}\n   */\n  this.maxStack = tiny ? 0 : reader.readUInt(2);\n\n  /**\n   * The size in bytes of the actual method body.\n   *\n   * @return {number}\n   */\n  this.codeSize = tiny ? flagsAndSize >> 2 : reader.readUInt(4);\n\n  /**\n   * The metadata token for a signature describing the layout of the local\n   * variables for the method\n   *\n   * @return {number}\n   */\n  this.localVarSigTok = tiny ? 0 : reader.readUInt(4);\n\n  /**\n   * The file offset to the code.\n   *\n   * @type {number}\n   */\n  this.codeOffset = reader.getPosition();\n\n}\n\nmodule.exports = MethodHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MethodDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodDefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The relative virtual address.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The implementation flags.\n   *\n   * @type {number}\n   */\n  this.implFlags = reader.readUInt(2);\n\n  /**\n   * The method flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n  /**\n   * The reference to the param definition row.\n   *\n   * @type {RowReference}\n   */\n  this.paramList = new RowReference(reader, [\n    TableIndexes.PARAM\n  ]);\n\n}\n\nmodule.exports = MethodDefRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class NestedClassRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction NestedClassRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the nested class information row.\n   *\n   * @type {RowReference}\n   */\n  this.nestedClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the enclosing class information row.\n   *\n   * @type {RowReference}\n   */\n  this.enclosingClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = NestedClassRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MemberRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MemberRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.MODULE_REF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = MemberRefRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StreamHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction StreamHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The file offset to the stream relative to the metadata header.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The size of the stream, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The name of the stream.\n   *\n   * @type {string}\n   */\n  this.name = reader.readString(0, true, 4);\n\n}\n\nmodule.exports = StreamHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar StreamHeader = require('./StreamHeader');\n\n/**\n * Class MetadataHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction MetadataHeader (reader) {\n\n  'use strict';\n\n  var i;\n\n  /**\n   * The file offset to the header relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.offset = reader.getPosition();\n\n  /**\n   * The signature.\n   *\n   * This value should always equal 0x424A5342.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * A reserved value.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n  /**\n   * The length of the version string.\n   *\n   * @type {number}\n   */\n  this.versionLength = (i = (i = reader.readUInt(4)) + (i % 4));\n\n  /**\n   * The version string.\n   *\n   * @type {string}\n   */\n  this.version = reader.readUTF8String(i, true);\n\n  /**\n   * The flags.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The number of streams.\n   *\n   * @type {number}\n   */\n  this.streams = reader.readUInt(2);\n\n  /**\n   * The stream headers.\n   *\n   * @type {Array<StreamHeader>}\n   */\n  this.streamHeaders = new Array(this.streams);\n\n  // Read the stream headers.\n  for (i = 0; i < this.streamHeaders.length; i++) {\n    this.streamHeaders[i] = new StreamHeader(reader);\n  }\n\n}\n\nmodule.exports = MetadataHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ManifestResourceRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ManifestResourceRow (reader) {\n\n  'use strict';\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ManifestResourceRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class InterfaceImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction InterfaceImplRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the interface definition row.\n   *\n   * @type {RowReference}\n   */\n  this.interface = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = InterfaceImplRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ImplMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ImplMapRow (reader) {\n\n  'use strict';\n\n  /**\n   * The mapping flags.\n   *\n   * @type {number}\n   */\n  this.mappingFlags = reader.readUInt(2);\n\n  /**\n   * The forwarded member as a reference to a Field or MethodDef row.\n   *\n   * @type {RowReference}\n   */\n  this.memberForwarded = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The import name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.importName = reader.readStringIndex();\n\n  /**\n   * The import scope as a reference to a ModuleRef row.\n   *\n   * @type {RowReference}\n   */\n  this.importScope = new RowReference(reader, [\n    TableIndexes.MODULE\n  ]);\n\n}\n\nmodule.exports = ImplMapRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class GenericParamConstraintRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamConstraintRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the owner row.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.GENERIC_PARAM\n  ]);\n\n  /**\n   * The reference to the class row.\n   *\n   * @type {RowReference}\n   */\n  this.constraint = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = GenericParamConstraintRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class GenericParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamRow (reader) {\n\n  'use strict';\n\n  /**\n   * The index of the generic parameter.\n   *\n   * @type {number}\n   */\n  this.number = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The reference to the owner of the generic parameter.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = GenericParamRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FileRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FileRow (reader) {\n\n  'use strict';\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = FileRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class FieldMarshalRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldMarshalRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.nativeType = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldMarshalRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class FieldLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldLayoutRow (reader) {\n\n  'use strict';\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldLayoutRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class FieldRVARow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRVARow (reader) {\n\n  'use strict';\n\n  /**\n   * The relative virtual address of the initial value.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The field as a reference to a Field row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldRVARow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FieldRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ExportedTypeRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ExportedTypeRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type definition id.\n   *\n   * @type {number}\n   */\n  this.typeDefId = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ExportedTypeRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class EventRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventRow (reader) {\n\n  'use strict';\n\n  /**\n   * The event flags.\n   *\n   * @type {number}\n   */\n  this.eventFlags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The event type as a reference to a TypeDef, TypeRef or TypeSpec row.\n   *\n   * @type {RowReference}\n   */\n  this.eventType = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = EventRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class EventMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventMapRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first event row.\n   *\n   * @type {RowReference}\n   */\n  this.eventList = new RowReference(reader, [\n    TableIndexes.EVENT\n  ]);\n\n}\n\nmodule.exports = EventMapRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class DeclSecurityRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction DeclSecurityRow (reader) {\n\n  'use strict';\n\n  /**\n   * The action.\n   *\n   * @type {number}\n   */\n  this.action = reader.readUInt(2);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.ASSEMBLY\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.permissionSet = reader.readBlobIndex();\n\n}\n\nmodule.exports = DeclSecurityRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction CustomAttributeRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.FIELD,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_DEF,\n    TableIndexes.PARAM,\n    TableIndexes.INTERFACE_IMPL,\n    TableIndexes.MEMBER_REF,\n    TableIndexes.MODULE,\n    -1,\n    TableIndexes.PROPERTY,\n    TableIndexes.EVENT,\n    TableIndexes.STAND_ALONE_SIG,\n    TableIndexes.MODULE_REF,\n    TableIndexes.TYPE_SPEC,\n    TableIndexes.ASSEMBLY,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE,\n    TableIndexes.MANIFEST_RESOURCE\n  ]);\n\n  /**\n   * The reference to the type row.\n   *\n   * @type {RowReference}\n   */\n  this.type = new RowReference(reader, [\n    -1,\n    -1,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF,\n    -1\n  ]);\n\n  /**\n   * The value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = CustomAttributeRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = require('./DataDirectoryHeader');\n\n/**\n * Class CORHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction CORHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The size of the header, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeader = reader.readUInt(4);\n\n  /**\n   * The major runtime version.\n   *\n   * @type {number}\n   */\n  this.majorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The minor runtime version.\n   *\n   * @type {number}\n   */\n  this.minorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The metadata directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.metadata = new DataDirectoryHeader(reader);\n\n  /**\n   * The runtime flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The entry point address or token.\n   *\n   * @type {number}\n   */\n  this.entryPoint = reader.readUInt(4);\n\n  /**\n   * The resources directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.resources = new DataDirectoryHeader(reader);\n\n  /**\n   * The strong name signature directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.strongNameSignature = new DataDirectoryHeader(reader);\n\n  /**\n   * The code manager table directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.codeManagerTable = new DataDirectoryHeader(reader);\n\n  /**\n   * The VTable fix-ups directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.vTableFixups = new DataDirectoryHeader(reader);\n\n  /**\n   * The exported address table jumps directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.exportAddressTableJumps = new DataDirectoryHeader(reader);\n\n  /**\n   * The managed native header directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.managedNativeHeader = new DataDirectoryHeader(reader);\n\n}\n\nmodule.exports = CORHeader;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ConstantRow (reader) {\n\n  'use strict';\n\n  /**\n   * The type.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(1) + reader.readUInt(1);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM,\n    TableIndexes.PROPERTY\n  ]);\n\n  /**\n   * The value as an index into the Blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = ConstantRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ClassLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ClassLayoutRow (reader) {\n\n  'use strict';\n\n  /**\n   * The packing size.\n   *\n   * @type {number}\n   */\n  this.packingSize = reader.readUInt(2);\n\n  /**\n   * The class size.\n   *\n   * @type {number}\n   */\n  this.classSize = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = ClassLayoutRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRow (reader) {\n\n  'use strict';\n\n  /**\n   * The id of the hashing algorithm.\n   *\n   * @type {number}\n   */\n  this.hashAlgId = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKey = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n}\n\nmodule.exports = AssemblyRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key or token as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKeyOrToken = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = AssemblyRefRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class AssemblyRefProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefProcessorRow (reader) {\n\n  'use strict';\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefProcessorRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class AssemblyRefOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefOSRow (reader) {\n\n  'use strict';\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefOSRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyProcessorRow (reader) {\n\n  'use strict';\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyProcessorRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyOSRow (reader) {\n\n  'use strict';\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyOSRow;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar AssemblyOSRow = require('./Row/AssemblyOSRow');\nvar AssemblyProcessorRow = require('./Row/AssemblyProcessorRow');\nvar AssemblyRefOSRow = require('./Row/AssemblyRefOSRow');\nvar AssemblyRefProcessorRow = require('./Row/AssemblyRefProcessorRow');\nvar AssemblyRefRow = require('./Row/AssemblyRefRow');\nvar AssemblyRow = require('./Row/AssemblyRow');\nvar ClassLayoutRow = require('./Row/ClassLayoutRow');\nvar ConstantRow = require('./Row/ConstantRow');\nvar CORHeader = require('./Header/CORHeader');\nvar CustomAttributeRow = require('./Row/CustomAttributeRow');\nvar DeclSecurityRow = require('./Row/DeclSecurityRow');\nvar EventMapRow = require('./Row/EventMapRow');\nvar EventRow = require('./Row/EventRow');\nvar ExportedTypeRow = require('./Row/ExportedTypeRow');\nvar Extend = require('extend');\nvar FieldRow = require('./Row/FieldRow');\nvar FieldRVARow = require('./Row/FieldRVARow');\nvar FieldLayoutRow = require('./Row/FieldLayoutRow');\nvar FieldMarshalRow = require('./Row/FieldMarshalRow');\nvar FileRow = require('./Row/FileRow');\nvar GenericParamRow = require('./Row/GenericParamRow');\nvar GenericParamConstraintRow = require('./Row/GenericParamConstraintRow');\nvar ImplMapRow = require('./Row/ImplMapRow');\nvar InterfaceImplRow = require('./Row/InterfaceImplRow');\nvar ParserException = require('./Exception/ParserException');\nvar ManifestResourceRow = require('./Row/ManifestResourceRow');\nvar MetadataHeader = require('./Header/MetadataHeader');\nvar MemberRefRow = require('./Row/MemberRefRow');\nvar NestedClassRow = require('./Row/NestedClassRow');\nvar MethodDefRow = require('./Row/MethodDefRow');\nvar MethodHeader = require('./Header/MethodHeader');\nvar MethodImplRow = require('./Row/MethodImplRow');\nvar MethodSemanticsRow = require('./Row/MethodSemanticsRow');\nvar ModuleRefRow = require('./Row/ModuleRefRow');\nvar ModuleRow = require('./Row/ModuleRow');\nvar ParamRow = require('./Row/ParamRow');\nvar PEParser = require('./PEParser');\nvar PropertyMapRow = require('./Row/PropertyMapRow');\nvar PropertyRow = require('./Row/PropertyRow');\nvar StandAloneSigRow = require('./Row/StandAloneSigRow');\nvar TableIndexes = require('./Constant/TableIndexes');\nvar TablesHeader = require('./Header/TablesHeader');\nvar TypeDefRow = require('./Row/TypeDefRow');\nvar TypeRefRow = require('./Row/TypeRefRow');\nvar TypeSpecRow = require('./Row/TypeSpecRow');\n\n/**\n * Class CILParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {PEParser}\n */\nfunction CILParser (path, data) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new PEParser(path, data));\n\n  /**\n   * The COR header.\n   *\n   * @type {CORHeader}\n   *\n   * @protected\n   */\n  this._corHeader = null;\n\n  /**\n   * The metadata header.\n   *\n   * @type {MetadataHeader}\n   *\n   * @protected\n   */\n  this._metadataHeader = null;\n\n  /**\n   * The method headers.\n   *\n   * @type {Array<MethodHeader>}\n   *\n   * @protected\n   */\n  this._methodHeaders = null;\n\n  /**\n   * The metadata tables.\n   *\n   * @type {Array<Object>}\n   *\n   * @protected\n   */\n  this._tables = null;\n\n  /**\n   * The tables header.\n   *\n   * @type {TablesHeader}\n   *\n   * @protected\n   */\n  this._tablesHeader = null;\n\n  /**\n   * Retrieves a stream header.\n   *\n   * @param {string} name\n   *   The stream name.\n   *\n   * @return {StreamHeader|null}\n   *   Returns the stream header or NULL if not found.\n   */\n  this.getStreamHeader = function (name) {\n    var streamHeaders = this.readMetadataHeader().streamHeaders;\n\n    for (var i = 0; i < streamHeaders.length; i++) {\n      if (streamHeaders[i].name === name) {\n        return streamHeaders[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Reads a blob index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readBlobIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x04) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the COR header.\n   *\n   * @return {CORHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readCORHeader = function () {\n    if (!this._corHeader) {\n      // Verify that the CLR (formerly COM) data directory is available.\n      if ((this.readOptionalHeader().dataDirectory.length < 15) ||\n        (this.readOptionalHeader().dataDirectory[14].size < 1)) {\n        throw new ParserException('The CLR data directory is missing');\n      }\n\n      // Move the stream cursor to the position of the COR header.\n      this.setPosition(this.getFileOffset(\n        this.readOptionalHeader().dataDirectory[14].virtualAddress));\n\n      // Read the the header and throw an exception if it is invalid.\n      this._corHeader = new CORHeader(this);\n\n      if (this._corHeader.sizeOfHeader !== 72) {\n        throw new ParserException('Invalid COR header (size: ' +\n          this._corHeader.sizeOfHeader  + ' - expected: 72)');\n      }\n    }\n\n    return this._corHeader;\n  };\n\n  /**\n   * Reads a GUID from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a 128-bit unique identifier.\n   */\n  this.readGUIDFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#GUID');\n\n    if (!streamHeader) {\n      throw new ParserException('The #GUID stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the GUID from the stream and format it before returning it.\n    var guid = '', s = this.readString(16);\n\n    for (var i = 0; i < s.length; i++) {\n      if ((i === 4) || (i === 6) || (i === 8) || (i === 10)) {\n        guid += '-';\n      }\n\n      var hex = s.charCodeAt(i).toString(16);\n      guid += (hex.length === 2) ? hex : '0' + hex;\n    }\n\n    return guid;\n  };\n\n  /**\n   * Reads a GUID index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readGUIDIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x02) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the CLR metadata header.\n   *\n   * @return {MetadataHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readMetadataHeader = function () {\n    if (!this._metadataHeader) {\n      // Verify that the metadata directory is available.\n      if (this.readCORHeader().metadata.size < 1) {\n        throw new ParserException('The metadata header is missing');\n      }\n\n      // Move the stream cursor to the position of the metadata header.\n      this.setPosition(this.getFileOffset(\n        this.readCORHeader().metadata.virtualAddress));\n\n      // Read the header and throw an exception if it is invalid.\n      this._metadataHeader = new MetadataHeader(this);\n\n      if (this._metadataHeader.signature !== 0x424A5342) {\n        throw new ParserException('Invalid metadata header (signature: 0x' +\n          this._metadataHeader.signature.toString(16).toUpperCase() +\n          ' - expected: 0x424A5342)');\n      }\n    }\n\n    return this._metadataHeader;\n  };\n\n  /**\n   * Reads the CLR method headers.\n   *\n   * @return {Array<MethodHeader>}\n   *   Returns an array of headers.\n   */\n  this.readMethodHeaders = function () {\n    if (!this._methodHeaders) {\n      var tables = this.readTables();\n\n      // Initialize the array of method headers.\n      this._methodHeaders = new Array(tables[TableIndexes.METHOD_DEF].length);\n\n      // Parse the method headers referenced by the MethodDef table.\n      for (var i = 0; i < tables[TableIndexes.METHOD_DEF].length; i++) {\n        this.setPosition(this.getFileOffset(tables[TableIndexes.METHOD_DEF][i]\n          .rva));\n        this._methodHeaders[i] = new MethodHeader(this);\n      }\n    }\n\n    return this._methodHeaders;\n  };\n\n  /**\n   * Reads the IL instructions for a method.\n   *\n   * @param {MethodHeader} header\n   *   The method header.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readMethodInstructions = function (header) {\n    this.setPosition(header.codeOffset);\n    return this.readBytes(header.codeSize);\n  };\n\n  /**\n   * Reads a string from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a UTF-8 encoded string.\n   */\n  this.readStringFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#Strings');\n\n    if (!streamHeader) {\n      throw new ParserException('The #Strings stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the NULL terminated string.\n    return decodeURIComponent(encodeURIComponent(this.readString(0, true)));\n  };\n\n  /**\n   * Reads a string index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readStringIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x01) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the metadata tables.\n   *\n   * @return {Object}\n   *   Returns an array containing the tables.\n   */\n  this.readTables = function () {\n    if (!this._tables) {\n      // Ensure that the tables header has been read.\n      var header = this.readTablesHeader();\n\n      // Move the buffer cursor to the position of the tables.\n      this.setPosition(header.tablesOffset);\n\n      // Read the row count for each of the tables as we cannot read the rows\n      // before this has been done.\n      this._tables = [];\n\n      for (var i = 0; i < 64; i++) {\n        if (((i < 32) && (header.maskValidArray[0] & Math.pow(2, i)) === 0) ||\n          ((i >= 32) && (header.maskValidArray[1] & Math.pow(2, i - 32)) ===\n          0)) {\n          continue;\n        }\n\n        this._tables[i] = new Array(this.readUInt(4));\n      }\n\n      // Now that the row counts have been read, go ahead reading all the rows\n      // one table at a time.\n      for (i = 0; i < 64; i++) {\n        if (!this._tables[i]) {\n          continue;\n        }\n\n        var rowClass = this._getTableRowClass(i);\n        var rowCount = this._tables[i].length;\n\n        for (var r = 0; r < rowCount; r++) {\n          // jscs:disable requireCapitalizedConstructors\n          this._tables[i][r] = new rowClass(this);\n          // jscs:enable requireCapitalizedConstructors\n        }\n      }\n    }\n\n    return this._tables;\n  };\n\n  /**\n   * Reads the metadata tables header.\n   *\n   * @return {TablesHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the table stream is missing or if the header is invalid.\n   */\n  this.readTablesHeader = function () {\n    if (!this._tablesHeader) {\n      // Locate the table stream and throw an exception if it is missing.\n      var streamHeader = this.getStreamHeader('#~');\n\n      if (!streamHeader) {\n        throw new ParserException('The #~ stream is missing');\n      }\n\n      // Move the stream cursor to the position of the tables header.\n      this.setPosition(this.readMetadataHeader().offset + streamHeader.offset);\n\n      // Read the header and throw an exception if it is invalid.\n      this._tablesHeader = new TablesHeader(this);\n\n      if ((this._tablesHeader.majorVersion !== 2) ||\n        (this._tablesHeader.minorVersion !== 0)) {\n        throw new ParserException('Invalid tables header (version: ' +\n          this._tablesHeader.majorVersion + '.' +\n          this._tablesHeader.minorVersion + ' - expected: 2.0)');\n      }\n    }\n\n    return this._tablesHeader;\n  };\n\n  /**\n   * Retrieves the constructor for a table row.\n   *\n   * @param {number} tableIndex\n   *   The table index.\n   *\n   * @return {Function}\n   *   Returns a constructor.\n   *\n   * @protected\n   */\n  this._getTableRowClass = function (tableIndex) {\n    switch (tableIndex) {\n      case TableIndexes.ASSEMBLY:\n        return AssemblyRow;\n\n      case TableIndexes.ASSEMBLY_OS:\n        return AssemblyOSRow;\n\n      case TableIndexes.ASSEMBLY_PROCESSOR:\n        return AssemblyProcessorRow;\n\n      case TableIndexes.ASSEMBLY_REF:\n        return AssemblyRefRow;\n\n      case TableIndexes.ASSEMBLY_REF_OS:\n        return AssemblyRefOSRow;\n\n      case TableIndexes.ASSEMBLY_REF_PROCESSOR:\n        return AssemblyRefProcessorRow;\n\n      case TableIndexes.CLASS_LAYOUT:\n        return ClassLayoutRow;\n\n      case TableIndexes.CONSTANT:\n        return ConstantRow;\n\n      case TableIndexes.CUSTOM_ATTRIBUTE:\n        return CustomAttributeRow;\n\n      case TableIndexes.DECL_SECURITY:\n        return DeclSecurityRow;\n\n      case TableIndexes.EVENT:\n        return EventRow;\n\n      case TableIndexes.EVENT_MAP:\n        return EventMapRow;\n\n      case TableIndexes.EXPORTED_TYPE:\n        return ExportedTypeRow;\n\n      case TableIndexes.FIELD:\n        return FieldRow;\n\n      case TableIndexes.FIELD_LAYOUT:\n        return FieldLayoutRow;\n\n      case TableIndexes.FIELD_MARSHAL:\n        return FieldMarshalRow;\n\n      case TableIndexes.FIELD_RVA:\n        return FieldRVARow;\n\n      case TableIndexes.FILE:\n        return FileRow;\n\n      case TableIndexes.GENERIC_PARAM:\n        return GenericParamRow;\n\n      case TableIndexes.GENERIC_PARAM_CONSTRAINT:\n        return GenericParamConstraintRow;\n\n      case TableIndexes.IMPL_MAP:\n        return ImplMapRow;\n\n      case TableIndexes.INTERFACE_IMPL:\n        return InterfaceImplRow;\n\n      case TableIndexes.MANIFEST_RESOURCE:\n        return ManifestResourceRow;\n\n      case TableIndexes.MEMBER_REF:\n        return MemberRefRow;\n\n      case TableIndexes.NESTED_CLASS:\n        return NestedClassRow;\n\n      case TableIndexes.METHOD_DEF:\n        return MethodDefRow;\n\n      case TableIndexes.METHOD_IMPL:\n        return MethodImplRow;\n\n      case TableIndexes.METHOD_SEMANTICS:\n        return MethodSemanticsRow;\n\n      case TableIndexes.MODULE:\n        return ModuleRow;\n\n      case TableIndexes.MODULE_REF:\n        return ModuleRefRow;\n\n      case TableIndexes.PARAM:\n        return ParamRow;\n\n      case TableIndexes.PROPERTY:\n        return PropertyRow;\n\n      case TableIndexes.PROPERTY_MAP:\n        return PropertyMapRow;\n\n      case TableIndexes.STAND_ALONE_SIG:\n        return StandAloneSigRow;\n\n      case TableIndexes.TYPE_DEF:\n        return TypeDefRow;\n\n      case TableIndexes.TYPE_REF:\n        return TypeRefRow;\n\n      case TableIndexes.TYPE_SPEC:\n        return TypeSpecRow;\n\n      default:\n        throw new ParserException('Unsupported metadata table at index ' +\n          tableIndex);\n    }\n  };\n\n}\n\nmodule.exports = CILParser;\n","/**\n * This file is part of ComilaJS.\n *\n * ComilaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComilaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComilaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CILParser = require('./Parser/CILParser');\nvar Compiler = require('./Compiler/Compiler');\n\n/**\n * Class Main.\n *\n * @constructor\n * @final\n */\nfunction Main () {\n\n  'use strict';\n\n  /**\n   * Runs an executable.\n   *\n   * @param {string} path\n   *   The path.\n   *\n   * @return {Main}\n   *   Returns this instance.\n   */\n  this.run = function (path) {\n    console.info('Downloading application \\'' + path + '\\'');\n\n    (new CILParser(path)).loadFile(function (parser) {\n      console.info('Compiling application \\'' + parser.getPath() + '\\'');\n\n      var compiler;\n      var module;\n\n      try {\n        compiler = new Compiler(parser);\n        module = compiler.compile();\n      }\n      catch (ex) {\n        console.error('Failed to compile application \\'' +\n          parser.getPath() + '\\': ' + ex.getMessage());\n        return;\n      }\n\n      console.info('Running application \\'' + parser.getPath() + '\\'');\n\n      try {\n        module.run();\n      }\n      catch (ex) {\n        console.error('Failed to run application \\'' +\n          parser.getPath() + '\\': ' + ex.getMessage());\n      }\n    }, function (parser, status) {\n      console.error('Failed to download application \\'' + parser.getPath() +\n        '\\' (HTTP ' + status + ')');\n    });\n\n    return this;\n  };\n\n}\n\nmodule.exports = new Main();\n"],"sourceRoot":""}