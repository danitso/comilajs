{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///comla.min.js","webpack:///webpack/bootstrap 4e83ff574a3fd61cf7f0","webpack:///./src/Parser/Constant/TableIndexes.js","webpack:///./src/Parser/Reference/RowReference.js","webpack:///./node_modules/extend/index.js","webpack:///./src/Parser/Header/DataDirectoryHeader.js","webpack:///./src/Parser/Exception/ParserException.js","webpack:///./src/Parser/Constant/ImageAttributes.js","webpack:///./src/Parser/Directory/ResourceDirectory.js","webpack:///./src/Main.js","webpack:///./src/Parser/CILParser.js","webpack:///./src/Parser/Row/AssemblyOSRow.js","webpack:///./src/Parser/Row/AssemblyProcessorRow.js","webpack:///./src/Parser/Row/AssemblyRefOSRow.js","webpack:///./src/Parser/Row/AssemblyRefProcessorRow.js","webpack:///./src/Parser/Row/AssemblyRefRow.js","webpack:///./src/Parser/Row/AssemblyRow.js","webpack:///./src/Parser/Row/ClassLayoutRow.js","webpack:///./src/Parser/Row/ConstantRow.js","webpack:///./src/Parser/Header/CORHeader.js","webpack:///./src/Parser/Row/CustomAttributeRow.js","webpack:///./src/Parser/Row/DeclSecurityRow.js","webpack:///./src/Parser/Row/EventMapRow.js","webpack:///./src/Parser/Row/EventRow.js","webpack:///./src/Parser/Row/ExportedTypeRow.js","webpack:///./src/Parser/Row/FieldRow.js","webpack:///./src/Parser/Row/FieldRVARow.js","webpack:///./src/Parser/Row/FieldLayoutRow.js","webpack:///./src/Parser/Row/FieldMarshalRow.js","webpack:///./src/Parser/Row/FileRow.js","webpack:///./src/Parser/Row/GenericParamRow.js","webpack:///./src/Parser/Row/GenericParamConstraintRow.js","webpack:///./src/Parser/Row/ImplMapRow.js","webpack:///./src/Parser/Row/InterfaceImplRow.js","webpack:///./src/Exception/CustomException.js","webpack:///./src/Parser/Row/ManifestResourceRow.js","webpack:///./src/Parser/Header/MetadataHeader.js","webpack:///./src/Parser/Header/StreamHeader.js","webpack:///./src/Parser/Row/MemberRefRow.js","webpack:///./src/Parser/Row/NestedClassRow.js","webpack:///./src/Parser/Row/MethodDefRow.js","webpack:///./src/Parser/Header/MethodHeader.js","webpack:///./src/Parser/Constant/MethodFlags.js","webpack:///./src/Parser/Row/MethodImplRow.js","webpack:///./src/Parser/Row/MethodSemanticsRow.js","webpack:///./src/Parser/Row/ModuleRefRow.js","webpack:///./src/Parser/Row/ModuleRow.js","webpack:///./src/Parser/Row/ParamRow.js","webpack:///./src/Parser/PEParser.js","webpack:///./src/Parser/BinaryParser.js","webpack:///./src/Parser/Header/COFFHeader.js","webpack:///./src/Parser/Header/DOSHeader.js","webpack:///./src/Parser/Header/OptionalHeader.js","webpack:///./src/Parser/Entry/ResourceDirectoryEntry.js","webpack:///./src/Parser/Entry/ResourceDataEntry.js","webpack:///./src/Parser/Header/SectionHeader.js","webpack:///./src/Parser/Row/PropertyMapRow.js","webpack:///./src/Parser/Row/PropertyRow.js","webpack:///./src/Parser/Row/StandAloneSigRow.js","webpack:///./src/Parser/Header/TablesHeader.js","webpack:///./src/Parser/Row/TypeDefRow.js","webpack:///./src/Parser/Row/TypeRefRow.js","webpack:///./src/Parser/Row/TypeSpecRow.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","TableIndexes","ASSEMBLY","ASSEMBLY_OS","ASSEMBLY_PROCESSOR","ASSEMBLY_REF","ASSEMBLY_REF_OS","ASSEMBLY_REF_PROCESSOR","CLASS_LAYOUT","CONSTANT","CUSTOM_ATTRIBUTE","DECL_SECURITY","EVENT","EVENT_MAP","EXPORTED_TYPE","FIELD","FIELD_LAYOUT","FIELD_MARSHAL","FIELD_RVA","FILE","GENERIC_PARAM","GENERIC_PARAM_CONSTRAINT","IMPL_MAP","INTERFACE_IMPL","MANIFEST_RESOURCE","MEMBER_REF","METHOD_DEF","METHOD_IMPL","METHOD_SEMANTICS","MODULE","MODULE_REF","NESTED_CLASS","PARAM","PROPERTY","PROPERTY_MAP","STAND_ALONE_SIG","TYPE_REF","TYPE_DEF","TYPE_SPEC","RowReference","reader","tableIndexes","tableIndex","rowIndex","bv","bc","size","tables","readTables","Math","pow","length","tableRowIndex","readUInt","hasOwn","toStr","toString","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","key","extend","options","src","copy","copyIsArray","clone","target","arguments","deep","DataDirectoryHeader","virtualAddress","ParserException","message","Extend","CustomException","ImageAttributes","IMAGE_DOS_SIGNATURE","IMAGE_NT_OPTIONAL_HDR64_MAGIC","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_SIGNATURE","IMAGE_ROM_OPTIONAL_HDR_MAGIC","ResourceDirectory","characteristics","timeDateStamp","majorVersion","minorVersion","numberOfNamedEntries","numberOfIdEntries","entries","position","getPosition","setPosition","ResourceDirectoryEntry","Main","run","path","console","log","CILParser","loadFile","readDOSHeader","readCOFFHeader","readOptionalHeader","readSectionHeaders","readResourceDirectory","readCORHeader","readMetadataHeader","readTablesHeader","readMethodHeaders","JSON","stringify","readMethodInstructions","readStringFromHeap","data","PEParser","_corHeader","_metadataHeader","_methodHeaders","_tables","_tablesHeader","getStreamHeader","streamHeaders","readBlobIndex","heapOffsetSizes","dataDirectory","getFileOffset","CORHeader","sizeOfHeader","readGUIDFromHeap","index","streamHeader","offset","guid","readString","hex","charCodeAt","readGUIDIndex","metadata","MetadataHeader","signature","rva","MethodHeader","header","codeOffset","readBytes","codeSize","decodeURIComponent","encodeURIComponent","readStringIndex","tablesOffset","maskValidArray","rowClass","_getTableRowClass","rowCount","r","TablesHeader","reserved1","reserved2","AssemblyRow","AssemblyOSRow","AssemblyProcessorRow","AssemblyRefRow","AssemblyRefOSRow","AssemblyRefProcessorRow","ClassLayoutRow","ConstantRow","CustomAttributeRow","DeclSecurityRow","EventRow","EventMapRow","ExportedTypeRow","FieldRow","FieldLayoutRow","FieldMarshalRow","FieldRVARow","FileRow","GenericParamRow","GenericParamConstraintRow","ImplMapRow","InterfaceImplRow","ManifestResourceRow","MemberRefRow","NestedClassRow","MethodDefRow","MethodImplRow","MethodSemanticsRow","ModuleRow","ModuleRefRow","ParamRow","PropertyRow","PropertyMapRow","StandAloneSigRow","TypeDefRow","TypeRefRow","TypeSpecRow","osPlatformID","osMajorVersion","osMinorVersion","processor","assemblyRef","buildNumber","revisionNumber","flags","publicKeyOrToken","culture","hashValue","hashAlgId","publicKey","packingSize","classSize","parent","type","value","majorRuntimeVersion","minorRuntimeVersion","entryPoint","resources","strongNameSignature","codeManagerTable","vTableFixups","exportAddressTableJumps","managedNativeHeader","action","permissionSet","eventList","eventFlags","eventType","typeDefId","typeName","typeNamespace","implementation","field","nativeType","number","owner","constraint","mappingFlags","memberForwarded","importName","importScope","class","interface","_message","_type","getMessage","getType","reserved","versionLength","version","readUTF8String","streams","StreamHeader","nestedClass","enclosingClass","implFlags","paramList","flagsAndSize","tiny","MethodFlags","TINY_FORMAT","headerSize","maxStack","localVarSigTok","FAT_FORMAT","INITIALIZE_LOCALS","MORE_SECTIONS","methodBody","methodDeclaration","semantics","method","association","generation","mvid","encId","encBaseId","sequence","BinaryParser","_coffHeader","_dosHeader","_optionalHeader","_resourceDirectory","_resourceDirectoryFileOffset","_sectionHeaders","sectionHeaders","sizeOfRawData","pointerToRawData","getResourceDirectoryFileOffset","sectionHeader","lfanew","COFFHeader","DOSHeader","magic","sizeOfOptionalHeader","OptionalHeader","numberOfSections","SectionHeader","_data","Uint8Array","_path","_position","getPath","getSize","byteLength","success","error","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","response","send","count","bytes","push","terminate","boundary","String","fromCharCode","endsWith","indexOf","substring","integer","readUIntArray","integers","decodeURI","setPath","machine","pointerToSymbolTable","numberOfSymbols","cblp","cp","crlc","cparhdr","minAlloc","maxAlloc","ss","sp","csum","ip","cs","lfarlc","ovno","res1","oemid","oeminfo","res2","majorLinkerVersion","minorLinkerVersion","sizeOfCode","sizeOfInitializedData","sizeOfUninitializedData","addressOfEntryPoint","baseOfCode","baseOfData","imageBase","sectionAlignment","fileAlignment","majorOperatingSystemVersion","minorOperatingSystemVersion","majorImageVersion","minorImageVersion","majorSubsystemVersion","minorSubsystemVersion","win32VersionValue","sizeOfImage","sizeOfHeaders","checkSum","subsystem","dllCharacteristics","sizeOfStackReserve","sizeOfStackCommit","sizeOfHeapReserve","sizeOfHeapCommit","loaderFlags","numberOfRvaAndSizes","offsetToData","directory","ResourceDataEntry","codePage","misc","pointerToRelocations","pointerToLinenumbers","numberOfRelocations","numberOfLinenumbers","propertyList","i1","i2","maskValid","maskSortedArray","maskSorted","extends","fieldList","methodList","resolutionScope"],"mappings":"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","file":"comla.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"comlajs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"comlajs\"] = factory();\n\telse\n\t\troot[\"comlajs\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * ComlaJS v0.3.0\n * Copyright (c) 2017 Danitso\n * http://www.comlajs.org/\n * \n * This program is free software: you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"comlajs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"comlajs\"] = factory();\n\telse\n\t\troot[\"comlajs\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TableIndexes.\n *\n * @constructor\n * @struct\n */\nfunction TableIndexes () {\n\n  'use strict';\n\n  /**\n   * The table index for the 'Assembly' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY = 32;\n\n  /**\n   * The table index for the 'AssemblyOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_OS = 34;\n\n  /**\n   * The table index for the 'AssemblyProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_PROCESSOR = 33;\n\n  /**\n   * The table index for the 'AssemblyRef' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF = 35;\n\n  /**\n   * The table index for the 'AssemblyRefOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_OS = 37;\n\n  /**\n   * The table index for the 'AssemblyRefProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_PROCESSOR = 36;\n\n  /**\n   * The table index for the 'ClassLayout' table.\n   *\n   * @const {number}\n   */\n  this.CLASS_LAYOUT = 15;\n\n  /**\n   * The table index for the 'Constant' table.\n   *\n   * @const {number}\n   */\n  this.CONSTANT = 11;\n\n  /**\n   * The table index for the 'CustomAttribute' table.\n   *\n   * @const {number}\n   */\n  this.CUSTOM_ATTRIBUTE = 12;\n\n  /**\n   * The table index for the 'DeclSecurity' table.\n   *\n   * @const {number}\n   */\n  this.DECL_SECURITY = 14;\n\n  /**\n   * The table index for the 'Event' table.\n   *\n   * @const {number}\n   */\n  this.EVENT = 20;\n\n  /**\n   * The table index for the 'EventMap' table.\n   *\n   * @const {number}\n   */\n  this.EVENT_MAP = 18;\n\n  /**\n   * The table index for the 'ExportedType' table.\n   *\n   * @const {number}\n   */\n  this.EXPORTED_TYPE = 39;\n\n  /**\n   * The table index for the 'Field' table.\n   *\n   * @const {number}\n   */\n  this.FIELD = 4;\n\n  /**\n   * The table index for the 'FieldLayout' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_LAYOUT = 16;\n\n  /**\n   * The table index for the 'FieldMarshal' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_MARSHAL = 13;\n\n  /**\n   * The table index for the 'FieldRVA' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_RVA = 29;\n\n  /**\n   * The table index for the 'File' table.\n   *\n   * @const {number}\n   */\n  this.FILE = 38;\n\n  /**\n   * The table index for the 'GenericParam' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM = 42;\n\n  /**\n   * The table index for the 'GenericParamConstraint' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM_CONSTRAINT = 44;\n\n  /**\n   * The table index for the 'ImplMap' table.\n   *\n   * @const {number}\n   */\n  this.IMPL_MAP = 28;\n\n  /**\n   * The table index for the 'InterfaceImpl' table.\n   *\n   * @const {number}\n   */\n  this.INTERFACE_IMPL = 9;\n\n  /**\n   * The table index for the 'ManifestResource' table.\n   *\n   * @const {number}\n   */\n  this.MANIFEST_RESOURCE = 40;\n\n  /**\n   * The table index for the 'MemberRef' table.\n   *\n   * @const {number}\n   */\n  this.MEMBER_REF = 10;\n\n  /**\n   * The table index for the 'MethodDef' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_DEF = 6;\n\n  /**\n   * The table index for the 'MethodImpl' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_IMPL = 25;\n\n  /**\n   * The table index for the 'MethodSemantics' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_SEMANTICS = 24;\n\n  /**\n   * The table index for the 'Module' table.\n   *\n   * @const {number}\n   */\n  this.MODULE = 0;\n\n  /**\n   * The table index for the 'ModuleRef' table.\n   *\n   * @const {number}\n   */\n  this.MODULE_REF = 26;\n\n  /**\n   * The table index for the 'NestedClass' table.\n   *\n   * @const {number}\n   */\n  this.NESTED_CLASS = 41;\n\n  /**\n   * The table index for the 'Param' table.\n   *\n   * @const {number}\n   */\n  this.PARAM = 8;\n\n  /**\n   * The table index for the 'Property' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY = 23;\n\n  /**\n   * The table index for the 'PropertyMap' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY_MAP = 21;\n\n  /**\n   * The table index for the 'StandAloneSig' table.\n   *\n   * @const {number}\n   */\n  this.STAND_ALONE_SIG = 17;\n\n  /**\n   * The table index for the 'TypeRef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_REF = 1;\n\n  /**\n   * The table index for the 'TypeDef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_DEF = 2;\n\n  /**\n   * The table index for the 'TypeSpec' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_SPEC = 27;\n\n}\n\nmodule.exports = new TableIndexes();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class RowReference.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n * @param {Array<number>} tableIndexes\n *   The table indexes.\n *\n * @constructor\n * @struct\n */\nfunction RowReference (reader, tableIndexes) {\n\n  'use strict';\n\n  /**\n   * The table index.\n   *\n   * @type {number}\n   */\n  this.tableIndex = -1;\n\n  /**\n   * The row index.\n   *\n   * @type {number}\n   */\n  this.rowIndex = -1;\n\n  // Initialize the object.\n  (function (object, reader, tableIndexes) {\n\n    var bc = 1, bv, size = 2, tables = reader.readTables();\n\n    // Determine how many bits are required to represent the table index.\n    while ((bv = Math.pow(2, bc - 1)) < tableIndexes.length) {\n      bc++;\n    }\n\n    // Determine if the index is represented as a 16-bit or 32-bit integer.\n    for (var i = 0; i < tableIndexes.length; i++) {\n      if ((tables[tableIndexes[i]]) &&\n        (tables[tableIndexes[i]].length > 0xFFFF)) {\n        size = 4;\n        break;\n      }\n    }\n\n    // Read the integer that contains both the table index and the row index.\n    var tableRowIndex = reader.readUInt(size);\n\n    // Split the integer into two separate values and update the properties.\n    object.tableIndex = tableIndexes[tableRowIndex & (bv - 1)];\n    object.rowIndex = tableRowIndex >> bc;\n\n  }(this, reader, tableIndexes));\n\n}\n\nmodule.exports = RowReference;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DataDirectoryHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DataDirectoryHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The relative virtual address of the table.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the table, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n}\n\nmodule.exports = DataDirectoryHeader;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CustomException = __webpack_require__(32);\nvar Extend = __webpack_require__(2);\n\n/**\n * Class ParserException.\n *\n * @param {string} message\n *   The message.\n *\n * @constructor\n * @extends {CustomException}\n */\nfunction ParserException (message) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new CustomException(message, 'ParserException'));\n\n}\n\nmodule.exports = ParserException;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ImageAttributes.\n *\n * @constructor\n * @struct\n */\nfunction ImageAttributes () {\n\n  'use strict';\n\n  /**\n   * The DOS header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_DOS_SIGNATURE = 0x5a4d;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\n\n  /**\n   * The NT header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_SIGNATURE = 0x4550;\n\n  /**\n   * The file is a ROM image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_ROM_OPTIONAL_HDR_MAGIC = 0x107;\n\n}\n\nmodule.exports = new ImageAttributes();\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDirectory.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectory (reader) {\n\n  'use strict';\n\n  /**\n   * The characteristics.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n  /**\n   * The time/date stamp describing the creation time of the resource.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The major version number.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use names and that follow this structure.\n   *\n   * @type {number}\n   */\n  this.numberOfNamedEntries = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use integer IDs, and which follow this\n   * structure.\n   *\n   * @type {number}\n   */\n  this.numberOfIdEntries = reader.readUInt(2);\n\n  /**\n   * The resource directory entries.\n   *\n   * @type {Array<ResourceDirectoryEntry>}\n   */\n  this.entries = new Array(this.numberOfIdEntries + this.numberOfNamedEntries);\n\n  // Parse the resource directory entries.\n  var position = reader.getPosition();\n\n  for (var i = 0; i < this.entries.length; i++) {\n    reader.setPosition(position + (i * 8));\n    this.entries[i] = new ResourceDirectoryEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectory;\n\nvar ResourceDirectoryEntry = __webpack_require__(51);\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CILParser = __webpack_require__(8);\n\n/**\n * Class Main.\n *\n * @constructor\n * @final\n */\nfunction Main () {\n\n  'use strict';\n\n  /**\n   * Runs an executable.\n   *\n   * @param {string} path\n   *   The path.\n   */\n  this.run = function (path) {\n    console.log('#### This library is not yet able to run applications ####');\n    console.log('----------------------------------------------------------');\n    console.log('Dumping information about the executable:');\n\n    (new CILParser(path)).loadFile(function (reader) {\n      console.log(reader.readDOSHeader());\n      console.log(reader.readCOFFHeader());\n      console.log(reader.readOptionalHeader());\n      console.log(reader.readSectionHeaders());\n      console.log(reader.readResourceDirectory());\n      console.log(reader.readCORHeader());\n      console.log(reader.readMetadataHeader());\n      console.log(reader.readTablesHeader());\n      console.log(reader.readTables());\n      console.log(reader.readMethodHeaders());\n      console.log(JSON.stringify(reader.readMethodInstructions(\n        reader.readMethodHeaders()[0])));\n      console.log(reader.readStringFromHeap(10));\n    }, function () {\n      console.log('Failed to load the file');\n    });\n  };\n\n}\n\nmodule.exports = new Main();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar AssemblyOSRow = __webpack_require__(9);\nvar AssemblyProcessorRow = __webpack_require__(10);\nvar AssemblyRefOSRow = __webpack_require__(11);\nvar AssemblyRefProcessorRow = __webpack_require__(12);\nvar AssemblyRefRow = __webpack_require__(13);\nvar AssemblyRow = __webpack_require__(14);\nvar ClassLayoutRow = __webpack_require__(15);\nvar ConstantRow = __webpack_require__(16);\nvar CORHeader = __webpack_require__(17);\nvar CustomAttributeRow = __webpack_require__(18);\nvar DeclSecurityRow = __webpack_require__(19);\nvar EventMapRow = __webpack_require__(20);\nvar EventRow = __webpack_require__(21);\nvar ExportedTypeRow = __webpack_require__(22);\nvar Extend = __webpack_require__(2);\nvar FieldRow = __webpack_require__(23);\nvar FieldRVARow = __webpack_require__(24);\nvar FieldLayoutRow = __webpack_require__(25);\nvar FieldMarshalRow = __webpack_require__(26);\nvar FileRow = __webpack_require__(27);\nvar GenericParamRow = __webpack_require__(28);\nvar GenericParamConstraintRow = __webpack_require__(29);\nvar ImplMapRow = __webpack_require__(30);\nvar InterfaceImplRow = __webpack_require__(31);\nvar ParserException = __webpack_require__(4);\nvar ManifestResourceRow = __webpack_require__(33);\nvar MetadataHeader = __webpack_require__(34);\nvar MemberRefRow = __webpack_require__(36);\nvar NestedClassRow = __webpack_require__(37);\nvar MethodDefRow = __webpack_require__(38);\nvar MethodHeader = __webpack_require__(39);\nvar MethodImplRow = __webpack_require__(41);\nvar MethodSemanticsRow = __webpack_require__(42);\nvar ModuleRefRow = __webpack_require__(43);\nvar ModuleRow = __webpack_require__(44);\nvar ParamRow = __webpack_require__(45);\nvar PEParser = __webpack_require__(46);\nvar PropertyMapRow = __webpack_require__(54);\nvar PropertyRow = __webpack_require__(55);\nvar StandAloneSigRow = __webpack_require__(56);\nvar TableIndexes = __webpack_require__(0);\nvar TablesHeader = __webpack_require__(57);\nvar TypeDefRow = __webpack_require__(58);\nvar TypeRefRow = __webpack_require__(59);\nvar TypeSpecRow = __webpack_require__(60);\n\n/**\n * Class CILParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {PEParser}\n */\nfunction CILParser (path, data) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new PEParser(path, data));\n\n  /**\n   * The COR header.\n   *\n   * @type {CORHeader}\n   *\n   * @protected\n   */\n  this._corHeader = null;\n\n  /**\n   * The metadata header.\n   *\n   * @type {MetadataHeader}\n   *\n   * @protected\n   */\n  this._metadataHeader = null;\n\n  /**\n   * The method headers.\n   *\n   * @type {Array<MethodHeader>}\n   *\n   * @protected\n   */\n  this._methodHeaders = null;\n\n  /**\n   * The metadata tables.\n   *\n   * @type {Array<Object>}\n   *\n   * @protected\n   */\n  this._tables = null;\n\n  /**\n   * The tables header.\n   *\n   * @type {TablesHeader}\n   *\n   * @protected\n   */\n  this._tablesHeader = null;\n\n  /**\n   * Retrieves a stream header.\n   *\n   * @param {string} name\n   *   The stream name.\n   *\n   * @return {StreamHeader|null}\n   *   Returns the stream header or NULL if not found.\n   */\n  this.getStreamHeader = function (name) {\n    var streamHeaders = this.readMetadataHeader().streamHeaders;\n\n    for (var i = 0; i < streamHeaders.length; i++) {\n      if (streamHeaders[i].name === name) {\n        return streamHeaders[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Reads a blob index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readBlobIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x04) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the COR header.\n   *\n   * @return {CORHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readCORHeader = function () {\n    if (!this._corHeader) {\n      // Verify that the CLR (formerly COM) data directory is available.\n      if ((this.readOptionalHeader().dataDirectory.length < 15) ||\n        (this.readOptionalHeader().dataDirectory[14].size < 1)) {\n        throw new ParserException('The CLR data directory is missing');\n      }\n\n      // Move the stream cursor to the position of the COR header.\n      this.setPosition(this.getFileOffset(\n        this.readOptionalHeader().dataDirectory[14].virtualAddress));\n\n      // Read the the header and throw an exception if it is invalid.\n      this._corHeader = new CORHeader(this);\n\n      if (this._corHeader.sizeOfHeader !== 72) {\n        throw new ParserException('Invalid COR header');\n      }\n    }\n\n    return this._corHeader;\n  };\n\n  /**\n   * Reads a GUID from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a 128-bit unique identifier.\n   */\n  this.readGUIDFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#GUID');\n\n    if (!streamHeader) {\n      throw new ParserException('The GUID stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the GUID from the stream and format it before returning it.\n    var guid = '', s = this.readString(16);\n\n    for (var i = 0; i < s.length; i++) {\n      if ((i === 4) || (i === 6) || (i === 8) || (i === 10)) {\n        guid += '-';\n      }\n\n      var hex = s.charCodeAt(i).toString(16);\n      guid += (hex.length === 2) ? hex : '0' + hex;\n    }\n\n    return guid;\n  };\n\n  /**\n   * Reads a GUID index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readGUIDIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x02) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the CLR metadata header.\n   *\n   * @return {MetadataHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readMetadataHeader = function () {\n    if (!this._metadataHeader) {\n      // Verify that the metadata directory is available.\n      if (this.readCORHeader().metadata.size < 1) {\n        throw new ParserException('The metadata header is missing');\n      }\n\n      // Move the stream cursor to the position of the metadata header.\n      this.setPosition(this.getFileOffset(\n        this.readCORHeader().metadata.virtualAddress));\n\n      // Read the header and throw an exception if it is invalid.\n      this._metadataHeader = new MetadataHeader(this);\n\n      if (this._metadataHeader.signature !== 0x424A5342) {\n        throw new ParserException('Invalid metadata header');\n      }\n    }\n\n    return this._metadataHeader;\n  };\n\n  /**\n   * Reads the CLR method headers.\n   *\n   * @return {Array<MethodHeader>}\n   *   Returns an array of headers.\n   */\n  this.readMethodHeaders = function () {\n    if (!this._methodHeaders) {\n      var tables = this.readTables();\n\n      // Initialize the array of method headers.\n      this._methodHeaders = new Array(tables[TableIndexes.METHOD_DEF].length);\n\n      // Parse the method headers referenced by the MethodDef table.\n      for (var i = 0; i < tables[TableIndexes.METHOD_DEF].length; i++) {\n        this.setPosition(this.getFileOffset(tables[TableIndexes.METHOD_DEF][i]\n          .rva));\n        this._methodHeaders[i] = new MethodHeader(this);\n      }\n    }\n\n    return this._methodHeaders;\n  };\n\n  /**\n   * Reads the IL instructions for a method.\n   *\n   * @param {MethodHeader} header\n   *   The method header.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readMethodInstructions = function (header) {\n    this.setPosition(header.codeOffset);\n    return this.readBytes(header.codeSize);\n  };\n\n  /**\n   * Reads a string from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a UTF-8 encoded string.\n   */\n  this.readStringFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#Strings');\n\n    if (!streamHeader) {\n      throw new ParserException('The string stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the NULL terminated string.\n    return decodeURIComponent(encodeURIComponent(this.readString(0, true)));\n  };\n\n  /**\n   * Reads a string index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readStringIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x01) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the metadata tables.\n   *\n   * @return {Object}\n   *   Returns an array containing the tables.\n   */\n  this.readTables = function () {\n    if (!this._tables) {\n      // Ensure that the tables header has been read.\n      var header = this.readTablesHeader();\n\n      // Move the buffer cursor to the position of the tables.\n      this.setPosition(header.tablesOffset);\n\n      // Read the row count for each of the tables as we cannot read the rows\n      // before this has been done.\n      this._tables = [];\n\n      for (var i = 0; i < 64; i++) {\n        if (((i < 32) && (header.maskValidArray[0] & Math.pow(2, i)) === 0) ||\n          ((i >= 32) && (header.maskValidArray[1] & Math.pow(2, i - 32)) ===\n          0)) {\n          continue;\n        }\n\n        this._tables[i] = new Array(this.readUInt(4));\n      }\n\n      // Now that the row counts have been read, go ahead reading all the rows\n      // one table at a time.\n      for (i = 0; i < 64; i++) {\n        if (!this._tables[i]) {\n          continue;\n        }\n\n        var rowClass = this._getTableRowClass(i);\n        var rowCount = this._tables[i].length;\n\n        for (var r = 0; r < rowCount; r++) {\n          // jscs:disable requireCapitalizedConstructors\n          this._tables[i][r] = new rowClass(this);\n          // jscs:enable requireCapitalizedConstructors\n        }\n      }\n    }\n\n    return this._tables;\n  };\n\n  /**\n   * Reads the metadata tables header.\n   *\n   * @return {TablesHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the table stream is missing or if the header is invalid.\n   */\n  this.readTablesHeader = function () {\n    if (!this._tablesHeader) {\n      // Locate the table stream and throw an exception if it is missing.\n      var streamHeader = this.getStreamHeader('#~');\n\n      if (!streamHeader) {\n        throw new ParserException('The stream for the tables is missing');\n      }\n\n      // Move the stream cursor to the position of the tables header.\n      this.setPosition(this.readMetadataHeader().offset + streamHeader.offset);\n\n      // Read the header and throw an exception if it is invalid.\n      this._tablesHeader = new TablesHeader(this);\n\n      if ((this._tablesHeader.reserved1 !== 0) ||\n        (this._tablesHeader.reserved2 !== 1)) {\n        throw new ParserException('Invalid tables header');\n      }\n    }\n\n    return this._tablesHeader;\n  };\n\n  /**\n   * Retrieves the constructor for a table row.\n   *\n   * @param {number} tableIndex\n   *   The table index.\n   *\n   * @return {Function}\n   *   Returns a constructor.\n   *\n   * @protected\n   */\n  this._getTableRowClass = function (tableIndex) {\n    switch (tableIndex) {\n      case TableIndexes.ASSEMBLY:\n        return AssemblyRow;\n\n      case TableIndexes.ASSEMBLY_OS:\n        return AssemblyOSRow;\n\n      case TableIndexes.ASSEMBLY_PROCESSOR:\n        return AssemblyProcessorRow;\n\n      case TableIndexes.ASSEMBLY_REF:\n        return AssemblyRefRow;\n\n      case TableIndexes.ASSEMBLY_REF_OS:\n        return AssemblyRefOSRow;\n\n      case TableIndexes.ASSEMBLY_REF_PROCESSOR:\n        return AssemblyRefProcessorRow;\n\n      case TableIndexes.CLASS_LAYOUT:\n        return ClassLayoutRow;\n\n      case TableIndexes.CONSTANT:\n        return ConstantRow;\n\n      case TableIndexes.CUSTOM_ATTRIBUTE:\n        return CustomAttributeRow;\n\n      case TableIndexes.DECL_SECURITY:\n        return DeclSecurityRow;\n\n      case TableIndexes.EVENT:\n        return EventRow;\n\n      case TableIndexes.EVENT_MAP:\n        return EventMapRow;\n\n      case TableIndexes.EXPORTED_TYPE:\n        return ExportedTypeRow;\n\n      case TableIndexes.FIELD:\n        return FieldRow;\n\n      case TableIndexes.FIELD_LAYOUT:\n        return FieldLayoutRow;\n\n      case TableIndexes.FIELD_MARSHAL:\n        return FieldMarshalRow;\n\n      case TableIndexes.FIELD_RVA:\n        return FieldRVARow;\n\n      case TableIndexes.FILE:\n        return FileRow;\n\n      case TableIndexes.GENERIC_PARAM:\n        return GenericParamRow;\n\n      case TableIndexes.GENERIC_PARAM_CONSTRAINT:\n        return GenericParamConstraintRow;\n\n      case TableIndexes.IMPL_MAP:\n        return ImplMapRow;\n\n      case TableIndexes.INTERFACE_IMPL:\n        return InterfaceImplRow;\n\n      case TableIndexes.MANIFEST_RESOURCE:\n        return ManifestResourceRow;\n\n      case TableIndexes.MEMBER_REF:\n        return MemberRefRow;\n\n      case TableIndexes.NESTED_CLASS:\n        return NestedClassRow;\n\n      case TableIndexes.METHOD_DEF:\n        return MethodDefRow;\n\n      case TableIndexes.METHOD_IMPL:\n        return MethodImplRow;\n\n      case TableIndexes.METHOD_SEMANTICS:\n        return MethodSemanticsRow;\n\n      case TableIndexes.MODULE:\n        return ModuleRow;\n\n      case TableIndexes.MODULE_REF:\n        return ModuleRefRow;\n\n      case TableIndexes.PARAM:\n        return ParamRow;\n\n      case TableIndexes.PROPERTY:\n        return PropertyRow;\n\n      case TableIndexes.PROPERTY_MAP:\n        return PropertyMapRow;\n\n      case TableIndexes.STAND_ALONE_SIG:\n        return StandAloneSigRow;\n\n      case TableIndexes.TYPE_DEF:\n        return TypeDefRow;\n\n      case TableIndexes.TYPE_REF:\n        return TypeRefRow;\n\n      case TableIndexes.TYPE_SPEC:\n        return TypeSpecRow;\n\n      default:\n        throw new ParserException('Unsupported metadata table at index ' +\n          tableIndex);\n    }\n  };\n\n}\n\nmodule.exports = CILParser;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyOSRow (reader) {\n\n  'use strict';\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyOSRow;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyProcessorRow (reader) {\n\n  'use strict';\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyProcessorRow;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class AssemblyRefOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefOSRow (reader) {\n\n  'use strict';\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefOSRow;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class AssemblyRefProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefProcessorRow (reader) {\n\n  'use strict';\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefProcessorRow;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key or token as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKeyOrToken = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = AssemblyRefRow;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRow (reader) {\n\n  'use strict';\n\n  /**\n   * The id of the hashing algorithm.\n   *\n   * @type {number}\n   */\n  this.hashAlgId = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKey = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n}\n\nmodule.exports = AssemblyRow;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ClassLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ClassLayoutRow (reader) {\n\n  'use strict';\n\n  /**\n   * The packing size.\n   *\n   * @type {number}\n   */\n  this.packingSize = reader.readUInt(2);\n\n  /**\n   * The class size.\n   *\n   * @type {number}\n   */\n  this.classSize = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = ClassLayoutRow;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ConstantRow (reader) {\n\n  'use strict';\n\n  /**\n   * The type.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(1) + reader.readUInt(1);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM,\n    TableIndexes.PROPERTY\n  ]);\n\n  /**\n   * The value as an index into the Blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = ConstantRow;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = __webpack_require__(3);\n\n/**\n * Class CORHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction CORHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The size of the header, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeader = reader.readUInt(4);\n\n  /**\n   * The major runtime version.\n   *\n   * @type {number}\n   */\n  this.majorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The minor runtime version.\n   *\n   * @type {number}\n   */\n  this.minorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The metadata directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.metadata = new DataDirectoryHeader(reader);\n\n  /**\n   * The runtime flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The entry point address or token.\n   *\n   * @type {number}\n   */\n  this.entryPoint = reader.readUInt(4);\n\n  /**\n   * The resources directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.resources = new DataDirectoryHeader(reader);\n\n  /**\n   * The strong name signature directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.strongNameSignature = new DataDirectoryHeader(reader);\n\n  /**\n   * The code manager table directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.codeManagerTable = new DataDirectoryHeader(reader);\n\n  /**\n   * The VTable fix-ups directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.vTableFixups = new DataDirectoryHeader(reader);\n\n  /**\n   * The exported address table jumps directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.exportAddressTableJumps = new DataDirectoryHeader(reader);\n\n  /**\n   * The managed native header directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.managedNativeHeader = new DataDirectoryHeader(reader);\n\n}\n\nmodule.exports = CORHeader;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction CustomAttributeRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.FIELD,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_DEF,\n    TableIndexes.PARAM,\n    TableIndexes.INTERFACE_IMPL,\n    TableIndexes.MEMBER_REF,\n    TableIndexes.MODULE,\n    -1,\n    TableIndexes.PROPERTY,\n    TableIndexes.EVENT,\n    TableIndexes.STAND_ALONE_SIG,\n    TableIndexes.MODULE_REF,\n    TableIndexes.TYPE_SPEC,\n    TableIndexes.ASSEMBLY,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE,\n    TableIndexes.MANIFEST_RESOURCE\n  ]);\n\n  /**\n   * The reference to the type row.\n   *\n   * @type {RowReference}\n   */\n  this.type = new RowReference(reader, [\n    -1,\n    -1,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF,\n    -1\n  ]);\n\n  /**\n   * The value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = CustomAttributeRow;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class DeclSecurityRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction DeclSecurityRow (reader) {\n\n  'use strict';\n\n  /**\n   * The action.\n   *\n   * @type {number}\n   */\n  this.action = reader.readUInt(2);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.ASSEMBLY\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.permissionSet = reader.readBlobIndex();\n\n}\n\nmodule.exports = DeclSecurityRow;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class EventMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventMapRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first event row.\n   *\n   * @type {RowReference}\n   */\n  this.eventList = new RowReference(reader, [\n    TableIndexes.EVENT\n  ]);\n\n}\n\nmodule.exports = EventMapRow;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class EventRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventRow (reader) {\n\n  'use strict';\n\n  /**\n   * The event flags.\n   *\n   * @type {number}\n   */\n  this.eventFlags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The event type as a reference to a TypeDef, TypeRef or TypeSpec row.\n   *\n   * @type {RowReference}\n   */\n  this.eventType = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = EventRow;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ExportedTypeRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ExportedTypeRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type definition id.\n   *\n   * @type {number}\n   */\n  this.typeDefId = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ExportedTypeRow;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FieldRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldRow;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class FieldRVARow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRVARow (reader) {\n\n  'use strict';\n\n  /**\n   * The relative virtual address of the initial value.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The field as a reference to a Field row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldRVARow;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class FieldLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldLayoutRow (reader) {\n\n  'use strict';\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldLayoutRow;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class FieldMarshalRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldMarshalRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.nativeType = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldMarshalRow;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FileRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FileRow (reader) {\n\n  'use strict';\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = FileRow;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class GenericParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamRow (reader) {\n\n  'use strict';\n\n  /**\n   * The index of the generic parameter.\n   *\n   * @type {number}\n   */\n  this.number = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The reference to the owner of the generic parameter.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = GenericParamRow;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class GenericParamConstraintRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamConstraintRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the owner row.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.GENERIC_PARAM\n  ]);\n\n  /**\n   * The reference to the class row.\n   *\n   * @type {RowReference}\n   */\n  this.constraint = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = GenericParamConstraintRow;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ImplMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ImplMapRow (reader) {\n\n  'use strict';\n\n  /**\n   * The mapping flags.\n   *\n   * @type {number}\n   */\n  this.mappingFlags = reader.readUInt(2);\n\n  /**\n   * The forwarded member as a reference to a Field or MethodDef row.\n   *\n   * @type {RowReference}\n   */\n  this.memberForwarded = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The import name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.importName = reader.readStringIndex();\n\n  /**\n   * The import scope as a reference to a ModuleRef row.\n   *\n   * @type {RowReference}\n   */\n  this.importScope = new RowReference(reader, [\n    TableIndexes.MODULE\n  ]);\n\n}\n\nmodule.exports = ImplMapRow;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class InterfaceImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction InterfaceImplRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the interface definition row.\n   *\n   * @type {RowReference}\n   */\n  this.interface = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = InterfaceImplRow;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class CustomException.\n *\n * @param {string} message\n *   The message.\n * @param {string} type\n *   The type of exception.\n *\n * @constructor\n */\nfunction CustomException (message, type) {\n\n  'use strict';\n\n  /**\n   * The exception message.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._message = message;\n\n  /**\n   * The exception type.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._type = (typeof type !== 'undefined') ? type : 'CustomException';\n\n  /**\n   * Retrieves the exception message.\n   *\n   * @return {string}\n   */\n  this.getMessage = function () {\n    return this._message;\n  };\n\n  /**\n   * Retrieves the exception type.\n   *\n   * @return {string}\n   */\n  this.getType = function () {\n    return this._type;\n  };\n\n  /**\n   * Converts the exception to a string.\n   *\n   * @return {string}\n   */\n  this.toString = function () {\n    return this.getMessage();\n  };\n\n}\n\nmodule.exports = CustomException;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ManifestResourceRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ManifestResourceRow (reader) {\n\n  'use strict';\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ManifestResourceRow;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar StreamHeader = __webpack_require__(35);\n\n/**\n * Class MetadataHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction MetadataHeader (reader) {\n\n  'use strict';\n\n  var i;\n\n  /**\n   * The file offset to the header relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.offset = reader.getPosition();\n\n  /**\n   * The signature.\n   *\n   * This value should always equal 0x424A5342.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * A reserved value.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n  /**\n   * The length of the version string.\n   *\n   * @type {number}\n   */\n  this.versionLength = (i = (i = reader.readUInt(4)) + (i % 4));\n\n  /**\n   * The version string.\n   *\n   * @type {string}\n   */\n  this.version = reader.readUTF8String(i, true);\n\n  /**\n   * The flags.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The number of streams.\n   *\n   * @type {number}\n   */\n  this.streams = reader.readUInt(2);\n\n  /**\n   * The stream headers.\n   *\n   * @type {Array<StreamHeader>}\n   */\n  this.streamHeaders = new Array(this.streams);\n\n  // Read the stream headers.\n  for (i = 0; i < this.streamHeaders.length; i++) {\n    this.streamHeaders[i] = new StreamHeader(reader);\n  }\n\n}\n\nmodule.exports = MetadataHeader;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StreamHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction StreamHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The file offset to the stream relative to the metadata header.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The size of the stream, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The name of the stream.\n   *\n   * @type {string}\n   */\n  this.name = reader.readString(0, true, 4);\n\n}\n\nmodule.exports = StreamHeader;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class MemberRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MemberRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.MODULE_REF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = MemberRefRow;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class NestedClassRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction NestedClassRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the nested class information row.\n   *\n   * @type {RowReference}\n   */\n  this.nestedClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the enclosing class information row.\n   *\n   * @type {RowReference}\n   */\n  this.enclosingClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = NestedClassRow;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class MethodDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodDefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The relative virtual address.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The implementation flags.\n   *\n   * @type {number}\n   */\n  this.implFlags = reader.readUInt(2);\n\n  /**\n   * The method flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n  /**\n   * The reference to the param definition row.\n   *\n   * @type {RowReference}\n   */\n  this.paramList = new RowReference(reader, [\n    TableIndexes.PARAM\n  ]);\n\n}\n\nmodule.exports = MethodDefRow;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar MethodFlags = __webpack_require__(40);\n\n/**\n * Class MethodHeader.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodHeader (reader) {\n\n  'use strict';\n\n  // Retrieve the first one or two bytes specifying the flags and header size.\n  var flagsAndSize = reader.readUInt(1);\n  var tiny = true;\n\n  if ((flagsAndSize & MethodFlags.TINY_FORMAT) === 0) {\n    reader.setPosition(reader.getPosition() - 1);\n    flagsAndSize = reader.readUInt(2);\n    tiny = false;\n  }\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = tiny ? flagsAndSize & 0x03 : flagsAndSize & 0xFFF;\n\n  /**\n   * The header size.\n   *\n   * @type {number}\n   */\n  this.headerSize = tiny ? 1 : flagsAndSize >> 12;\n\n  /**\n   * The maximum number of items on the operand stack.\n   *\n   * @return {number}\n   */\n  this.maxStack = tiny ? 0 : reader.readUInt(2);\n\n  /**\n   * The size in bytes of the actual method body.\n   *\n   * @return {number}\n   */\n  this.codeSize = tiny ? flagsAndSize >> 2 : reader.readUInt(4);\n\n  /**\n   * The metadata token for a signature describing the layout of the local\n   * variables for the method\n   *\n   * @return {number}\n   */\n  this.localVarSigTok = tiny ? 0 : reader.readUInt(4);\n\n  /**\n   * The file offset to the code.\n   *\n   * @type {number}\n   */\n  this.codeOffset = reader.getPosition();\n\n}\n\nmodule.exports = MethodHeader;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class MethodFlags.\n *\n * @constructor\n * @struct\n */\nfunction MethodFlags () {\n\n  'use strict';\n\n  /**\n   * The fat format flag.\n   *\n   * @const {number}\n   */\n  this.FAT_FORMAT = 0x3;\n\n  /**\n   * The initialize locals flag.\n   *\n   * @const {number}\n   */\n  this.INITIALIZE_LOCALS = 0x10;\n\n  /**\n   * The more sections flag.\n   *\n   * @const {number}\n   */\n  this.MORE_SECTIONS = 0x8;\n\n  /**\n   * The tiny format flag.\n   *\n   * @const {number}\n   */\n  this.TINY_FORMAT = 0x2;\n\n}\n\nmodule.exports = new MethodFlags();\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class MethodImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodImplRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the method body row.\n   *\n   * @type {RowReference}\n   */\n  this.methodBody = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n  /**\n   * The reference to the method declaration row.\n   *\n   * @type {RowReference}\n   */\n  this.methodDeclaration = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n}\n\nmodule.exports = MethodImplRow;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class MethodSemanticsRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodSemanticsRow (reader) {\n\n  'use strict';\n\n  /**\n   * The semantics.\n   *\n   * @type {number}\n   */\n  this.semantics = reader.readUInt(2);\n\n  /**\n   * The reference to the method row.\n   *\n   * @type {RowReference}\n   */\n  this.method = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The reference to the associated row.\n   *\n   * @type {RowReference}\n   */\n  this.association = new RowReference(reader, [\n    TableIndexes.EVENT,\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = MethodSemanticsRow;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ModuleRefRow;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRow (reader) {\n\n  'use strict';\n\n  /**\n   * The generation.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.generation = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The module id as an index into the GUID heap.\n   *\n   * @type {number}\n   */\n  this.mvid = reader.readGUIDIndex();\n\n  /**\n   * The encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encId = reader.readGUIDIndex();\n\n  /**\n   * The base encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encBaseId = reader.readGUIDIndex();\n\n}\n\nmodule.exports = ModuleRow;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ParamRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The sequence.\n   *\n   * @type {number}\n   */\n  this.sequence = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ParamRow;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar BinaryParser = __webpack_require__(47);\nvar COFFHeader = __webpack_require__(48);\nvar DOSHeader = __webpack_require__(49);\nvar Extend = __webpack_require__(2);\nvar ImageAttributes = __webpack_require__(5);\nvar ParserException = __webpack_require__(4);\nvar OptionalHeader = __webpack_require__(50);\nvar ResourceDirectory = __webpack_require__(6);\nvar SectionHeader = __webpack_require__(53);\n\n/**\n * Class PEParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {BinaryParser}\n */\nfunction PEParser (path, data) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new BinaryParser(path, data));\n\n  /**\n   * The COFF header.\n   *\n   * @type {COFFHeader}\n   *\n   * @protected\n   */\n  this._coffHeader = null;\n\n  /**\n   * The DOS header.\n   *\n   * @type {DOSHeader}\n   *\n   * @protected\n   */\n  this._dosHeader = null;\n\n  /**\n   * The optional header.\n   *\n   * @type {OptionalHeader}\n   *\n   * @protected\n   */\n  this._optionalHeader = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *\n   * @protected\n   */\n  this._resourceDirectory = null;\n\n  /**\n   * The resource directory file offset.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._resourceDirectoryFileOffset = null;\n\n  /**\n   * The section headers.\n   *\n   * @type {Array<SectionHeader>}\n   *\n   * @protected\n   */\n  this._sectionHeaders = null;\n\n  /**\n   * Calculates the file offset for a relative virtual address.\n   *\n   * @param {number} rva\n   *   The relative virtual address.\n   *\n   * @return {number}\n   *   Returns a file offset.\n   */\n  this.getFileOffset = function (rva) {\n    // Determine which section the address belongs to and convert it to a file\n    // offset.\n    var sectionHeaders = this.readSectionHeaders();\n\n    for (var i = 0; i < sectionHeaders.length; i++) {\n      if ((rva >= sectionHeaders[i].virtualAddress) &&\n        (rva <= sectionHeaders[i].virtualAddress +\n        sectionHeaders[i].sizeOfRawData)) {\n        return sectionHeaders[i].pointerToRawData +\n          (rva - sectionHeaders[i].virtualAddress);\n      }\n    }\n\n    return -1;\n  };\n\n  /**\n   * Retrieves the resource directory file offset.\n   *\n   * @return {number}\n   *   Returns the file offset or -1 if the resource directory is empty.\n   */\n  this.getResourceDirectoryFileOffset = function () {\n    if (!this._resourceDirectoryFileOffset) {\n      // Locate the resource section in order to determine the file offset.\n      var sectionHeaders = this.readSectionHeaders();\n      var sectionHeader = null;\n\n      for (var i = 0; i < sectionHeaders.length; i++) {\n        if (sectionHeaders[i].name === '.rsrc') {\n          sectionHeader = sectionHeaders[i];\n          break;\n        }\n      }\n\n      if (sectionHeader) {\n        this._resourceDirectoryFileOffset = sectionHeader.pointerToRawData;\n      }\n      else {\n        this._resourceDirectoryFileOffset = -1;\n      }\n    }\n\n    return this._resourceDirectoryFileOffset;\n  };\n\n  /**\n   * Reads the COFF header.\n   *\n   * @return {COFFHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readCOFFHeader = function () {\n    if (!this._coffHeader) {\n      // Move the stream cursor to the position of the COFF header as specified\n      // by the DOS header.\n      this.setPosition(this.readDOSHeader().lfanew);\n\n      // Read the header and throw an exception if the header seems to be\n      // invalid.\n      this._coffHeader = new COFFHeader(this);\n\n      if (this._coffHeader.signature !== ImageAttributes.IMAGE_NT_SIGNATURE) {\n        throw new ParserException('Invalid COFF header');\n      }\n    }\n\n    return this._coffHeader;\n  };\n\n  /**\n   * Reads the DOS header.\n   *\n   * @return {DOSHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readDOSHeader = function () {\n    if (!this._dosHeader) {\n      // Reset the position to the beginning of the stream.\n      this.setPosition(0);\n\n      // Read the header from the buffer and throw an exception if the header is\n      // invalid.\n      this._dosHeader = new DOSHeader(this);\n\n      if (this._dosHeader.magic !== ImageAttributes.IMAGE_DOS_SIGNATURE) {\n        throw new ParserException('Invalid DOS header');\n      }\n    }\n\n    return this._dosHeader;\n  };\n\n  /**\n   * Reads the optional header.\n   *\n   * @return {OptionalHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readOptionalHeader = function () {\n    if ((!this._optionalHeader) &&\n      (this.readCOFFHeader().sizeOfOptionalHeader > 0)) {\n      // Move the stream cursor to the position of the optional header as\n      // specified by the DOS header and the size of the COFF header.\n      this.setPosition(this.readDOSHeader().lfanew + 24);\n\n      // Read the entire header including the data directories.\n      this._optionalHeader = new OptionalHeader(this);\n\n      if ((this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR32_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_ROM_OPTIONAL_HDR_MAGIC)) {\n        throw new ParserException('Invalid optional header');\n      }\n    }\n\n    return this._optionalHeader;\n  };\n\n  /**\n   * Reads the resource directory.\n   *\n   * @return {ResourceDirectory}\n   *   Returns the resource directory.\n   */\n  this.readResourceDirectory = function () {\n    if (this.getResourceDirectoryFileOffset() < 1) {\n      return this._resourceDirectory;\n    }\n\n    this.setPosition(this.getResourceDirectoryFileOffset());\n    this._resourceDirectory = new ResourceDirectory(this);\n    return this._resourceDirectory;\n  };\n\n  /**\n   * Reads the section headers.\n   *\n   * @return {Array<SectionHeader>}\n   *   Returns an array of section headers.\n   */\n  this.readSectionHeaders = function () {\n    if (!this._sectionHeaders) {\n      // Move the stream cursor to the position of the section headers.\n      this.setPosition(this.readDOSHeader().lfanew + 24 +\n        this.readCOFFHeader().sizeOfOptionalHeader);\n\n      // Read each of the section headers.\n      this._sectionHeaders = new Array(this.readCOFFHeader().numberOfSections);\n\n      for (var i = 0; i < this._sectionHeaders.length; i++) {\n        this._sectionHeaders[i] = new SectionHeader(this);\n      }\n    }\n\n    return this._sectionHeaders;\n  };\n\n}\n\nmodule.exports = PEParser;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class BinaryParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n */\nfunction BinaryParser (path, data) {\n\n  'use strict';\n\n  /**\n   * The file contents.\n   *\n   * @type {ArrayBuffer}\n   *\n   * @protected\n   */\n  this._data = (typeof data !== 'undefined') ? new Uint8Array(data) : null;\n\n  /**\n   * The file path.\n   *\n   * @type {string}\n   *\n   * @protected\n   */\n  this._path = path;\n\n  /**\n   * The file position.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._position = 0;\n\n  /**\n   * Retrieves the file path.\n   *\n   * @return {string}\n   *   Returns a path.\n   */\n  this.getPath = function () {\n    return this._path;\n  };\n\n  /**\n   * Retrieves the buffer position.\n   *\n   * @return {number}\n   *   Returns the buffer position.\n   */\n  this.getPosition = function () {\n    return this._position;\n  };\n\n  /**\n   * Retrieves the buffer size.\n   *\n   * @return {number}\n   *   Returns the buffer size.\n   */\n  this.getSize = function () {\n    return this._data.byteLength;\n  };\n\n  /**\n   * Loads the file contents.\n   *\n   * @param {Function} success\n   *   The success callback.\n   * @param {Function} error\n   *   The error callback.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   */\n  this.loadFile = function (success, error) {\n    var request = new XMLHttpRequest();\n    request.open('GET', this.getPath(), true);\n    request.responseType = 'arraybuffer';\n    request.onreadystatechange = (function (reader) {\n      return function () {\n        if (request.readyState === XMLHttpRequest.DONE) {\n          if (request.status === 200) {\n            // Store the data as an UInt8 array and reset the position.\n            reader._data = new Uint8Array(request.response);\n            reader._position = 0;\n\n            // Invoke the success callback in order for the invoker to proceed.\n            success(reader);\n          }\n          else {\n            error(reader);\n          }\n        }\n      };\n    })(this);\n    request.send(null);\n    return this;\n  };\n\n  /**\n   * Reads the next bytes from the buffer.\n   *\n   * @param {number} count\n   *   The number of bytes to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readBytes = function (count) {\n    var bytes = [];\n\n    for (var i = 0; i < count; i++) {\n      if (this._position >= this.getSize()) {\n        break;\n      }\n\n      bytes.push(this._data[this._position++]);\n    }\n\n    return bytes;\n  };\n\n  /**\n   * Reads an ASCII string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a NULL\n   *   terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a NULL terminator after the string has been read in\n   *   which case the string will be terminated.\n   * @param {number} boundary\n   *   The string boundary in bytes.\n   *\n   * @return {string}\n   *   Returns an ASCII string.\n   */\n  this.readString = function (length, terminate, boundary) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (((!boundary) || (s.length % boundary === 0)) &&\n        (s.endsWith(String.fromCharCode(0)))) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(String.fromCharCode(0))) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return s;\n  };\n\n  /**\n   * Reads the next unsigned integer from the buffer.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   *\n   * @return {number|null}\n   *   Returns the integer or NULL if the end is reached.\n   */\n  this.readUInt = function (size) {\n    var bytes = this.readBytes(size);\n    var integer = 0;\n\n    if (bytes.length != size) {\n      return null;\n    }\n\n    for (var i = size - 1; i > -1; i--) {\n      integer |= (bytes[i] << (8 * i));\n    }\n\n    return integer;\n  };\n\n  /**\n   * Reads the next unsigned integers.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   * @param {number} count\n   *   The number of integers to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of integers.\n   */\n  this.readUIntArray = function (size, count) {\n    var integers = [];\n\n    for (var i = 0; i < count; i++) {\n      var integer = this.readUInt(size);\n\n      if (integer === null) {\n        break;\n      }\n\n      integers.push(integer);\n    }\n\n    return integers;\n  };\n\n  /**\n   * Reads a UTF-8 string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a\n   *   string terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a string terminator after the string has been read in\n   *   which case the string will always be terminated.\n   *\n   * @return {string}\n   *   Returns a UTF-8 string.\n   */\n  this.readUTF8String = function (length, terminate) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (s.endsWith(String.fromCharCode(0, 0))) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(String.fromCharCode(0, 0))) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return decodeURI(encodeURIComponent(s));\n  };\n\n  /**\n   * Sets the file path.\n   *\n   * @param {string} path\n   *   The file path.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPath = function (path) {\n    this._path = path;\n    return this;\n  };\n\n  /**\n   * Sets the buffer position.\n   *\n   * @param {number} position\n   *   The new position.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPosition = function (position) {\n    this._position = position;\n    return this;\n  };\n\n}\n\nmodule.exports = BinaryParser;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class COFFHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction COFFHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The signature.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The architecture type of the computer.\n   *\n   * @type {number}\n   */\n  this.machine = reader.readUInt(2);\n\n  /**\n   * The number of sections.\n   *\n   * @type {number}\n   */\n  this.numberOfSections = reader.readUInt(2);\n\n  /**\n   * The low 32 bits of the time stamp of the image.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The offset of the symbol table, in bytes, or zero if no COFF symbol table\n   * exists.\n   *\n   * @type {number}\n   */\n  this.pointerToSymbolTable = reader.readUInt(4);\n\n  /**\n   * The number of symbols in the symbol table.\n   *\n   * @type {number}\n   */\n  this.numberOfSymbols = reader.readUInt(4);\n\n  /**\n   * The size of the optional header, in bytes. This value should be 0 for\n   * object files.\n   *\n   * @type {number}\n   */\n  this.sizeOfOptionalHeader = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image. This member can be one or more of the\n   * following values.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(2);\n\n}\n\nmodule.exports = COFFHeader;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DOSHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DOSHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The magic number.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The number of bytes on the last page in the file.\n   *\n   * @type {number}\n   */\n  this.cblp = reader.readUInt(2);\n\n  /**\n   * The number of pages in the file.\n   *\n   * @type {number}\n   */\n  this.cp = reader.readUInt(2);\n\n  /**\n   * The number of relocations.\n   *\n   * @type {number}\n   */\n  this.crlc = reader.readUInt(2);\n\n  /**\n   * The size of the header in paragraphs.\n   *\n   * @type {number}\n   */\n  this.cparhdr = reader.readUInt(2);\n\n  /**\n   * The minimum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.minAlloc = reader.readUInt(2);\n\n  /**\n   * The maximum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.maxAlloc = reader.readUInt(2);\n\n  /**\n   * The initial (relative) SS value.\n   *\n   * @type {number}\n   */\n  this.ss = reader.readUInt(2);\n\n  /**\n   * The initial SP value.\n   *\n   * @type {number}\n   */\n  this.sp = reader.readUInt(2);\n\n  /**\n   * The checksum.\n   *\n   * @type {number}\n   */\n  this.csum = reader.readUInt(2);\n\n  /**\n   * The initial IP value.\n   *\n   * @type {number}\n   */\n  this.ip = reader.readUInt(2);\n\n  /**\n   * The initial (relative) CS value.\n   *\n   * @type {number}\n   */\n  this.cs = reader.readUInt(2);\n\n  /**\n   * The file address of the relocation table.\n   *\n   * @type {number}\n   */\n  this.lfarlc = reader.readUInt(2);\n\n  /**\n   * The overlay number.\n   *\n   * @type {number}\n   */\n  this.ovno = reader.readUInt(2);\n\n  /**\n   * The first reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res1 = reader.readUIntArray(2, 4);\n\n  /**\n   * The OEM identifier.\n   *\n   * @type {number}\n   */\n  this.oemid = reader.readUInt(2);\n\n  /**\n   * The OEM information.\n   *\n   * @type {number}\n   */\n  this.oeminfo = reader.readUInt(2);\n\n  /**\n   * The second reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res2 = reader.readUIntArray(2, 10);\n\n  /**\n   * The file address of the new EXE header.\n   *\n   * @type {number}\n   */\n  this.lfanew = reader.readUInt(4);\n\n}\n\nmodule.exports = DOSHeader;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = __webpack_require__(3);\nvar ImageAttributes = __webpack_require__(5);\n\n/**\n * Class OptionalHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction OptionalHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The state of the image file.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The major version number of the linker.\n   *\n   * @type {number}\n   */\n  this.majorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The minor version number of the linker.\n   *\n   * @type {number}\n   */\n  this.minorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The size of the code section, in bytes, or the sum of all such sections if\n   * there are multiple code sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfCode = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data section, in bytes, or the sum of all such\n   * sections if there are multiple initialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfInitializedData = reader.readUInt(4);\n\n  /**\n   * The size of the uninitialized data section, in bytes, or the sum of all\n   * such sections if there are multiple uninitialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfUninitializedData = reader.readUInt(4);\n\n  /**\n   * A pointer to the entry point function, relative to the image base address.\n   *\n   * @type {number}\n   */\n  this.addressOfEntryPoint = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the code section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfCode = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the data section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfData = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 0 : 4);\n\n  /**\n   * The preferred address of the first byte of the image when it is loaded in\n   * memory.\n   *\n   * @type {number}\n   */\n  this.imageBase = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The alignment of sections loaded in memory, in bytes.\n   *\n   * @type {number}\n   */\n  this.sectionAlignment = reader.readUInt(4);\n\n  /**\n   * The alignment of the raw data of sections in the image file, in bytes.\n   *\n   * @type {number}\n   */\n  this.fileAlignment = reader.readUInt(4);\n\n  /**\n   * The major version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.majorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.minorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the image.\n   *\n   * @type {number}\n   */\n  this.majorImageVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the image.\n   *\n   * @type {number}\n   */\n  this.minorImageVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.majorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.minorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * This member is reserved and must be 0.\n   *\n   * @type {number}\n   */\n  this.win32VersionValue = reader.readUInt(4);\n\n  /**\n   * The size of the image, in bytes, including all headers.\n   *\n   * @type {number}\n   */\n  this.sizeOfImage = reader.readUInt(4);\n\n  /**\n   * The combined size of the following items, rounded to a multiple of the\n   * value specified in the fileAlignment member.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeaders = reader.readUInt(4);\n\n  /**\n   * The image file checksum.\n   *\n   * @type {number}\n   */\n  this.checkSum = reader.readUInt(4);\n\n  /**\n   * The subsystem required to run this image.\n   *\n   * @type {number}\n   */\n  this.subsystem = reader.readUInt(2);\n\n  /**\n   * The DLL characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.dllCharacteristics = reader.readUInt(2);\n\n  /**\n   * The number of bytes to reserve for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to reserve for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * This member is obsolete.\n   *\n   * @type {number}\n   */\n  this.loaderFlags = reader.readUInt(4);\n\n  /**\n   * The number of directory entries in the remainder of the optional header.\n   *\n   * @type {number}\n   */\n  this.numberOfRvaAndSizes = reader.readUInt(4);\n\n  /**\n   * The array of data directory headers.\n   *\n   * @type {Array<DataDirectoryHeader>}\n   */\n  this.dataDirectory = new Array(this.numberOfRvaAndSizes);\n\n  // Read the data directory headers.\n  for (var i = 0; i < this.dataDirectory.length; i++) {\n    this.dataDirectory[i] = new DataDirectoryHeader(reader);\n  }\n\n}\n\nmodule.exports = OptionalHeader;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar ResourceDataEntry = __webpack_require__(52);\nvar ResourceDirectory = __webpack_require__(6);\n\n/**\n * Class ResourceDirectoryEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectoryEntry (reader) {\n\n  'use strict';\n\n  /**\n   * The name.\n   *\n   * @type {number}\n   */\n  this.name = reader.readUInt(4);\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.readUInt(4);\n\n  /**\n   * The data entry.\n   *\n   * @type {ResourceDataEntry}\n   */\n  this.data = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *   The resource directory or NULL if this entry does not point to one.\n   */\n  this.directory = null;\n\n  // Read either a resource directory or a data entry.\n  if (this.offsetToData >>> 31 === 1) {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      (this.offsetToData << 1 >>> 1);\n    reader.setPosition(this.offsetToData);\n    this.directory = new ResourceDirectory(reader);\n  }\n  else {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      this.offsetToData;\n    reader.setPosition(this.offsetToData);\n    this.data = new ResourceDataEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectoryEntry;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDataEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDataEntry (reader) {\n\n  'use strict';\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.getFileOffset(reader.readUInt(4));\n\n  /**\n   * The data size.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The code page.\n   *\n   * @type {number}\n   */\n  this.codePage = reader.readUInt(4);\n\n  /**\n   * The reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n}\n\nmodule.exports = ResourceDataEntry;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class SectionHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction SectionHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The section name.\n   *\n   * @type {string}\n   */\n  this.name = reader.readUTF8String(8, true);\n\n  /**\n   * The file address or the total size of the section when loaded into memory,\n   * in bytes.\n   *\n   * @type {number}\n   */\n  this.misc = reader.readUInt(4);\n\n  /**\n   * The address of the first byte of the section when loaded into memory,\n   * relative to the image base.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data on disk, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the first page within the COFF file.\n   *\n   * @type {number}\n   */\n  this.pointerToRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToRelocations = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToLinenumbers = reader.readUInt(4);\n\n  /**\n   * The number of relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfRelocations = reader.readUInt(2);\n\n  /**\n   * The number of line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfLinenumbers = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n}\n\nmodule.exports = SectionHeader;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class PropertyMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyMapRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first property row.\n   *\n   * @type {RowReference}\n   */\n  this.propertyList = new RowReference(reader, [\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = PropertyMapRow;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class PropertyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyRow (reader) {\n\n  'use strict';\n\n  /**\n   * The property flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.type = reader.readBlobIndex();\n\n}\n\nmodule.exports = PropertyRow;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StandAloneSigRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction StandAloneSigRow (reader) {\n\n  'use strict';\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = StandAloneSigRow;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TablesHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction TablesHeader (reader) {\n\n  'use strict';\n\n  var i1, i2;\n\n  /**\n   * The first reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved1 = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(1);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(1);\n\n  /**\n   * The size of the indexes into the different streams.\n   *\n   * @type {number}\n   */\n  this.heapOffsetSizes = reader.readUInt(1);\n\n  /**\n   * The second reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved2 = reader.readUInt(1);\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {Array<number>}\n   */\n  this.maskValidArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {number}\n   */\n  this.maskValid = (i2 << 32) | i1;\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {Array<number>}\n   */\n  this.maskSortedArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {number}\n   */\n  this.maskSorted = (i2 << 32) | i1;\n\n  /**\n   * The file offset to the tables relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.tablesOffset = reader.getPosition();\n\n}\n\nmodule.exports = TablesHeader;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class TypeDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeDefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.extends = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The reference to the field information row.\n   *\n   * @type {RowReference}\n   */\n  this.fieldList = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n  /**\n   * The reference to the method information row.\n   *\n   * @type {RowReference}\n   */\n  this.methodList = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n}\n\nmodule.exports = TypeDefRow;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class TypeRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.resolutionScope = new RowReference(reader, [\n    TableIndexes.MODULE,\n    TableIndexes.MODULE_REF,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.TYPE_REF\n  ]);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n}\n\nmodule.exports = TypeRefRow;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TypeSpecRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeSpecRow (reader) {\n\n  'use strict';\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = TypeSpecRow;\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// comla.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4e83ff574a3fd61cf7f0","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TableIndexes.\n *\n * @constructor\n * @struct\n */\nfunction TableIndexes () {\n\n  'use strict';\n\n  /**\n   * The table index for the 'Assembly' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY = 32;\n\n  /**\n   * The table index for the 'AssemblyOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_OS = 34;\n\n  /**\n   * The table index for the 'AssemblyProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_PROCESSOR = 33;\n\n  /**\n   * The table index for the 'AssemblyRef' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF = 35;\n\n  /**\n   * The table index for the 'AssemblyRefOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_OS = 37;\n\n  /**\n   * The table index for the 'AssemblyRefProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_PROCESSOR = 36;\n\n  /**\n   * The table index for the 'ClassLayout' table.\n   *\n   * @const {number}\n   */\n  this.CLASS_LAYOUT = 15;\n\n  /**\n   * The table index for the 'Constant' table.\n   *\n   * @const {number}\n   */\n  this.CONSTANT = 11;\n\n  /**\n   * The table index for the 'CustomAttribute' table.\n   *\n   * @const {number}\n   */\n  this.CUSTOM_ATTRIBUTE = 12;\n\n  /**\n   * The table index for the 'DeclSecurity' table.\n   *\n   * @const {number}\n   */\n  this.DECL_SECURITY = 14;\n\n  /**\n   * The table index for the 'Event' table.\n   *\n   * @const {number}\n   */\n  this.EVENT = 20;\n\n  /**\n   * The table index for the 'EventMap' table.\n   *\n   * @const {number}\n   */\n  this.EVENT_MAP = 18;\n\n  /**\n   * The table index for the 'ExportedType' table.\n   *\n   * @const {number}\n   */\n  this.EXPORTED_TYPE = 39;\n\n  /**\n   * The table index for the 'Field' table.\n   *\n   * @const {number}\n   */\n  this.FIELD = 4;\n\n  /**\n   * The table index for the 'FieldLayout' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_LAYOUT = 16;\n\n  /**\n   * The table index for the 'FieldMarshal' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_MARSHAL = 13;\n\n  /**\n   * The table index for the 'FieldRVA' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_RVA = 29;\n\n  /**\n   * The table index for the 'File' table.\n   *\n   * @const {number}\n   */\n  this.FILE = 38;\n\n  /**\n   * The table index for the 'GenericParam' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM = 42;\n\n  /**\n   * The table index for the 'GenericParamConstraint' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM_CONSTRAINT = 44;\n\n  /**\n   * The table index for the 'ImplMap' table.\n   *\n   * @const {number}\n   */\n  this.IMPL_MAP = 28;\n\n  /**\n   * The table index for the 'InterfaceImpl' table.\n   *\n   * @const {number}\n   */\n  this.INTERFACE_IMPL = 9;\n\n  /**\n   * The table index for the 'ManifestResource' table.\n   *\n   * @const {number}\n   */\n  this.MANIFEST_RESOURCE = 40;\n\n  /**\n   * The table index for the 'MemberRef' table.\n   *\n   * @const {number}\n   */\n  this.MEMBER_REF = 10;\n\n  /**\n   * The table index for the 'MethodDef' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_DEF = 6;\n\n  /**\n   * The table index for the 'MethodImpl' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_IMPL = 25;\n\n  /**\n   * The table index for the 'MethodSemantics' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_SEMANTICS = 24;\n\n  /**\n   * The table index for the 'Module' table.\n   *\n   * @const {number}\n   */\n  this.MODULE = 0;\n\n  /**\n   * The table index for the 'ModuleRef' table.\n   *\n   * @const {number}\n   */\n  this.MODULE_REF = 26;\n\n  /**\n   * The table index for the 'NestedClass' table.\n   *\n   * @const {number}\n   */\n  this.NESTED_CLASS = 41;\n\n  /**\n   * The table index for the 'Param' table.\n   *\n   * @const {number}\n   */\n  this.PARAM = 8;\n\n  /**\n   * The table index for the 'Property' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY = 23;\n\n  /**\n   * The table index for the 'PropertyMap' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY_MAP = 21;\n\n  /**\n   * The table index for the 'StandAloneSig' table.\n   *\n   * @const {number}\n   */\n  this.STAND_ALONE_SIG = 17;\n\n  /**\n   * The table index for the 'TypeRef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_REF = 1;\n\n  /**\n   * The table index for the 'TypeDef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_DEF = 2;\n\n  /**\n   * The table index for the 'TypeSpec' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_SPEC = 27;\n\n}\n\nmodule.exports = new TableIndexes();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Constant/TableIndexes.js\n// module id = 0\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class RowReference.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n * @param {Array<number>} tableIndexes\n *   The table indexes.\n *\n * @constructor\n * @struct\n */\nfunction RowReference (reader, tableIndexes) {\n\n  'use strict';\n\n  /**\n   * The table index.\n   *\n   * @type {number}\n   */\n  this.tableIndex = -1;\n\n  /**\n   * The row index.\n   *\n   * @type {number}\n   */\n  this.rowIndex = -1;\n\n  // Initialize the object.\n  (function (object, reader, tableIndexes) {\n\n    var bc = 1, bv, size = 2, tables = reader.readTables();\n\n    // Determine how many bits are required to represent the table index.\n    while ((bv = Math.pow(2, bc - 1)) < tableIndexes.length) {\n      bc++;\n    }\n\n    // Determine if the index is represented as a 16-bit or 32-bit integer.\n    for (var i = 0; i < tableIndexes.length; i++) {\n      if ((tables[tableIndexes[i]]) &&\n        (tables[tableIndexes[i]].length > 0xFFFF)) {\n        size = 4;\n        break;\n      }\n    }\n\n    // Read the integer that contains both the table index and the row index.\n    var tableRowIndex = reader.readUInt(size);\n\n    // Split the integer into two separate values and update the properties.\n    object.tableIndex = tableIndexes[tableRowIndex & (bv - 1)];\n    object.rowIndex = tableRowIndex >> bc;\n\n  }(this, reader, tableIndexes));\n\n}\n\nmodule.exports = RowReference;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Reference/RowReference.js\n// module id = 1\n// module chunks = 0 1","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extend/index.js\n// module id = 2\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DataDirectoryHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DataDirectoryHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The relative virtual address of the table.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the table, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n}\n\nmodule.exports = DataDirectoryHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/DataDirectoryHeader.js\n// module id = 3\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CustomException = require('./../../Exception/CustomException');\nvar Extend = require('extend');\n\n/**\n * Class ParserException.\n *\n * @param {string} message\n *   The message.\n *\n * @constructor\n * @extends {CustomException}\n */\nfunction ParserException (message) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new CustomException(message, 'ParserException'));\n\n}\n\nmodule.exports = ParserException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Exception/ParserException.js\n// module id = 4\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ImageAttributes.\n *\n * @constructor\n * @struct\n */\nfunction ImageAttributes () {\n\n  'use strict';\n\n  /**\n   * The DOS header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_DOS_SIGNATURE = 0x5a4d;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\n\n  /**\n   * The NT header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_SIGNATURE = 0x4550;\n\n  /**\n   * The file is a ROM image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_ROM_OPTIONAL_HDR_MAGIC = 0x107;\n\n}\n\nmodule.exports = new ImageAttributes();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Constant/ImageAttributes.js\n// module id = 5\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDirectory.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectory (reader) {\n\n  'use strict';\n\n  /**\n   * The characteristics.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n  /**\n   * The time/date stamp describing the creation time of the resource.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The major version number.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use names and that follow this structure.\n   *\n   * @type {number}\n   */\n  this.numberOfNamedEntries = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use integer IDs, and which follow this\n   * structure.\n   *\n   * @type {number}\n   */\n  this.numberOfIdEntries = reader.readUInt(2);\n\n  /**\n   * The resource directory entries.\n   *\n   * @type {Array<ResourceDirectoryEntry>}\n   */\n  this.entries = new Array(this.numberOfIdEntries + this.numberOfNamedEntries);\n\n  // Parse the resource directory entries.\n  var position = reader.getPosition();\n\n  for (var i = 0; i < this.entries.length; i++) {\n    reader.setPosition(position + (i * 8));\n    this.entries[i] = new ResourceDirectoryEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectory;\n\nvar ResourceDirectoryEntry = require('./../Entry/ResourceDirectoryEntry');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Directory/ResourceDirectory.js\n// module id = 6\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CILParser = require('./Parser/CILParser');\n\n/**\n * Class Main.\n *\n * @constructor\n * @final\n */\nfunction Main () {\n\n  'use strict';\n\n  /**\n   * Runs an executable.\n   *\n   * @param {string} path\n   *   The path.\n   */\n  this.run = function (path) {\n    console.log('#### This library is not yet able to run applications ####');\n    console.log('----------------------------------------------------------');\n    console.log('Dumping information about the executable:');\n\n    (new CILParser(path)).loadFile(function (reader) {\n      console.log(reader.readDOSHeader());\n      console.log(reader.readCOFFHeader());\n      console.log(reader.readOptionalHeader());\n      console.log(reader.readSectionHeaders());\n      console.log(reader.readResourceDirectory());\n      console.log(reader.readCORHeader());\n      console.log(reader.readMetadataHeader());\n      console.log(reader.readTablesHeader());\n      console.log(reader.readTables());\n      console.log(reader.readMethodHeaders());\n      console.log(JSON.stringify(reader.readMethodInstructions(\n        reader.readMethodHeaders()[0])));\n      console.log(reader.readStringFromHeap(10));\n    }, function () {\n      console.log('Failed to load the file');\n    });\n  };\n\n}\n\nmodule.exports = new Main();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Main.js\n// module id = 7\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar AssemblyOSRow = require('./Row/AssemblyOSRow');\nvar AssemblyProcessorRow = require('./Row/AssemblyProcessorRow');\nvar AssemblyRefOSRow = require('./Row/AssemblyRefOSRow');\nvar AssemblyRefProcessorRow = require('./Row/AssemblyRefProcessorRow');\nvar AssemblyRefRow = require('./Row/AssemblyRefRow');\nvar AssemblyRow = require('./Row/AssemblyRow');\nvar ClassLayoutRow = require('./Row/ClassLayoutRow');\nvar ConstantRow = require('./Row/ConstantRow');\nvar CORHeader = require('./Header/CORHeader');\nvar CustomAttributeRow = require('./Row/CustomAttributeRow');\nvar DeclSecurityRow = require('./Row/DeclSecurityRow');\nvar EventMapRow = require('./Row/EventMapRow');\nvar EventRow = require('./Row/EventRow');\nvar ExportedTypeRow = require('./Row/ExportedTypeRow');\nvar Extend = require('extend');\nvar FieldRow = require('./Row/FieldRow');\nvar FieldRVARow = require('./Row/FieldRVARow');\nvar FieldLayoutRow = require('./Row/FieldLayoutRow');\nvar FieldMarshalRow = require('./Row/FieldMarshalRow');\nvar FileRow = require('./Row/FileRow');\nvar GenericParamRow = require('./Row/GenericParamRow');\nvar GenericParamConstraintRow = require('./Row/GenericParamConstraintRow');\nvar ImplMapRow = require('./Row/ImplMapRow');\nvar InterfaceImplRow = require('./Row/InterfaceImplRow');\nvar ParserException = require('./Exception/ParserException');\nvar ManifestResourceRow = require('./Row/ManifestResourceRow');\nvar MetadataHeader = require('./Header/MetadataHeader');\nvar MemberRefRow = require('./Row/MemberRefRow');\nvar NestedClassRow = require('./Row/NestedClassRow');\nvar MethodDefRow = require('./Row/MethodDefRow');\nvar MethodHeader = require('./Header/MethodHeader');\nvar MethodImplRow = require('./Row/MethodImplRow');\nvar MethodSemanticsRow = require('./Row/MethodSemanticsRow');\nvar ModuleRefRow = require('./Row/ModuleRefRow');\nvar ModuleRow = require('./Row/ModuleRow');\nvar ParamRow = require('./Row/ParamRow');\nvar PEParser = require('./PEParser');\nvar PropertyMapRow = require('./Row/PropertyMapRow');\nvar PropertyRow = require('./Row/PropertyRow');\nvar StandAloneSigRow = require('./Row/StandAloneSigRow');\nvar TableIndexes = require('./Constant/TableIndexes');\nvar TablesHeader = require('./Header/TablesHeader');\nvar TypeDefRow = require('./Row/TypeDefRow');\nvar TypeRefRow = require('./Row/TypeRefRow');\nvar TypeSpecRow = require('./Row/TypeSpecRow');\n\n/**\n * Class CILParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {PEParser}\n */\nfunction CILParser (path, data) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new PEParser(path, data));\n\n  /**\n   * The COR header.\n   *\n   * @type {CORHeader}\n   *\n   * @protected\n   */\n  this._corHeader = null;\n\n  /**\n   * The metadata header.\n   *\n   * @type {MetadataHeader}\n   *\n   * @protected\n   */\n  this._metadataHeader = null;\n\n  /**\n   * The method headers.\n   *\n   * @type {Array<MethodHeader>}\n   *\n   * @protected\n   */\n  this._methodHeaders = null;\n\n  /**\n   * The metadata tables.\n   *\n   * @type {Array<Object>}\n   *\n   * @protected\n   */\n  this._tables = null;\n\n  /**\n   * The tables header.\n   *\n   * @type {TablesHeader}\n   *\n   * @protected\n   */\n  this._tablesHeader = null;\n\n  /**\n   * Retrieves a stream header.\n   *\n   * @param {string} name\n   *   The stream name.\n   *\n   * @return {StreamHeader|null}\n   *   Returns the stream header or NULL if not found.\n   */\n  this.getStreamHeader = function (name) {\n    var streamHeaders = this.readMetadataHeader().streamHeaders;\n\n    for (var i = 0; i < streamHeaders.length; i++) {\n      if (streamHeaders[i].name === name) {\n        return streamHeaders[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Reads a blob index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readBlobIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x04) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the COR header.\n   *\n   * @return {CORHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readCORHeader = function () {\n    if (!this._corHeader) {\n      // Verify that the CLR (formerly COM) data directory is available.\n      if ((this.readOptionalHeader().dataDirectory.length < 15) ||\n        (this.readOptionalHeader().dataDirectory[14].size < 1)) {\n        throw new ParserException('The CLR data directory is missing');\n      }\n\n      // Move the stream cursor to the position of the COR header.\n      this.setPosition(this.getFileOffset(\n        this.readOptionalHeader().dataDirectory[14].virtualAddress));\n\n      // Read the the header and throw an exception if it is invalid.\n      this._corHeader = new CORHeader(this);\n\n      if (this._corHeader.sizeOfHeader !== 72) {\n        throw new ParserException('Invalid COR header');\n      }\n    }\n\n    return this._corHeader;\n  };\n\n  /**\n   * Reads a GUID from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a 128-bit unique identifier.\n   */\n  this.readGUIDFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#GUID');\n\n    if (!streamHeader) {\n      throw new ParserException('The GUID stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the GUID from the stream and format it before returning it.\n    var guid = '', s = this.readString(16);\n\n    for (var i = 0; i < s.length; i++) {\n      if ((i === 4) || (i === 6) || (i === 8) || (i === 10)) {\n        guid += '-';\n      }\n\n      var hex = s.charCodeAt(i).toString(16);\n      guid += (hex.length === 2) ? hex : '0' + hex;\n    }\n\n    return guid;\n  };\n\n  /**\n   * Reads a GUID index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readGUIDIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x02) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the CLR metadata header.\n   *\n   * @return {MetadataHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readMetadataHeader = function () {\n    if (!this._metadataHeader) {\n      // Verify that the metadata directory is available.\n      if (this.readCORHeader().metadata.size < 1) {\n        throw new ParserException('The metadata header is missing');\n      }\n\n      // Move the stream cursor to the position of the metadata header.\n      this.setPosition(this.getFileOffset(\n        this.readCORHeader().metadata.virtualAddress));\n\n      // Read the header and throw an exception if it is invalid.\n      this._metadataHeader = new MetadataHeader(this);\n\n      if (this._metadataHeader.signature !== 0x424A5342) {\n        throw new ParserException('Invalid metadata header');\n      }\n    }\n\n    return this._metadataHeader;\n  };\n\n  /**\n   * Reads the CLR method headers.\n   *\n   * @return {Array<MethodHeader>}\n   *   Returns an array of headers.\n   */\n  this.readMethodHeaders = function () {\n    if (!this._methodHeaders) {\n      var tables = this.readTables();\n\n      // Initialize the array of method headers.\n      this._methodHeaders = new Array(tables[TableIndexes.METHOD_DEF].length);\n\n      // Parse the method headers referenced by the MethodDef table.\n      for (var i = 0; i < tables[TableIndexes.METHOD_DEF].length; i++) {\n        this.setPosition(this.getFileOffset(tables[TableIndexes.METHOD_DEF][i]\n          .rva));\n        this._methodHeaders[i] = new MethodHeader(this);\n      }\n    }\n\n    return this._methodHeaders;\n  };\n\n  /**\n   * Reads the IL instructions for a method.\n   *\n   * @param {MethodHeader} header\n   *   The method header.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readMethodInstructions = function (header) {\n    this.setPosition(header.codeOffset);\n    return this.readBytes(header.codeSize);\n  };\n\n  /**\n   * Reads a string from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a UTF-8 encoded string.\n   */\n  this.readStringFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#Strings');\n\n    if (!streamHeader) {\n      throw new ParserException('The string stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the NULL terminated string.\n    return decodeURIComponent(encodeURIComponent(this.readString(0, true)));\n  };\n\n  /**\n   * Reads a string index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readStringIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x01) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the metadata tables.\n   *\n   * @return {Object}\n   *   Returns an array containing the tables.\n   */\n  this.readTables = function () {\n    if (!this._tables) {\n      // Ensure that the tables header has been read.\n      var header = this.readTablesHeader();\n\n      // Move the buffer cursor to the position of the tables.\n      this.setPosition(header.tablesOffset);\n\n      // Read the row count for each of the tables as we cannot read the rows\n      // before this has been done.\n      this._tables = [];\n\n      for (var i = 0; i < 64; i++) {\n        if (((i < 32) && (header.maskValidArray[0] & Math.pow(2, i)) === 0) ||\n          ((i >= 32) && (header.maskValidArray[1] & Math.pow(2, i - 32)) ===\n          0)) {\n          continue;\n        }\n\n        this._tables[i] = new Array(this.readUInt(4));\n      }\n\n      // Now that the row counts have been read, go ahead reading all the rows\n      // one table at a time.\n      for (i = 0; i < 64; i++) {\n        if (!this._tables[i]) {\n          continue;\n        }\n\n        var rowClass = this._getTableRowClass(i);\n        var rowCount = this._tables[i].length;\n\n        for (var r = 0; r < rowCount; r++) {\n          // jscs:disable requireCapitalizedConstructors\n          this._tables[i][r] = new rowClass(this);\n          // jscs:enable requireCapitalizedConstructors\n        }\n      }\n    }\n\n    return this._tables;\n  };\n\n  /**\n   * Reads the metadata tables header.\n   *\n   * @return {TablesHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the table stream is missing or if the header is invalid.\n   */\n  this.readTablesHeader = function () {\n    if (!this._tablesHeader) {\n      // Locate the table stream and throw an exception if it is missing.\n      var streamHeader = this.getStreamHeader('#~');\n\n      if (!streamHeader) {\n        throw new ParserException('The stream for the tables is missing');\n      }\n\n      // Move the stream cursor to the position of the tables header.\n      this.setPosition(this.readMetadataHeader().offset + streamHeader.offset);\n\n      // Read the header and throw an exception if it is invalid.\n      this._tablesHeader = new TablesHeader(this);\n\n      if ((this._tablesHeader.reserved1 !== 0) ||\n        (this._tablesHeader.reserved2 !== 1)) {\n        throw new ParserException('Invalid tables header');\n      }\n    }\n\n    return this._tablesHeader;\n  };\n\n  /**\n   * Retrieves the constructor for a table row.\n   *\n   * @param {number} tableIndex\n   *   The table index.\n   *\n   * @return {Function}\n   *   Returns a constructor.\n   *\n   * @protected\n   */\n  this._getTableRowClass = function (tableIndex) {\n    switch (tableIndex) {\n      case TableIndexes.ASSEMBLY:\n        return AssemblyRow;\n\n      case TableIndexes.ASSEMBLY_OS:\n        return AssemblyOSRow;\n\n      case TableIndexes.ASSEMBLY_PROCESSOR:\n        return AssemblyProcessorRow;\n\n      case TableIndexes.ASSEMBLY_REF:\n        return AssemblyRefRow;\n\n      case TableIndexes.ASSEMBLY_REF_OS:\n        return AssemblyRefOSRow;\n\n      case TableIndexes.ASSEMBLY_REF_PROCESSOR:\n        return AssemblyRefProcessorRow;\n\n      case TableIndexes.CLASS_LAYOUT:\n        return ClassLayoutRow;\n\n      case TableIndexes.CONSTANT:\n        return ConstantRow;\n\n      case TableIndexes.CUSTOM_ATTRIBUTE:\n        return CustomAttributeRow;\n\n      case TableIndexes.DECL_SECURITY:\n        return DeclSecurityRow;\n\n      case TableIndexes.EVENT:\n        return EventRow;\n\n      case TableIndexes.EVENT_MAP:\n        return EventMapRow;\n\n      case TableIndexes.EXPORTED_TYPE:\n        return ExportedTypeRow;\n\n      case TableIndexes.FIELD:\n        return FieldRow;\n\n      case TableIndexes.FIELD_LAYOUT:\n        return FieldLayoutRow;\n\n      case TableIndexes.FIELD_MARSHAL:\n        return FieldMarshalRow;\n\n      case TableIndexes.FIELD_RVA:\n        return FieldRVARow;\n\n      case TableIndexes.FILE:\n        return FileRow;\n\n      case TableIndexes.GENERIC_PARAM:\n        return GenericParamRow;\n\n      case TableIndexes.GENERIC_PARAM_CONSTRAINT:\n        return GenericParamConstraintRow;\n\n      case TableIndexes.IMPL_MAP:\n        return ImplMapRow;\n\n      case TableIndexes.INTERFACE_IMPL:\n        return InterfaceImplRow;\n\n      case TableIndexes.MANIFEST_RESOURCE:\n        return ManifestResourceRow;\n\n      case TableIndexes.MEMBER_REF:\n        return MemberRefRow;\n\n      case TableIndexes.NESTED_CLASS:\n        return NestedClassRow;\n\n      case TableIndexes.METHOD_DEF:\n        return MethodDefRow;\n\n      case TableIndexes.METHOD_IMPL:\n        return MethodImplRow;\n\n      case TableIndexes.METHOD_SEMANTICS:\n        return MethodSemanticsRow;\n\n      case TableIndexes.MODULE:\n        return ModuleRow;\n\n      case TableIndexes.MODULE_REF:\n        return ModuleRefRow;\n\n      case TableIndexes.PARAM:\n        return ParamRow;\n\n      case TableIndexes.PROPERTY:\n        return PropertyRow;\n\n      case TableIndexes.PROPERTY_MAP:\n        return PropertyMapRow;\n\n      case TableIndexes.STAND_ALONE_SIG:\n        return StandAloneSigRow;\n\n      case TableIndexes.TYPE_DEF:\n        return TypeDefRow;\n\n      case TableIndexes.TYPE_REF:\n        return TypeRefRow;\n\n      case TableIndexes.TYPE_SPEC:\n        return TypeSpecRow;\n\n      default:\n        throw new ParserException('Unsupported metadata table at index ' +\n          tableIndex);\n    }\n  };\n\n}\n\nmodule.exports = CILParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/CILParser.js\n// module id = 8\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyOSRow (reader) {\n\n  'use strict';\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyOSRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyOSRow.js\n// module id = 9\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyProcessorRow (reader) {\n\n  'use strict';\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyProcessorRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyProcessorRow.js\n// module id = 10\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class AssemblyRefOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefOSRow (reader) {\n\n  'use strict';\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefOSRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyRefOSRow.js\n// module id = 11\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class AssemblyRefProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefProcessorRow (reader) {\n\n  'use strict';\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefProcessorRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyRefProcessorRow.js\n// module id = 12\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key or token as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKeyOrToken = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = AssemblyRefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyRefRow.js\n// module id = 13\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRow (reader) {\n\n  'use strict';\n\n  /**\n   * The id of the hashing algorithm.\n   *\n   * @type {number}\n   */\n  this.hashAlgId = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKey = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n}\n\nmodule.exports = AssemblyRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyRow.js\n// module id = 14\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ClassLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ClassLayoutRow (reader) {\n\n  'use strict';\n\n  /**\n   * The packing size.\n   *\n   * @type {number}\n   */\n  this.packingSize = reader.readUInt(2);\n\n  /**\n   * The class size.\n   *\n   * @type {number}\n   */\n  this.classSize = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = ClassLayoutRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ClassLayoutRow.js\n// module id = 15\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ConstantRow (reader) {\n\n  'use strict';\n\n  /**\n   * The type.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(1) + reader.readUInt(1);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM,\n    TableIndexes.PROPERTY\n  ]);\n\n  /**\n   * The value as an index into the Blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = ConstantRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ConstantRow.js\n// module id = 16\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = require('./DataDirectoryHeader');\n\n/**\n * Class CORHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction CORHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The size of the header, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeader = reader.readUInt(4);\n\n  /**\n   * The major runtime version.\n   *\n   * @type {number}\n   */\n  this.majorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The minor runtime version.\n   *\n   * @type {number}\n   */\n  this.minorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The metadata directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.metadata = new DataDirectoryHeader(reader);\n\n  /**\n   * The runtime flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The entry point address or token.\n   *\n   * @type {number}\n   */\n  this.entryPoint = reader.readUInt(4);\n\n  /**\n   * The resources directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.resources = new DataDirectoryHeader(reader);\n\n  /**\n   * The strong name signature directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.strongNameSignature = new DataDirectoryHeader(reader);\n\n  /**\n   * The code manager table directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.codeManagerTable = new DataDirectoryHeader(reader);\n\n  /**\n   * The VTable fix-ups directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.vTableFixups = new DataDirectoryHeader(reader);\n\n  /**\n   * The exported address table jumps directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.exportAddressTableJumps = new DataDirectoryHeader(reader);\n\n  /**\n   * The managed native header directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.managedNativeHeader = new DataDirectoryHeader(reader);\n\n}\n\nmodule.exports = CORHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/CORHeader.js\n// module id = 17\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction CustomAttributeRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.FIELD,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_DEF,\n    TableIndexes.PARAM,\n    TableIndexes.INTERFACE_IMPL,\n    TableIndexes.MEMBER_REF,\n    TableIndexes.MODULE,\n    -1,\n    TableIndexes.PROPERTY,\n    TableIndexes.EVENT,\n    TableIndexes.STAND_ALONE_SIG,\n    TableIndexes.MODULE_REF,\n    TableIndexes.TYPE_SPEC,\n    TableIndexes.ASSEMBLY,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE,\n    TableIndexes.MANIFEST_RESOURCE\n  ]);\n\n  /**\n   * The reference to the type row.\n   *\n   * @type {RowReference}\n   */\n  this.type = new RowReference(reader, [\n    -1,\n    -1,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF,\n    -1\n  ]);\n\n  /**\n   * The value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = CustomAttributeRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/CustomAttributeRow.js\n// module id = 18\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class DeclSecurityRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction DeclSecurityRow (reader) {\n\n  'use strict';\n\n  /**\n   * The action.\n   *\n   * @type {number}\n   */\n  this.action = reader.readUInt(2);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.ASSEMBLY\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.permissionSet = reader.readBlobIndex();\n\n}\n\nmodule.exports = DeclSecurityRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/DeclSecurityRow.js\n// module id = 19\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class EventMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventMapRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first event row.\n   *\n   * @type {RowReference}\n   */\n  this.eventList = new RowReference(reader, [\n    TableIndexes.EVENT\n  ]);\n\n}\n\nmodule.exports = EventMapRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/EventMapRow.js\n// module id = 20\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class EventRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventRow (reader) {\n\n  'use strict';\n\n  /**\n   * The event flags.\n   *\n   * @type {number}\n   */\n  this.eventFlags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The event type as a reference to a TypeDef, TypeRef or TypeSpec row.\n   *\n   * @type {RowReference}\n   */\n  this.eventType = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = EventRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/EventRow.js\n// module id = 21\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ExportedTypeRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ExportedTypeRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type definition id.\n   *\n   * @type {number}\n   */\n  this.typeDefId = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ExportedTypeRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ExportedTypeRow.js\n// module id = 22\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FieldRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FieldRow.js\n// module id = 23\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class FieldRVARow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRVARow (reader) {\n\n  'use strict';\n\n  /**\n   * The relative virtual address of the initial value.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The field as a reference to a Field row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldRVARow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FieldRVARow.js\n// module id = 24\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class FieldLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldLayoutRow (reader) {\n\n  'use strict';\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldLayoutRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FieldLayoutRow.js\n// module id = 25\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class FieldMarshalRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldMarshalRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.nativeType = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldMarshalRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FieldMarshalRow.js\n// module id = 26\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FileRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FileRow (reader) {\n\n  'use strict';\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = FileRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FileRow.js\n// module id = 27\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class GenericParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamRow (reader) {\n\n  'use strict';\n\n  /**\n   * The index of the generic parameter.\n   *\n   * @type {number}\n   */\n  this.number = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The reference to the owner of the generic parameter.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = GenericParamRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/GenericParamRow.js\n// module id = 28\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class GenericParamConstraintRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamConstraintRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the owner row.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.GENERIC_PARAM\n  ]);\n\n  /**\n   * The reference to the class row.\n   *\n   * @type {RowReference}\n   */\n  this.constraint = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = GenericParamConstraintRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/GenericParamConstraintRow.js\n// module id = 29\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ImplMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ImplMapRow (reader) {\n\n  'use strict';\n\n  /**\n   * The mapping flags.\n   *\n   * @type {number}\n   */\n  this.mappingFlags = reader.readUInt(2);\n\n  /**\n   * The forwarded member as a reference to a Field or MethodDef row.\n   *\n   * @type {RowReference}\n   */\n  this.memberForwarded = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The import name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.importName = reader.readStringIndex();\n\n  /**\n   * The import scope as a reference to a ModuleRef row.\n   *\n   * @type {RowReference}\n   */\n  this.importScope = new RowReference(reader, [\n    TableIndexes.MODULE\n  ]);\n\n}\n\nmodule.exports = ImplMapRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ImplMapRow.js\n// module id = 30\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class InterfaceImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction InterfaceImplRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the interface definition row.\n   *\n   * @type {RowReference}\n   */\n  this.interface = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = InterfaceImplRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/InterfaceImplRow.js\n// module id = 31\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class CustomException.\n *\n * @param {string} message\n *   The message.\n * @param {string} type\n *   The type of exception.\n *\n * @constructor\n */\nfunction CustomException (message, type) {\n\n  'use strict';\n\n  /**\n   * The exception message.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._message = message;\n\n  /**\n   * The exception type.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._type = (typeof type !== 'undefined') ? type : 'CustomException';\n\n  /**\n   * Retrieves the exception message.\n   *\n   * @return {string}\n   */\n  this.getMessage = function () {\n    return this._message;\n  };\n\n  /**\n   * Retrieves the exception type.\n   *\n   * @return {string}\n   */\n  this.getType = function () {\n    return this._type;\n  };\n\n  /**\n   * Converts the exception to a string.\n   *\n   * @return {string}\n   */\n  this.toString = function () {\n    return this.getMessage();\n  };\n\n}\n\nmodule.exports = CustomException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Exception/CustomException.js\n// module id = 32\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ManifestResourceRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ManifestResourceRow (reader) {\n\n  'use strict';\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ManifestResourceRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ManifestResourceRow.js\n// module id = 33\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar StreamHeader = require('./StreamHeader');\n\n/**\n * Class MetadataHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction MetadataHeader (reader) {\n\n  'use strict';\n\n  var i;\n\n  /**\n   * The file offset to the header relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.offset = reader.getPosition();\n\n  /**\n   * The signature.\n   *\n   * This value should always equal 0x424A5342.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * A reserved value.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n  /**\n   * The length of the version string.\n   *\n   * @type {number}\n   */\n  this.versionLength = (i = (i = reader.readUInt(4)) + (i % 4));\n\n  /**\n   * The version string.\n   *\n   * @type {string}\n   */\n  this.version = reader.readUTF8String(i, true);\n\n  /**\n   * The flags.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The number of streams.\n   *\n   * @type {number}\n   */\n  this.streams = reader.readUInt(2);\n\n  /**\n   * The stream headers.\n   *\n   * @type {Array<StreamHeader>}\n   */\n  this.streamHeaders = new Array(this.streams);\n\n  // Read the stream headers.\n  for (i = 0; i < this.streamHeaders.length; i++) {\n    this.streamHeaders[i] = new StreamHeader(reader);\n  }\n\n}\n\nmodule.exports = MetadataHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/MetadataHeader.js\n// module id = 34\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StreamHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction StreamHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The file offset to the stream relative to the metadata header.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The size of the stream, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The name of the stream.\n   *\n   * @type {string}\n   */\n  this.name = reader.readString(0, true, 4);\n\n}\n\nmodule.exports = StreamHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/StreamHeader.js\n// module id = 35\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MemberRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MemberRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.MODULE_REF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = MemberRefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/MemberRefRow.js\n// module id = 36\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class NestedClassRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction NestedClassRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the nested class information row.\n   *\n   * @type {RowReference}\n   */\n  this.nestedClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the enclosing class information row.\n   *\n   * @type {RowReference}\n   */\n  this.enclosingClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = NestedClassRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/NestedClassRow.js\n// module id = 37\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MethodDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodDefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The relative virtual address.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The implementation flags.\n   *\n   * @type {number}\n   */\n  this.implFlags = reader.readUInt(2);\n\n  /**\n   * The method flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n  /**\n   * The reference to the param definition row.\n   *\n   * @type {RowReference}\n   */\n  this.paramList = new RowReference(reader, [\n    TableIndexes.PARAM\n  ]);\n\n}\n\nmodule.exports = MethodDefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/MethodDefRow.js\n// module id = 38\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar MethodFlags = require('../Constant/MethodFlags');\n\n/**\n * Class MethodHeader.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodHeader (reader) {\n\n  'use strict';\n\n  // Retrieve the first one or two bytes specifying the flags and header size.\n  var flagsAndSize = reader.readUInt(1);\n  var tiny = true;\n\n  if ((flagsAndSize & MethodFlags.TINY_FORMAT) === 0) {\n    reader.setPosition(reader.getPosition() - 1);\n    flagsAndSize = reader.readUInt(2);\n    tiny = false;\n  }\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = tiny ? flagsAndSize & 0x03 : flagsAndSize & 0xFFF;\n\n  /**\n   * The header size.\n   *\n   * @type {number}\n   */\n  this.headerSize = tiny ? 1 : flagsAndSize >> 12;\n\n  /**\n   * The maximum number of items on the operand stack.\n   *\n   * @return {number}\n   */\n  this.maxStack = tiny ? 0 : reader.readUInt(2);\n\n  /**\n   * The size in bytes of the actual method body.\n   *\n   * @return {number}\n   */\n  this.codeSize = tiny ? flagsAndSize >> 2 : reader.readUInt(4);\n\n  /**\n   * The metadata token for a signature describing the layout of the local\n   * variables for the method\n   *\n   * @return {number}\n   */\n  this.localVarSigTok = tiny ? 0 : reader.readUInt(4);\n\n  /**\n   * The file offset to the code.\n   *\n   * @type {number}\n   */\n  this.codeOffset = reader.getPosition();\n\n}\n\nmodule.exports = MethodHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/MethodHeader.js\n// module id = 39\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class MethodFlags.\n *\n * @constructor\n * @struct\n */\nfunction MethodFlags () {\n\n  'use strict';\n\n  /**\n   * The fat format flag.\n   *\n   * @const {number}\n   */\n  this.FAT_FORMAT = 0x3;\n\n  /**\n   * The initialize locals flag.\n   *\n   * @const {number}\n   */\n  this.INITIALIZE_LOCALS = 0x10;\n\n  /**\n   * The more sections flag.\n   *\n   * @const {number}\n   */\n  this.MORE_SECTIONS = 0x8;\n\n  /**\n   * The tiny format flag.\n   *\n   * @const {number}\n   */\n  this.TINY_FORMAT = 0x2;\n\n}\n\nmodule.exports = new MethodFlags();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Constant/MethodFlags.js\n// module id = 40\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MethodImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodImplRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the method body row.\n   *\n   * @type {RowReference}\n   */\n  this.methodBody = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n  /**\n   * The reference to the method declaration row.\n   *\n   * @type {RowReference}\n   */\n  this.methodDeclaration = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n}\n\nmodule.exports = MethodImplRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/MethodImplRow.js\n// module id = 41\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MethodSemanticsRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodSemanticsRow (reader) {\n\n  'use strict';\n\n  /**\n   * The semantics.\n   *\n   * @type {number}\n   */\n  this.semantics = reader.readUInt(2);\n\n  /**\n   * The reference to the method row.\n   *\n   * @type {RowReference}\n   */\n  this.method = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The reference to the associated row.\n   *\n   * @type {RowReference}\n   */\n  this.association = new RowReference(reader, [\n    TableIndexes.EVENT,\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = MethodSemanticsRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/MethodSemanticsRow.js\n// module id = 42\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ModuleRefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ModuleRefRow.js\n// module id = 43\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRow (reader) {\n\n  'use strict';\n\n  /**\n   * The generation.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.generation = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The module id as an index into the GUID heap.\n   *\n   * @type {number}\n   */\n  this.mvid = reader.readGUIDIndex();\n\n  /**\n   * The encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encId = reader.readGUIDIndex();\n\n  /**\n   * The base encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encBaseId = reader.readGUIDIndex();\n\n}\n\nmodule.exports = ModuleRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ModuleRow.js\n// module id = 44\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ParamRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The sequence.\n   *\n   * @type {number}\n   */\n  this.sequence = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ParamRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ParamRow.js\n// module id = 45\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar BinaryParser = require('./BinaryParser');\nvar COFFHeader = require('./Header/COFFHeader');\nvar DOSHeader = require('./Header/DOSHeader');\nvar Extend = require('extend');\nvar ImageAttributes = require('./Constant/ImageAttributes');\nvar ParserException = require('./Exception/ParserException');\nvar OptionalHeader = require('./Header/OptionalHeader');\nvar ResourceDirectory = require('./Directory/ResourceDirectory');\nvar SectionHeader = require('./Header/SectionHeader');\n\n/**\n * Class PEParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {BinaryParser}\n */\nfunction PEParser (path, data) {\n\n  'use strict';\n\n  // Invoke the parent constructor.\n  Extend(true, this, new BinaryParser(path, data));\n\n  /**\n   * The COFF header.\n   *\n   * @type {COFFHeader}\n   *\n   * @protected\n   */\n  this._coffHeader = null;\n\n  /**\n   * The DOS header.\n   *\n   * @type {DOSHeader}\n   *\n   * @protected\n   */\n  this._dosHeader = null;\n\n  /**\n   * The optional header.\n   *\n   * @type {OptionalHeader}\n   *\n   * @protected\n   */\n  this._optionalHeader = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *\n   * @protected\n   */\n  this._resourceDirectory = null;\n\n  /**\n   * The resource directory file offset.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._resourceDirectoryFileOffset = null;\n\n  /**\n   * The section headers.\n   *\n   * @type {Array<SectionHeader>}\n   *\n   * @protected\n   */\n  this._sectionHeaders = null;\n\n  /**\n   * Calculates the file offset for a relative virtual address.\n   *\n   * @param {number} rva\n   *   The relative virtual address.\n   *\n   * @return {number}\n   *   Returns a file offset.\n   */\n  this.getFileOffset = function (rva) {\n    // Determine which section the address belongs to and convert it to a file\n    // offset.\n    var sectionHeaders = this.readSectionHeaders();\n\n    for (var i = 0; i < sectionHeaders.length; i++) {\n      if ((rva >= sectionHeaders[i].virtualAddress) &&\n        (rva <= sectionHeaders[i].virtualAddress +\n        sectionHeaders[i].sizeOfRawData)) {\n        return sectionHeaders[i].pointerToRawData +\n          (rva - sectionHeaders[i].virtualAddress);\n      }\n    }\n\n    return -1;\n  };\n\n  /**\n   * Retrieves the resource directory file offset.\n   *\n   * @return {number}\n   *   Returns the file offset or -1 if the resource directory is empty.\n   */\n  this.getResourceDirectoryFileOffset = function () {\n    if (!this._resourceDirectoryFileOffset) {\n      // Locate the resource section in order to determine the file offset.\n      var sectionHeaders = this.readSectionHeaders();\n      var sectionHeader = null;\n\n      for (var i = 0; i < sectionHeaders.length; i++) {\n        if (sectionHeaders[i].name === '.rsrc') {\n          sectionHeader = sectionHeaders[i];\n          break;\n        }\n      }\n\n      if (sectionHeader) {\n        this._resourceDirectoryFileOffset = sectionHeader.pointerToRawData;\n      }\n      else {\n        this._resourceDirectoryFileOffset = -1;\n      }\n    }\n\n    return this._resourceDirectoryFileOffset;\n  };\n\n  /**\n   * Reads the COFF header.\n   *\n   * @return {COFFHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readCOFFHeader = function () {\n    if (!this._coffHeader) {\n      // Move the stream cursor to the position of the COFF header as specified\n      // by the DOS header.\n      this.setPosition(this.readDOSHeader().lfanew);\n\n      // Read the header and throw an exception if the header seems to be\n      // invalid.\n      this._coffHeader = new COFFHeader(this);\n\n      if (this._coffHeader.signature !== ImageAttributes.IMAGE_NT_SIGNATURE) {\n        throw new ParserException('Invalid COFF header');\n      }\n    }\n\n    return this._coffHeader;\n  };\n\n  /**\n   * Reads the DOS header.\n   *\n   * @return {DOSHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readDOSHeader = function () {\n    if (!this._dosHeader) {\n      // Reset the position to the beginning of the stream.\n      this.setPosition(0);\n\n      // Read the header from the buffer and throw an exception if the header is\n      // invalid.\n      this._dosHeader = new DOSHeader(this);\n\n      if (this._dosHeader.magic !== ImageAttributes.IMAGE_DOS_SIGNATURE) {\n        throw new ParserException('Invalid DOS header');\n      }\n    }\n\n    return this._dosHeader;\n  };\n\n  /**\n   * Reads the optional header.\n   *\n   * @return {OptionalHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readOptionalHeader = function () {\n    if ((!this._optionalHeader) &&\n      (this.readCOFFHeader().sizeOfOptionalHeader > 0)) {\n      // Move the stream cursor to the position of the optional header as\n      // specified by the DOS header and the size of the COFF header.\n      this.setPosition(this.readDOSHeader().lfanew + 24);\n\n      // Read the entire header including the data directories.\n      this._optionalHeader = new OptionalHeader(this);\n\n      if ((this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR32_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_ROM_OPTIONAL_HDR_MAGIC)) {\n        throw new ParserException('Invalid optional header');\n      }\n    }\n\n    return this._optionalHeader;\n  };\n\n  /**\n   * Reads the resource directory.\n   *\n   * @return {ResourceDirectory}\n   *   Returns the resource directory.\n   */\n  this.readResourceDirectory = function () {\n    if (this.getResourceDirectoryFileOffset() < 1) {\n      return this._resourceDirectory;\n    }\n\n    this.setPosition(this.getResourceDirectoryFileOffset());\n    this._resourceDirectory = new ResourceDirectory(this);\n    return this._resourceDirectory;\n  };\n\n  /**\n   * Reads the section headers.\n   *\n   * @return {Array<SectionHeader>}\n   *   Returns an array of section headers.\n   */\n  this.readSectionHeaders = function () {\n    if (!this._sectionHeaders) {\n      // Move the stream cursor to the position of the section headers.\n      this.setPosition(this.readDOSHeader().lfanew + 24 +\n        this.readCOFFHeader().sizeOfOptionalHeader);\n\n      // Read each of the section headers.\n      this._sectionHeaders = new Array(this.readCOFFHeader().numberOfSections);\n\n      for (var i = 0; i < this._sectionHeaders.length; i++) {\n        this._sectionHeaders[i] = new SectionHeader(this);\n      }\n    }\n\n    return this._sectionHeaders;\n  };\n\n}\n\nmodule.exports = PEParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/PEParser.js\n// module id = 46\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class BinaryParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n */\nfunction BinaryParser (path, data) {\n\n  'use strict';\n\n  /**\n   * The file contents.\n   *\n   * @type {ArrayBuffer}\n   *\n   * @protected\n   */\n  this._data = (typeof data !== 'undefined') ? new Uint8Array(data) : null;\n\n  /**\n   * The file path.\n   *\n   * @type {string}\n   *\n   * @protected\n   */\n  this._path = path;\n\n  /**\n   * The file position.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._position = 0;\n\n  /**\n   * Retrieves the file path.\n   *\n   * @return {string}\n   *   Returns a path.\n   */\n  this.getPath = function () {\n    return this._path;\n  };\n\n  /**\n   * Retrieves the buffer position.\n   *\n   * @return {number}\n   *   Returns the buffer position.\n   */\n  this.getPosition = function () {\n    return this._position;\n  };\n\n  /**\n   * Retrieves the buffer size.\n   *\n   * @return {number}\n   *   Returns the buffer size.\n   */\n  this.getSize = function () {\n    return this._data.byteLength;\n  };\n\n  /**\n   * Loads the file contents.\n   *\n   * @param {Function} success\n   *   The success callback.\n   * @param {Function} error\n   *   The error callback.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   */\n  this.loadFile = function (success, error) {\n    var request = new XMLHttpRequest();\n    request.open('GET', this.getPath(), true);\n    request.responseType = 'arraybuffer';\n    request.onreadystatechange = (function (reader) {\n      return function () {\n        if (request.readyState === XMLHttpRequest.DONE) {\n          if (request.status === 200) {\n            // Store the data as an UInt8 array and reset the position.\n            reader._data = new Uint8Array(request.response);\n            reader._position = 0;\n\n            // Invoke the success callback in order for the invoker to proceed.\n            success(reader);\n          }\n          else {\n            error(reader);\n          }\n        }\n      };\n    })(this);\n    request.send(null);\n    return this;\n  };\n\n  /**\n   * Reads the next bytes from the buffer.\n   *\n   * @param {number} count\n   *   The number of bytes to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readBytes = function (count) {\n    var bytes = [];\n\n    for (var i = 0; i < count; i++) {\n      if (this._position >= this.getSize()) {\n        break;\n      }\n\n      bytes.push(this._data[this._position++]);\n    }\n\n    return bytes;\n  };\n\n  /**\n   * Reads an ASCII string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a NULL\n   *   terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a NULL terminator after the string has been read in\n   *   which case the string will be terminated.\n   * @param {number} boundary\n   *   The string boundary in bytes.\n   *\n   * @return {string}\n   *   Returns an ASCII string.\n   */\n  this.readString = function (length, terminate, boundary) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (((!boundary) || (s.length % boundary === 0)) &&\n        (s.endsWith(String.fromCharCode(0)))) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(String.fromCharCode(0))) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return s;\n  };\n\n  /**\n   * Reads the next unsigned integer from the buffer.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   *\n   * @return {number|null}\n   *   Returns the integer or NULL if the end is reached.\n   */\n  this.readUInt = function (size) {\n    var bytes = this.readBytes(size);\n    var integer = 0;\n\n    if (bytes.length != size) {\n      return null;\n    }\n\n    for (var i = size - 1; i > -1; i--) {\n      integer |= (bytes[i] << (8 * i));\n    }\n\n    return integer;\n  };\n\n  /**\n   * Reads the next unsigned integers.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   * @param {number} count\n   *   The number of integers to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of integers.\n   */\n  this.readUIntArray = function (size, count) {\n    var integers = [];\n\n    for (var i = 0; i < count; i++) {\n      var integer = this.readUInt(size);\n\n      if (integer === null) {\n        break;\n      }\n\n      integers.push(integer);\n    }\n\n    return integers;\n  };\n\n  /**\n   * Reads a UTF-8 string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a\n   *   string terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a string terminator after the string has been read in\n   *   which case the string will always be terminated.\n   *\n   * @return {string}\n   *   Returns a UTF-8 string.\n   */\n  this.readUTF8String = function (length, terminate) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (s.endsWith(String.fromCharCode(0, 0))) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(String.fromCharCode(0, 0))) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return decodeURI(encodeURIComponent(s));\n  };\n\n  /**\n   * Sets the file path.\n   *\n   * @param {string} path\n   *   The file path.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPath = function (path) {\n    this._path = path;\n    return this;\n  };\n\n  /**\n   * Sets the buffer position.\n   *\n   * @param {number} position\n   *   The new position.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPosition = function (position) {\n    this._position = position;\n    return this;\n  };\n\n}\n\nmodule.exports = BinaryParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/BinaryParser.js\n// module id = 47\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class COFFHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction COFFHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The signature.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The architecture type of the computer.\n   *\n   * @type {number}\n   */\n  this.machine = reader.readUInt(2);\n\n  /**\n   * The number of sections.\n   *\n   * @type {number}\n   */\n  this.numberOfSections = reader.readUInt(2);\n\n  /**\n   * The low 32 bits of the time stamp of the image.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The offset of the symbol table, in bytes, or zero if no COFF symbol table\n   * exists.\n   *\n   * @type {number}\n   */\n  this.pointerToSymbolTable = reader.readUInt(4);\n\n  /**\n   * The number of symbols in the symbol table.\n   *\n   * @type {number}\n   */\n  this.numberOfSymbols = reader.readUInt(4);\n\n  /**\n   * The size of the optional header, in bytes. This value should be 0 for\n   * object files.\n   *\n   * @type {number}\n   */\n  this.sizeOfOptionalHeader = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image. This member can be one or more of the\n   * following values.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(2);\n\n}\n\nmodule.exports = COFFHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/COFFHeader.js\n// module id = 48\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DOSHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DOSHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The magic number.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The number of bytes on the last page in the file.\n   *\n   * @type {number}\n   */\n  this.cblp = reader.readUInt(2);\n\n  /**\n   * The number of pages in the file.\n   *\n   * @type {number}\n   */\n  this.cp = reader.readUInt(2);\n\n  /**\n   * The number of relocations.\n   *\n   * @type {number}\n   */\n  this.crlc = reader.readUInt(2);\n\n  /**\n   * The size of the header in paragraphs.\n   *\n   * @type {number}\n   */\n  this.cparhdr = reader.readUInt(2);\n\n  /**\n   * The minimum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.minAlloc = reader.readUInt(2);\n\n  /**\n   * The maximum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.maxAlloc = reader.readUInt(2);\n\n  /**\n   * The initial (relative) SS value.\n   *\n   * @type {number}\n   */\n  this.ss = reader.readUInt(2);\n\n  /**\n   * The initial SP value.\n   *\n   * @type {number}\n   */\n  this.sp = reader.readUInt(2);\n\n  /**\n   * The checksum.\n   *\n   * @type {number}\n   */\n  this.csum = reader.readUInt(2);\n\n  /**\n   * The initial IP value.\n   *\n   * @type {number}\n   */\n  this.ip = reader.readUInt(2);\n\n  /**\n   * The initial (relative) CS value.\n   *\n   * @type {number}\n   */\n  this.cs = reader.readUInt(2);\n\n  /**\n   * The file address of the relocation table.\n   *\n   * @type {number}\n   */\n  this.lfarlc = reader.readUInt(2);\n\n  /**\n   * The overlay number.\n   *\n   * @type {number}\n   */\n  this.ovno = reader.readUInt(2);\n\n  /**\n   * The first reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res1 = reader.readUIntArray(2, 4);\n\n  /**\n   * The OEM identifier.\n   *\n   * @type {number}\n   */\n  this.oemid = reader.readUInt(2);\n\n  /**\n   * The OEM information.\n   *\n   * @type {number}\n   */\n  this.oeminfo = reader.readUInt(2);\n\n  /**\n   * The second reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res2 = reader.readUIntArray(2, 10);\n\n  /**\n   * The file address of the new EXE header.\n   *\n   * @type {number}\n   */\n  this.lfanew = reader.readUInt(4);\n\n}\n\nmodule.exports = DOSHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/DOSHeader.js\n// module id = 49\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = require('./DataDirectoryHeader');\nvar ImageAttributes = require('./../Constant/ImageAttributes');\n\n/**\n * Class OptionalHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction OptionalHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The state of the image file.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The major version number of the linker.\n   *\n   * @type {number}\n   */\n  this.majorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The minor version number of the linker.\n   *\n   * @type {number}\n   */\n  this.minorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The size of the code section, in bytes, or the sum of all such sections if\n   * there are multiple code sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfCode = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data section, in bytes, or the sum of all such\n   * sections if there are multiple initialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfInitializedData = reader.readUInt(4);\n\n  /**\n   * The size of the uninitialized data section, in bytes, or the sum of all\n   * such sections if there are multiple uninitialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfUninitializedData = reader.readUInt(4);\n\n  /**\n   * A pointer to the entry point function, relative to the image base address.\n   *\n   * @type {number}\n   */\n  this.addressOfEntryPoint = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the code section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfCode = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the data section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfData = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 0 : 4);\n\n  /**\n   * The preferred address of the first byte of the image when it is loaded in\n   * memory.\n   *\n   * @type {number}\n   */\n  this.imageBase = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The alignment of sections loaded in memory, in bytes.\n   *\n   * @type {number}\n   */\n  this.sectionAlignment = reader.readUInt(4);\n\n  /**\n   * The alignment of the raw data of sections in the image file, in bytes.\n   *\n   * @type {number}\n   */\n  this.fileAlignment = reader.readUInt(4);\n\n  /**\n   * The major version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.majorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.minorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the image.\n   *\n   * @type {number}\n   */\n  this.majorImageVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the image.\n   *\n   * @type {number}\n   */\n  this.minorImageVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.majorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.minorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * This member is reserved and must be 0.\n   *\n   * @type {number}\n   */\n  this.win32VersionValue = reader.readUInt(4);\n\n  /**\n   * The size of the image, in bytes, including all headers.\n   *\n   * @type {number}\n   */\n  this.sizeOfImage = reader.readUInt(4);\n\n  /**\n   * The combined size of the following items, rounded to a multiple of the\n   * value specified in the fileAlignment member.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeaders = reader.readUInt(4);\n\n  /**\n   * The image file checksum.\n   *\n   * @type {number}\n   */\n  this.checkSum = reader.readUInt(4);\n\n  /**\n   * The subsystem required to run this image.\n   *\n   * @type {number}\n   */\n  this.subsystem = reader.readUInt(2);\n\n  /**\n   * The DLL characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.dllCharacteristics = reader.readUInt(2);\n\n  /**\n   * The number of bytes to reserve for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to reserve for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * This member is obsolete.\n   *\n   * @type {number}\n   */\n  this.loaderFlags = reader.readUInt(4);\n\n  /**\n   * The number of directory entries in the remainder of the optional header.\n   *\n   * @type {number}\n   */\n  this.numberOfRvaAndSizes = reader.readUInt(4);\n\n  /**\n   * The array of data directory headers.\n   *\n   * @type {Array<DataDirectoryHeader>}\n   */\n  this.dataDirectory = new Array(this.numberOfRvaAndSizes);\n\n  // Read the data directory headers.\n  for (var i = 0; i < this.dataDirectory.length; i++) {\n    this.dataDirectory[i] = new DataDirectoryHeader(reader);\n  }\n\n}\n\nmodule.exports = OptionalHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/OptionalHeader.js\n// module id = 50\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar ResourceDataEntry = require('./ResourceDataEntry');\nvar ResourceDirectory = require('./../Directory/ResourceDirectory');\n\n/**\n * Class ResourceDirectoryEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectoryEntry (reader) {\n\n  'use strict';\n\n  /**\n   * The name.\n   *\n   * @type {number}\n   */\n  this.name = reader.readUInt(4);\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.readUInt(4);\n\n  /**\n   * The data entry.\n   *\n   * @type {ResourceDataEntry}\n   */\n  this.data = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *   The resource directory or NULL if this entry does not point to one.\n   */\n  this.directory = null;\n\n  // Read either a resource directory or a data entry.\n  if (this.offsetToData >>> 31 === 1) {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      (this.offsetToData << 1 >>> 1);\n    reader.setPosition(this.offsetToData);\n    this.directory = new ResourceDirectory(reader);\n  }\n  else {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      this.offsetToData;\n    reader.setPosition(this.offsetToData);\n    this.data = new ResourceDataEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectoryEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Entry/ResourceDirectoryEntry.js\n// module id = 51\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDataEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDataEntry (reader) {\n\n  'use strict';\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.getFileOffset(reader.readUInt(4));\n\n  /**\n   * The data size.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The code page.\n   *\n   * @type {number}\n   */\n  this.codePage = reader.readUInt(4);\n\n  /**\n   * The reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n}\n\nmodule.exports = ResourceDataEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Entry/ResourceDataEntry.js\n// module id = 52\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class SectionHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction SectionHeader (reader) {\n\n  'use strict';\n\n  /**\n   * The section name.\n   *\n   * @type {string}\n   */\n  this.name = reader.readUTF8String(8, true);\n\n  /**\n   * The file address or the total size of the section when loaded into memory,\n   * in bytes.\n   *\n   * @type {number}\n   */\n  this.misc = reader.readUInt(4);\n\n  /**\n   * The address of the first byte of the section when loaded into memory,\n   * relative to the image base.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data on disk, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the first page within the COFF file.\n   *\n   * @type {number}\n   */\n  this.pointerToRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToRelocations = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToLinenumbers = reader.readUInt(4);\n\n  /**\n   * The number of relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfRelocations = reader.readUInt(2);\n\n  /**\n   * The number of line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfLinenumbers = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n}\n\nmodule.exports = SectionHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/SectionHeader.js\n// module id = 53\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class PropertyMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyMapRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first property row.\n   *\n   * @type {RowReference}\n   */\n  this.propertyList = new RowReference(reader, [\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = PropertyMapRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/PropertyMapRow.js\n// module id = 54\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class PropertyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyRow (reader) {\n\n  'use strict';\n\n  /**\n   * The property flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.type = reader.readBlobIndex();\n\n}\n\nmodule.exports = PropertyRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/PropertyRow.js\n// module id = 55\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StandAloneSigRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction StandAloneSigRow (reader) {\n\n  'use strict';\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = StandAloneSigRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/StandAloneSigRow.js\n// module id = 56\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TablesHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction TablesHeader (reader) {\n\n  'use strict';\n\n  var i1, i2;\n\n  /**\n   * The first reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved1 = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(1);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(1);\n\n  /**\n   * The size of the indexes into the different streams.\n   *\n   * @type {number}\n   */\n  this.heapOffsetSizes = reader.readUInt(1);\n\n  /**\n   * The second reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved2 = reader.readUInt(1);\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {Array<number>}\n   */\n  this.maskValidArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {number}\n   */\n  this.maskValid = (i2 << 32) | i1;\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {Array<number>}\n   */\n  this.maskSortedArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {number}\n   */\n  this.maskSorted = (i2 << 32) | i1;\n\n  /**\n   * The file offset to the tables relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.tablesOffset = reader.getPosition();\n\n}\n\nmodule.exports = TablesHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/TablesHeader.js\n// module id = 57\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class TypeDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeDefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.extends = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The reference to the field information row.\n   *\n   * @type {RowReference}\n   */\n  this.fieldList = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n  /**\n   * The reference to the method information row.\n   *\n   * @type {RowReference}\n   */\n  this.methodList = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n}\n\nmodule.exports = TypeDefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/TypeDefRow.js\n// module id = 58\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class TypeRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeRefRow (reader) {\n\n  'use strict';\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.resolutionScope = new RowReference(reader, [\n    TableIndexes.MODULE,\n    TableIndexes.MODULE_REF,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.TYPE_REF\n  ]);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n}\n\nmodule.exports = TypeRefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/TypeRefRow.js\n// module id = 59\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TypeSpecRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeSpecRow (reader) {\n\n  'use strict';\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = TypeSpecRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/TypeSpecRow.js\n// module id = 60\n// module chunks = 0 1"],"sourceRoot":""}