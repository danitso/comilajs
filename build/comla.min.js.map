{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///comla.min.js","webpack:///webpack/bootstrap aca47db9265e61be5842","webpack:///./src/Parser/Constant/TableIndexes.js","webpack:///./src/Parser/Reference/RowReference.js","webpack:///./~/extend/index.js","webpack:///./src/Parser/Constant/ImageAttributes.js","webpack:///./src/Parser/Directory/ResourceDirectory.js","webpack:///./src/Parser/Exception/ParserException.js","webpack:///./src/Parser/Header/DataDirectoryHeader.js","webpack:///./src/Parser/CILParser.js","webpack:///./src/Exception/CustomException.js","webpack:///./src/Parser/BinaryParser.js","webpack:///./src/Parser/Constant/MethodFlags.js","webpack:///./src/Parser/Entry/ResourceDataEntry.js","webpack:///./src/Parser/Entry/ResourceDirectoryEntry.js","webpack:///./src/Parser/Header/COFFHeader.js","webpack:///./src/Parser/Header/CORHeader.js","webpack:///./src/Parser/Header/DOSHeader.js","webpack:///./src/Parser/Header/MetadataHeader.js","webpack:///./src/Parser/Header/MethodHeader.js","webpack:///./src/Parser/Header/OptionalHeader.js","webpack:///./src/Parser/Header/SectionHeader.js","webpack:///./src/Parser/Header/StreamHeader.js","webpack:///./src/Parser/Header/TablesHeader.js","webpack:///./src/Parser/PEParser.js","webpack:///./src/Parser/Row/AssemblyOSRow.js","webpack:///./src/Parser/Row/AssemblyProcessorRow.js","webpack:///./src/Parser/Row/AssemblyRefOSRow.js","webpack:///./src/Parser/Row/AssemblyRefProcessorRow.js","webpack:///./src/Parser/Row/AssemblyRefRow.js","webpack:///./src/Parser/Row/AssemblyRow.js","webpack:///./src/Parser/Row/ClassLayoutRow.js","webpack:///./src/Parser/Row/ConstantRow.js","webpack:///./src/Parser/Row/CustomAttributeRow.js","webpack:///./src/Parser/Row/DeclSecurityRow.js","webpack:///./src/Parser/Row/EventMapRow.js","webpack:///./src/Parser/Row/EventRow.js","webpack:///./src/Parser/Row/ExportedTypeRow.js","webpack:///./src/Parser/Row/FieldLayoutRow.js","webpack:///./src/Parser/Row/FieldMarshalRow.js","webpack:///./src/Parser/Row/FieldRVARow.js","webpack:///./src/Parser/Row/FieldRow.js","webpack:///./src/Parser/Row/FileRow.js","webpack:///./src/Parser/Row/GenericParamConstraintRow.js","webpack:///./src/Parser/Row/GenericParamRow.js","webpack:///./src/Parser/Row/ImplMapRow.js","webpack:///./src/Parser/Row/InterfaceImplRow.js","webpack:///./src/Parser/Row/ManifestResourceRow.js","webpack:///./src/Parser/Row/MemberRefRow.js","webpack:///./src/Parser/Row/MethodDefRow.js","webpack:///./src/Parser/Row/MethodImplRow.js","webpack:///./src/Parser/Row/MethodSemanticsRow.js","webpack:///./src/Parser/Row/ModuleRefRow.js","webpack:///./src/Parser/Row/ModuleRow.js","webpack:///./src/Parser/Row/NestedClassRow.js","webpack:///./src/Parser/Row/ParamRow.js","webpack:///./src/Parser/Row/PropertyMapRow.js","webpack:///./src/Parser/Row/PropertyRow.js","webpack:///./src/Parser/Row/StandAloneSigRow.js","webpack:///./src/Parser/Row/TypeDefRow.js","webpack:///./src/Parser/Row/TypeRefRow.js","webpack:///./src/Parser/Row/TypeSpecRow.js","webpack:///./src/Main.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","TableIndexes","ASSEMBLY","ASSEMBLY_OS","ASSEMBLY_PROCESSOR","ASSEMBLY_REF","ASSEMBLY_REF_OS","ASSEMBLY_REF_PROCESSOR","CLASS_LAYOUT","CONSTANT","CUSTOM_ATTRIBUTE","DECL_SECURITY","EVENT","EVENT_MAP","EXPORTED_TYPE","FIELD","FIELD_LAYOUT","FIELD_MARSHAL","FIELD_RVA","FILE","GENERIC_PARAM","GENERIC_PARAM_CONSTRAINT","IMPL_MAP","INTERFACE_IMPL","MANIFEST_RESOURCE","MEMBER_REF","METHOD_DEF","METHOD_IMPL","METHOD_SEMANTICS","MODULE","MODULE_REF","NESTED_CLASS","PARAM","PROPERTY","PROPERTY_MAP","STAND_ALONE_SIG","TYPE_REF","TYPE_DEF","TYPE_SPEC","RowReference","reader","tableIndexes","tableIndex","rowIndex","bv","bc","size","tables","readTables","Math","pow","length","tableRowIndex","readUInt","hasOwn","toStr","toString","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","key","extend","options","src","copy","copyIsArray","clone","target","arguments","deep","ImageAttributes","IMAGE_DOS_SIGNATURE","IMAGE_NT_OPTIONAL_HDR64_MAGIC","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_SIGNATURE","IMAGE_ROM_OPTIONAL_HDR_MAGIC","ResourceDirectory","characteristics","timeDateStamp","majorVersion","minorVersion","numberOfNamedEntries","numberOfIdEntries","entries","position","getPosition","setPosition","ResourceDirectoryEntry","ParserException","message","Extend","CustomException","DataDirectoryHeader","virtualAddress","CILParser","path","data","PEParser","_corHeader","_metadataHeader","_methodHeaders","_tables","_tablesHeader","getStreamHeader","streamHeaders","readMetadataHeader","readBlobIndex","readTablesHeader","heapOffsetSizes","readCORHeader","readOptionalHeader","dataDirectory","getFileOffset","CORHeader","sizeOfHeader","readGUIDFromHeap","index","streamHeader","offset","guid","readString","hex","charCodeAt","readGUIDIndex","metadata","MetadataHeader","signature","readMethodHeaders","rva","MethodHeader","readMethodInstructions","header","codeOffset","readBytes","codeSize","readStringFromHeap","decodeURIComponent","encodeURIComponent","readStringIndex","tablesOffset","maskValidArray","rowClass","_getTableRowClass","rowCount","r","TablesHeader","reserved1","reserved2","AssemblyRow","AssemblyOSRow","AssemblyProcessorRow","AssemblyRefRow","AssemblyRefOSRow","AssemblyRefProcessorRow","ClassLayoutRow","ConstantRow","CustomAttributeRow","DeclSecurityRow","EventRow","EventMapRow","ExportedTypeRow","FieldRow","FieldLayoutRow","FieldMarshalRow","FieldRVARow","FileRow","GenericParamRow","GenericParamConstraintRow","ImplMapRow","InterfaceImplRow","ManifestResourceRow","MemberRefRow","NestedClassRow","MethodDefRow","MethodImplRow","MethodSemanticsRow","ModuleRow","ModuleRefRow","ParamRow","PropertyRow","PropertyMapRow","StandAloneSigRow","TypeDefRow","TypeRefRow","TypeSpecRow","type","_message","_type","getMessage","getType","BinaryParser","_data","Uint8Array","_path","_position","getPath","getSize","byteLength","loadFile","success","error","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","response","send","count","bytes","push","terminate","boundary","String","fromCharCode","endsWith","indexOf","substring","integer","readUIntArray","integers","readUTF8String","decodeURI","setPath","MethodFlags","FAT_FORMAT","INITIALIZE_LOCALS","MORE_SECTIONS","TINY_FORMAT","ResourceDataEntry","offsetToData","codePage","reserved","directory","getResourceDirectoryFileOffset","COFFHeader","machine","numberOfSections","pointerToSymbolTable","numberOfSymbols","sizeOfOptionalHeader","majorRuntimeVersion","minorRuntimeVersion","flags","entryPoint","resources","strongNameSignature","codeManagerTable","vTableFixups","exportAddressTableJumps","managedNativeHeader","DOSHeader","magic","cblp","cp","crlc","cparhdr","minAlloc","maxAlloc","ss","sp","csum","ip","cs","lfarlc","ovno","res1","oemid","oeminfo","res2","lfanew","versionLength","version","streams","StreamHeader","flags_and_size","tiny","maxStack","localVarSigTok","OptionalHeader","majorLinkerVersion","minorLinkerVersion","sizeOfCode","sizeOfInitializedData","sizeOfUninitializedData","addressOfEntryPoint","baseOfCode","baseOfData","imageBase","sectionAlignment","fileAlignment","majorOperatingSystemVersion","minorOperatingSystemVersion","majorImageVersion","minorImageVersion","majorSubsystemVersion","minorSubsystemVersion","win32VersionValue","sizeOfImage","sizeOfHeaders","checkSum","subsystem","dllCharacteristics","sizeOfStackReserve","sizeOfStackCommit","sizeOfHeapReserve","sizeOfHeapCommit","loaderFlags","numberOfRvaAndSizes","SectionHeader","misc","sizeOfRawData","pointerToRawData","pointerToRelocations","pointerToLinenumbers","numberOfRelocations","numberOfLinenumbers","i1","i2","maskValid","maskSortedArray","maskSorted","_coffHeader","_dosHeader","_optionalHeader","_resourceDirectory","_resourceDirectoryFileOffset","_sectionHeaders","sectionHeaders","readSectionHeaders","sectionHeader","readCOFFHeader","readDOSHeader","readResourceDirectory","osPlatformID","osMajorVersion","osMinorVersion","processor","assemblyRef","buildNumber","revisionNumber","publicKeyOrToken","culture","hashValue","hashAlgId","publicKey","packingSize","classSize","parent","action","permissionSet","eventList","eventFlags","eventType","typeDefId","typeName","typeNamespace","implementation","field","nativeType","owner","constraint","number","mappingFlags","memberForwarded","importName","importScope","class","interface","implFlags","paramList","methodBody","methodDeclaration","semantics","method","association","generation","mvid","encId","encBaseId","nestedClass","enclosingClass","sequence","propertyList","extends","fieldList","methodList","resolutionScope","Main","run","console","log"],"mappings":";;;;;;;;;;;;;;;;;;CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,aAAAH,GACA,gBAAAC,SACAA,QAAA,QAAAD,IAEAD,EAAA,QAAAC,KACCK,KAAA,WACD,MCkBgB,UAAUC,GCxB1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAV,WAUA,OANAK,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,GAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KA+DA,OAnCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAG,EAAA,SAAAK,GAA2C,MAAAA,IAG3CR,EAAAS,EAAA,SAAAf,EAAAgB,EAAAC,GACAX,EAAAY,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAX,EAAAkB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAK,GAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDrB,EAAAwB,EAAA,WAGAxB,IAAAyB,EAAA,MDkCM,SAAU9B,EAAQD,GE3ExB,QAAAgC,KAEA,YAOA5B,MAAA6B,SAAA,GAOA7B,KAAA8B,YAAA,GAOA9B,KAAA+B,mBAAA,GAOA/B,KAAAgC,aAAA,GAOAhC,KAAAiC,gBAAA,GAOAjC,KAAAkC,uBAAA,GAOAlC,KAAAmC,aAAA,GAOAnC,KAAAoC,SAAA,GAOApC,KAAAqC,iBAAA,GAOArC,KAAAsC,cAAA,GAOAtC,KAAAuC,MAAA,GAOAvC,KAAAwC,UAAA,GAOAxC,KAAAyC,cAAA,GAOAzC,KAAA0C,MAAA,EAOA1C,KAAA2C,aAAA,GAOA3C,KAAA4C,cAAA,GAOA5C,KAAA6C,UAAA,GAOA7C,KAAA8C,KAAA,GAOA9C,KAAA+C,cAAA,GAOA/C,KAAAgD,yBAAA,GAOAhD,KAAAiD,SAAA,GAOAjD,KAAAkD,eAAA,EAOAlD,KAAAmD,kBAAA,GAOAnD,KAAAoD,WAAA,GAOApD,KAAAqD,WAAA,EAOArD,KAAAsD,YAAA,GAOAtD,KAAAuD,iBAAA,GAOAvD,KAAAwD,OAAA,EAOAxD,KAAAyD,WAAA,GAOAzD,KAAA0D,aAAA,GAOA1D,KAAA2D,MAAA,EAOA3D,KAAA4D,SAAA,GAOA5D,KAAA6D,aAAA,GAOA7D,KAAA8D,gBAAA,GAOA9D,KAAA+D,SAAA,EAOA/D,KAAAgE,SAAA,EAOAhE,KAAAiE,UAAA,GAIApE,EAAAD,QAAA,GAAAgC,IFyGM,SAAU/B,EAAQD,GG7WxB,QAAAsE,GAAAC,EAAAC,GAEA,YAOApE,MAAAqE,YAAA,EAOArE,KAAAsE,UAAA,EAGA,SAAAhD,EAAA6C,EAAAC,GAKA,IAHA,GAAAG,GAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAAP,EAAAQ,cAGAJ,EAAAK,KAAAC,IAAA,EAAAL,EAAA,IAAAJ,EAAAU,QACAN,GAIA,QAAAnE,GAAA,EAAmBA,EAAA+D,EAAAU,OAAyBzE,IAC5C,GAAAqE,EAAAN,EAAA/D,KACAqE,EAAAN,EAAA/D,IAAAyE,OAAA,OACAL,EAAA,CACA,OAKA,GAAAM,GAAAZ,EAAAa,SAAAP,EAGAnD,GAAA+C,WAAAD,EAAAW,EAAAR,EAAA,GACAjD,EAAAgD,SAAAS,GAAAP,GAEGxE,KAAAmE,EAAAC,GAIHvE,EAAAD,QAAAsE,GHgZM,SAAUrE,EAAQD,EAASM,GAEjC,YI5dA,IAAA+E,GAAAlE,OAAAS,UAAAC,eACAyD,EAAAnE,OAAAS,UAAA2D,SAEAC,EAAA,SAAAC,GACA,wBAAAC,OAAAF,QACAE,MAAAF,QAAAC,GAGA,mBAAAH,EAAA3E,KAAA8E,IAGAE,EAAA,SAAAC,GACA,IAAAA,GAAA,oBAAAN,EAAA3E,KAAAiF,GACA,QAGA,IAAAC,GAAAR,EAAA1E,KAAAiF,EAAA,eACAE,EAAAF,EAAAG,aAAAH,EAAAG,YAAAnE,WAAAyD,EAAA1E,KAAAiF,EAAAG,YAAAnE,UAAA,gBAEA,IAAAgE,EAAAG,cAAAF,IAAAC,EACA,QAKA,IAAAE,EACA,KAAAA,IAAAJ,IAEA,gBAAAI,GAAAX,EAAA1E,KAAAiF,EAAAI,GAGA/F,GAAAD,QAAA,QAAAiG,KACA,GAAAC,GAAAlF,EAAAmF,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,UAAA,GACA/F,EAAA,EACAyE,EAAAsB,UAAAtB,OACAuB,GAAA,CAYA,KATA,iBAAAF,IACAE,EAAAF,EACAA,EAAAC,UAAA,OAEA/F,EAAA,IACE,gBAAA8F,IAAA,kBAAAA,IAAA,MAAAA,KACFA,MAGO9F,EAAAyE,IAAYzE,EAGnB,UAFAyF,EAAAM,UAAA/F,IAIA,IAAAO,IAAAkF,GACAC,EAAAI,EAAAvF,GACAoF,EAAAF,EAAAlF,GAGAuF,IAAAH,IAEAK,GAAAL,IAAAT,EAAAS,KAAAC,EAAAb,EAAAY,MACAC,GACAA,GAAA,EACAC,EAAAH,GAAAX,EAAAW,SAEAG,EAAAH,GAAAR,EAAAQ,QAIAI,EAAAvF,GAAAiF,EAAAQ,EAAAH,EAAAF,IAGM,SAAAA,IACNG,EAAAvF,GAAAoF,GAQA,OAAAG,KJseM,SAAUtG,EAAQD,GKliBxB,QAAA0G,KAEA,YAOAtG,MAAAuG,oBAAA,MAOAvG,KAAAwG,8BAAA,IAOAxG,KAAAyG,8BAAA,IAOAzG,KAAA0G,mBAAA,MAOA1G,KAAA2G,6BAAA,IAIA9G,EAAAD,QAAA,GAAA0G,ILgkBM,SAAUzG,EAAQD,EAASM,GMtmBjC,QAAA0G,GAAAzC,GAEA,YAOAnE,MAAA6G,gBAAA1C,EAAAa,SAAA,GAOAhF,KAAA8G,cAAA3C,EAAAa,SAAA,GAOAhF,KAAA+G,aAAA5C,EAAAa,SAAA,GAOAhF,KAAAgH,aAAA7C,EAAAa,SAAA,GAOAhF,KAAAiH,qBAAA9C,EAAAa,SAAA,GAQAhF,KAAAkH,kBAAA/C,EAAAa,SAAA,GAOAhF,KAAAmH,QAAA,GAAA7B,OAAAtF,KAAAkH,kBAAAlH,KAAAiH,qBAKA,QAFAG,GAAAjD,EAAAkD,cAEAhH,EAAA,EAAiBA,EAAAL,KAAAmH,QAAArC,OAAyBzE,IAC1C8D,EAAAmD,YAAAF,EAAA,EAAA/G,GACAL,KAAAmH,QAAA9G,GAAA,GAAAkH,GAAApD,GAKAtE,EAAAD,QAAAgH,CAEA,IAAAW,GAAArH,EAAA,KNuoBM,SAAUL,EAAQD,EAASM,GOtsBjC,QAAAsH,GAAAC,GAEA,YAGAC,IAAA,EAAA1H,KAAA,GAAA2H,GAAAF,EAAA,oBAjBA,GAAAE,GAAAzH,EAAA,GACAwH,EAAAxH,EAAA,EAoBAL,GAAAD,QAAA4H,GP0uBM,SAAU3H,EAAQD,GQtvBxB,QAAAgI,GAAAzD,GAEA,YAOAnE,MAAA6H,eAAA1D,EAAAa,SAAA,GAOAhF,KAAAyE,KAAAN,EAAAa,SAAA,GAIAnF,EAAAD,QAAAgI,GRuxBM,SAAU/H,EAAQD,EAASM,GS3vBjC,QAAA4H,GAAAC,EAAAC,GAEA,YAGAN,IAAA,EAAA1H,KAAA,GAAAiI,GAAAF,EAAAC,IASAhI,KAAAkI,WAAA,KASAlI,KAAAmI,gBAAA,KASAnI,KAAAoI,eAAA,KASApI,KAAAqI,QAAA,KASArI,KAAAsI,cAAA,KAWAtI,KAAAuI,gBAAA,SAAA3H,GAGA,OAFA4H,GAAAxI,KAAAyI,qBAAAD,cAEAnI,EAAA,EAAmBA,EAAAmI,EAAA1D,OAA0BzE,IAC7C,GAAAmI,EAAAnI,GAAAO,SACA,MAAA4H,GAAAnI,EAIA,cASAL,KAAA0I,cAAA,WACA,aAAA1I,KAAA2I,mBAAAC,iBACA5I,KAAAgF,SAAA,GAGAhF,KAAAgF,SAAA,IAaAhF,KAAA6I,cAAA,WACA,IAAA7I,KAAAkI,WAAA,CAEA,GAAAlI,KAAA8I,qBAAAC,cAAAjE,OAAA,IACA9E,KAAA8I,qBAAAC,cAAA,IAAAtE,KAAA,EACA,SAAA+C,GAAA,oCAUA,IANAxH,KAAAsH,YAAAtH,KAAAgJ,cACAhJ,KAAA8I,qBAAAC,cAAA,IAAAlB,iBAGA7H,KAAAkI,WAAA,GAAAe,GAAAjJ,MAEA,KAAAA,KAAAkI,WAAAgB,aACA,SAAA1B,GAAA,sBAIA,MAAAxH,MAAAkI,YAYAlI,KAAAmJ,iBAAA,SAAAC,GAEA,GAAAC,GAAArJ,KAAAuI,gBAAA,QAEA,KAAAc,EACA,SAAA7B,GAAA,6BAIAxH,MAAAsH,YAAAtH,KAAAyI,qBAAAa,OAAAD,EAAAC,OACAF,EAKA,QAFAG,GAAA,GAAA5H,EAAA3B,KAAAwJ,WAAA,IAEAnJ,EAAA,EAAmBA,EAAAsB,EAAAmD,OAAczE,IAAA,CACjC,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAAAA,IACAkJ,GAAA,IAGA,IAAAE,GAAA9H,EAAA+H,WAAArJ,GAAA8E,SAAA,GACAoE,IAAA,IAAAE,EAAA3E,OAAA2E,EAAA,IAAAA,EAGA,MAAAF,IASAvJ,KAAA2J,cAAA,WACA,aAAA3J,KAAA2I,mBAAAC,iBACA5I,KAAAgF,SAAA,GAGAhF,KAAAgF,SAAA,IAaAhF,KAAAyI,mBAAA,WACA,IAAAzI,KAAAmI,gBAAA,CAEA,GAAAnI,KAAA6I,gBAAAe,SAAAnF,KAAA,EACA,SAAA+C,GAAA,iCAUA,IANAxH,KAAAsH,YAAAtH,KAAAgJ,cACAhJ,KAAA6I,gBAAAe,SAAA/B,iBAGA7H,KAAAmI,gBAAA,GAAA0B,GAAA7J,MAEA,aAAAA,KAAAmI,gBAAA2B,UACA,SAAAtC,GAAA,2BAIA,MAAAxH,MAAAmI,iBASAnI,KAAA+J,kBAAA,WACA,IAAA/J,KAAAoI,eAAA,CACA,GAAA1D,GAAA1E,KAAA2E,YAGA3E,MAAAoI,eAAA,GAAA9C,OAAAZ,EAAA9C,EAAAyB,YAAAyB,OAGA,QAAAzE,GAAA,EAAqBA,EAAAqE,EAAA9C,EAAAyB,YAAAyB,OAA4CzE,IACjEL,KAAAsH,YAAAtH,KAAAgJ,cAAAtE,EAAA9C,EAAAyB,YAAAhD,GACA2J,MACAhK,KAAAoI,eAAA/H,GAAA,GAAA4J,GAAAjK,MAIA,MAAAA,MAAAoI,gBAYApI,KAAAkK,uBAAA,SAAAC,GAEA,MADAnK,MAAAsH,YAAA6C,EAAAC,YACApK,KAAAqK,UAAAF,EAAAG,WAYAtK,KAAAuK,mBAAA,SAAAnB,GAEA,GAAAC,GAAArJ,KAAAuI,gBAAA,WAEA,KAAAc,EACA,SAAA7B,GAAA,+BAQA,OAJAxH,MAAAsH,YAAAtH,KAAAyI,qBAAAa,OAAAD,EAAAC,OACAF,GAGAoB,mBAAAC,mBAAAzK,KAAAwJ,WAAA,SASAxJ,KAAA0K,gBAAA,WACA,aAAA1K,KAAA2I,mBAAAC,iBACA5I,KAAAgF,SAAA,GAGAhF,KAAAgF,SAAA,IAUAhF,KAAA2E,WAAA,WACA,IAAA3E,KAAAqI,QAAA,CAEA,GAAA8B,GAAAnK,KAAA2I,kBAGA3I,MAAAsH,YAAA6C,EAAAQ,cAIA3K,KAAAqI,UAEA,QAAAhI,GAAA,EAAqBA,EAAA,GAAQA,IAC7BA,EAAA,QAAA8J,EAAAS,eAAA,GAAAhG,KAAAC,IAAA,EAAAxE,KACAA,GAAA,IACA,IADA8J,EAAAS,eAAA,GAAAhG,KAAAC,IAAA,EAAAxE,EAAA,OAKAL,KAAAqI,QAAAhI,GAAA,GAAAiF,OAAAtF,KAAAgF,SAAA,IAKA,KAAA3E,EAAA,EAAiBA,EAAA,GAAQA,IACzB,GAAAL,KAAAqI,QAAAhI,GAOA,OAHAwK,GAAA7K,KAAA8K,kBAAAzK,GACA0K,EAAA/K,KAAAqI,QAAAhI,GAAAyE,OAEAkG,EAAA,EAAuBA,EAAAD,EAAcC,IACrChL,KAAAqI,QAAAhI,GAAA2K,GAAA,GAAAH,GAAA7K,MAKA,MAAAA,MAAAqI,SAYArI,KAAA2I,iBAAA,WACA,IAAA3I,KAAAsI,cAAA,CAEA,GAAAe,GAAArJ,KAAAuI,gBAAA,KAEA,KAAAc,EACA,SAAA7B,GAAA,uCASA,IALAxH,KAAAsH,YAAAtH,KAAAyI,qBAAAa,OAAAD,EAAAC,QAGAtJ,KAAAsI,cAAA,GAAA2C,GAAAjL,MAEA,IAAAA,KAAAsI,cAAA4C,WACA,IAAAlL,KAAAsI,cAAA6C,UACA,SAAA3D,GAAA,yBAIA,MAAAxH,MAAAsI,eAcAtI,KAAA8K,kBAAA,SAAAzG,GACA,OAAAA,GACA,IAAAzC,GAAAC,SACA,MAAAuJ,EAEA,KAAAxJ,GAAAE,YACA,MAAAuJ,EAEA,KAAAzJ,GAAAG,mBACA,MAAAuJ,EAEA,KAAA1J,GAAAI,aACA,MAAAuJ,EAEA,KAAA3J,GAAAK,gBACA,MAAAuJ,EAEA,KAAA5J,GAAAM,uBACA,MAAAuJ,EAEA,KAAA7J,GAAAO,aACA,MAAAuJ,EAEA,KAAA9J,GAAAQ,SACA,MAAAuJ,EAEA,KAAA/J,GAAAS,iBACA,MAAAuJ,EAEA,KAAAhK,GAAAU,cACA,MAAAuJ,EAEA,KAAAjK,GAAAW,MACA,MAAAuJ,EAEA,KAAAlK,GAAAY,UACA,MAAAuJ,EAEA,KAAAnK,GAAAa,cACA,MAAAuJ,EAEA,KAAApK,GAAAc,MACA,MAAAuJ,EAEA,KAAArK,GAAAe,aACA,MAAAuJ,EAEA,KAAAtK,GAAAgB,cACA,MAAAuJ,EAEA,KAAAvK,GAAAiB,UACA,MAAAuJ,EAEA,KAAAxK,GAAAkB,KACA,MAAAuJ,EAEA,KAAAzK,GAAAmB,cACA,MAAAuJ,EAEA,KAAA1K,GAAAoB,yBACA,MAAAuJ,EAEA,KAAA3K,GAAAqB,SACA,MAAAuJ,EAEA,KAAA5K,GAAAsB,eACA,MAAAuJ,EAEA,KAAA7K,GAAAuB,kBACA,MAAAuJ,EAEA,KAAA9K,GAAAwB,WACA,MAAAuJ,EAEA,KAAA/K,GAAA8B,aACA,MAAAkJ,EAEA,KAAAhL,GAAAyB,WACA,MAAAwJ,EAEA,KAAAjL,GAAA0B,YACA,MAAAwJ,EAEA,KAAAlL,GAAA2B,iBACA,MAAAwJ,EAEA,KAAAnL,GAAA4B,OACA,MAAAwJ,EAEA,KAAApL,GAAA6B,WACA,MAAAwJ,EAEA,KAAArL,GAAA+B,MACA,MAAAuJ,EAEA,KAAAtL,GAAAgC,SACA,MAAAuJ,EAEA,KAAAvL,GAAAiC,aACA,MAAAuJ,EAEA,KAAAxL,GAAAkC,gBACA,MAAAuJ,EAEA,KAAAzL,GAAAoC,SACA,MAAAsJ,EAEA,KAAA1L,GAAAmC,SACA,MAAAwJ,EAEA,KAAA3L,GAAAqC,UACA,MAAAuJ,EAEA,SACA,SAAAhG,GAAA,uCACAnD,KA/hBA,GAAAgH,GAAAnL,EAAA,IACAoL,EAAApL,EAAA,IACAsL,EAAAtL,EAAA,IACAuL,EAAAvL,EAAA,IACAqL,EAAArL,EAAA,IACAkL,EAAAlL,EAAA,IACAwL,EAAAxL,EAAA,IACAyL,EAAAzL,EAAA,IACA+I,EAAA/I,EAAA,IACA0L,EAAA1L,EAAA,IACA2L,EAAA3L,EAAA,IACA6L,EAAA7L,EAAA,IACA4L,EAAA5L,EAAA,IACA8L,EAAA9L,EAAA,IACAwH,EAAAxH,EAAA,GACA+L,EAAA/L,EAAA,IACAkM,EAAAlM,EAAA,IACAgM,EAAAhM,EAAA,IACAiM,EAAAjM,EAAA,IACAmM,EAAAnM,EAAA,IACAoM,EAAApM,EAAA,IACAqM,EAAArM,EAAA,IACAsM,EAAAtM,EAAA,IACAuM,EAAAvM,EAAA,IACAsH,EAAAtH,EAAA,GACAwM,EAAAxM,EAAA,IACA2J,EAAA3J,EAAA,IACAyM,EAAAzM,EAAA,IACA0M,EAAA1M,EAAA,IACA2M,EAAA3M,EAAA,IACA+J,EAAA/J,EAAA,IACA4M,EAAA5M,EAAA,IACA6M,EAAA7M,EAAA,IACA+M,EAAA/M,EAAA,IACA8M,EAAA9M,EAAA,IACAgN,EAAAhN,EAAA,IACA+H,EAAA/H,EAAA,IACAkN,EAAAlN,EAAA,IACAiN,EAAAjN,EAAA,IACAmN,EAAAnN,EAAA,IACA0B,EAAA1B,EAAA,GACA+K,EAAA/K,EAAA,IACAoN,EAAApN,EAAA,IACAqN,EAAArN,EAAA,IACAsN,EAAAtN,EAAA,GAyfAL,GAAAD,QAAAkI,GT40BM,SAAUjI,EAAQD,GUv2CxB,QAAA+H,GAAAF,EAAAgG,GAEA,YASAzN,MAAA0N,SAAAjG,EASAzH,KAAA2N,MAAA,SAAAF,IAAA,kBAOAzN,KAAA4N,WAAA,WACA,MAAA5N,MAAA0N,UAQA1N,KAAA6N,QAAA,WACA,MAAA7N,MAAA2N,OAQA3N,KAAAmF,SAAA,WACA,MAAAnF,MAAA4N,cAKA/N,EAAAD,QAAA+H,GVy4CM,SAAU9H,EAAQD,GW57CxB,QAAAkO,GAAA/F,EAAAC,GAEA,YASAhI,MAAA+N,MAAA,SAAA/F,EAAA,GAAAgG,YAAAhG,GAAA,KASAhI,KAAAiO,MAAAlG,EASA/H,KAAAkO,UAAA,EAQAlO,KAAAmO,QAAA,WACA,MAAAnO,MAAAiO,OASAjO,KAAAqH,YAAA,WACA,MAAArH,MAAAkO,WASAlO,KAAAoO,QAAA,WACA,MAAApO,MAAA+N,MAAAM,YAcArO,KAAAsO,SAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA,GAAAC,eAqBA,OApBAD,GAAAE,KAAA,MAAA3O,KAAAmO,WAAA,GACAM,EAAAG,aAAA,cACAH,EAAAI,mBAAA,SAAA1K,GACA,kBACAsK,EAAAK,aAAAJ,eAAAK,OACA,MAAAN,EAAAO,QAEA7K,EAAA4J,MAAA,GAAAC,YAAAS,EAAAQ,UACA9K,EAAA+J,UAAA,EAGAK,EAAApK,IAGAqK,EAAArK,MAIKnE,MACLyO,EAAAS,KAAA,MACAlP,MAYAA,KAAAqK,UAAA,SAAA8E,GAGA,OAFAC,MAEA/O,EAAA,EAAmBA,EAAA8O,KACnBnP,KAAAkO,WAAAlO,KAAAoO,WAD8B/N,IAK9B+O,EAAAC,KAAArP,KAAA+N,MAAA/N,KAAAkO,aAGA,OAAAkB,IAkBApP,KAAAwJ,WAAA,SAAA1E,EAAAwK,EAAAC,GAGA,IAFA,GAAAlP,GAAAsB,EAAA,GAEA,QAAAtB,EAAAL,KAAAgF,SAAA,KAGA,GAFArD,GAAA6N,OAAAC,aAAApP,GAEAyE,EAAA,GACA,GAAAnD,EAAAmD,WACA,UAGA,MAAAyK,GAAA5N,EAAAmD,OAAAyK,GAAA,IACA5N,EAAA+N,SAAA,MACA,KAQA,OAJA,KAAArP,EAAAsB,EAAAgO,QAAA,YACAhO,IAAAiO,UAAA,EAAAvP,IAGAsB,GAYA3B,KAAAgF,SAAA,SAAAP,GACA,GAAA2K,GAAApP,KAAAqK,UAAA5F,GACAoL,EAAA,CAEA,IAAAT,EAAAtK,QAAAL,EACA,WAGA,QAAApE,GAAAoE,EAAA,EAA0BpE,GAAA,EAAQA,IAClCwP,GAAAT,EAAA/O,IAAA,EAAAA,CAGA,OAAAwP,IAcA7P,KAAA8P,cAAA,SAAArL,EAAA0K,GAGA,OAFAY,MAEA1P,EAAA,EAAmBA,EAAA8O,EAAW9O,IAAA,CAC9B,GAAAwP,GAAA7P,KAAAgF,SAAAP,EAEA,WAAAoL,EACA,KAGAE,GAAAV,KAAAQ,GAGA,MAAAE,IAgBA/P,KAAAgQ,eAAA,SAAAlL,EAAAwK,GAGA,IAFA,GAAAjP,GAAAsB,EAAA,GAEA,QAAAtB,EAAAL,KAAAgF,SAAA,KAGA,GAFArD,GAAA6N,OAAAC,aAAApP,GAEAyE,EAAA,GACA,GAAAnD,EAAAmD,WACA,UAGA,IAAAnD,EAAA+N,SAAA,QACA,KAQA,OAJA,KAAArP,EAAAsB,EAAAgO,QAAA,cACAhO,IAAAiO,UAAA,EAAAvP,IAGA4P,UAAAxF,mBAAA9I,KAcA3B,KAAAkQ,QAAA,SAAAnI,GAEA,MADA/H,MAAAiO,MAAAlG,EACA/H,MAcAA,KAAAsH,YAAA,SAAAF,GAEA,MADApH,MAAAkO,UAAA9G,EACApH,MAKAH,EAAAD,QAAAkO,GX89CM,SAAUjO,EAAQD,GY1vDxB,QAAAuQ,KAEA,YAOAnQ,MAAAoQ,WAAA,EAOApQ,KAAAqQ,kBAAA,GAOArQ,KAAAsQ,cAAA,EAOAtQ,KAAAuQ,YAAA,EAIA1Q,EAAAD,QAAA,GAAAuQ,IZwxDM,SAAUtQ,EAAQD,GavzDxB,QAAA4Q,GAAArM,GAEA,YAOAnE,MAAAyQ,aAAAtM,EAAA6E,cAAA7E,EAAAa,SAAA,IAOAhF,KAAAyE,KAAAN,EAAAa,SAAA,GAOAhF,KAAA0Q,SAAAvM,EAAAa,SAAA,GAOAhF,KAAA2Q,SAAAxM,EAAAa,SAAA,GAIAnF,EAAAD,QAAA4Q,Gbw1DM,SAAU3Q,EAAQD,EAASM,Gcv3DjC,QAAAqH,GAAApD,GAEA,YAOAnE,MAAAY,KAAAuD,EAAAa,SAAA,GAOAhF,KAAAyQ,aAAAtM,EAAAa,SAAA,GAOAhF,KAAAgI,KAAA,KAQAhI,KAAA4Q,UAAA,KAGA5Q,KAAAyQ,eAAA,OACAzQ,KAAAyQ,aAAAtM,EAAA0M,kCACA7Q,KAAAyQ,cAAA,OACAtM,EAAAmD,YAAAtH,KAAAyQ,cACAzQ,KAAA4Q,UAAA,GAAAhK,GAAAzC,KAGAnE,KAAAyQ,aAAAtM,EAAA0M,iCACA7Q,KAAAyQ,aACAtM,EAAAmD,YAAAtH,KAAAyQ,cACAzQ,KAAAgI,KAAA,GAAAwI,GAAArM,IAxDA,GAAAqM,GAAAtQ,EAAA,IACA0G,EAAA1G,EAAA,EA4DAL,GAAAD,QAAA2H,Gd25DM,SAAU1H,EAAQD,Ge/8DxB,QAAAkR,GAAA3M,GAEA,YAOAnE,MAAA8J,UAAA3F,EAAAa,SAAA,GAOAhF,KAAA+Q,QAAA5M,EAAAa,SAAA,GAOAhF,KAAAgR,iBAAA7M,EAAAa,SAAA,GAOAhF,KAAA8G,cAAA3C,EAAAa,SAAA,GAQAhF,KAAAiR,qBAAA9M,EAAAa,SAAA,GAOAhF,KAAAkR,gBAAA/M,EAAAa,SAAA,GAQAhF,KAAAmR,qBAAAhN,EAAAa,SAAA,GAQAhF,KAAA6G,gBAAA1C,EAAAa,SAAA,GAIAnF,EAAAD,QAAAkR,Gfg/DM,SAAUjR,EAAQD,EAASM,GgB/iEjC,QAAA+I,GAAA9E,GAEA,YAOAnE,MAAAkJ,aAAA/E,EAAAa,SAAA,GAOAhF,KAAAoR,oBAAAjN,EAAAa,SAAA,GAOAhF,KAAAqR,oBAAAlN,EAAAa,SAAA,GAOAhF,KAAA4J,SAAA,GAAAhC,GAAAzD,GAOAnE,KAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAuR,WAAApN,EAAAa,SAAA,GAOAhF,KAAAwR,UAAA,GAAA5J,GAAAzD,GAOAnE,KAAAyR,oBAAA,GAAA7J,GAAAzD,GAOAnE,KAAA0R,iBAAA,GAAA9J,GAAAzD,GAOAnE,KAAA2R,aAAA,GAAA/J,GAAAzD,GAOAnE,KAAA4R,wBAAA,GAAAhK,GAAAzD,GAOAnE,KAAA6R,oBAAA,GAAAjK,GAAAzD,GAjGA,GAAAyD,GAAA1H,EAAA,EAqGAL,GAAAD,QAAAqJ,GhBklEM,SAAUpJ,EAAQD,GiB9qExB,QAAAkS,GAAA3N,GAEA,YAOAnE,MAAA+R,MAAA5N,EAAAa,SAAA,GAOAhF,KAAAgS,KAAA7N,EAAAa,SAAA,GAOAhF,KAAAiS,GAAA9N,EAAAa,SAAA,GAOAhF,KAAAkS,KAAA/N,EAAAa,SAAA,GAOAhF,KAAAmS,QAAAhO,EAAAa,SAAA,GAOAhF,KAAAoS,SAAAjO,EAAAa,SAAA,GAOAhF,KAAAqS,SAAAlO,EAAAa,SAAA,GAOAhF,KAAAsS,GAAAnO,EAAAa,SAAA,GAOAhF,KAAAuS,GAAApO,EAAAa,SAAA,GAOAhF,KAAAwS,KAAArO,EAAAa,SAAA,GAOAhF,KAAAyS,GAAAtO,EAAAa,SAAA,GAOAhF,KAAA0S,GAAAvO,EAAAa,SAAA,GAOAhF,KAAA2S,OAAAxO,EAAAa,SAAA,GAOAhF,KAAA4S,KAAAzO,EAAAa,SAAA,GAOAhF,KAAA6S,KAAA1O,EAAA2L,cAAA,KAOA9P,KAAA8S,MAAA3O,EAAAa,SAAA,GAOAhF,KAAA+S,QAAA5O,EAAAa,SAAA,GAOAhF,KAAAgT,KAAA7O,EAAA2L,cAAA,MAOA9P,KAAAiT,OAAA9O,EAAAa,SAAA,GAIAnF,EAAAD,QAAAkS,GjB+sEM,SAAUjS,EAAQD,EAASM,GkBx1EjC,QAAA2J,GAAA1F,GAEA,YAEA,IAAA9D,EA+EA,KAxEAL,KAAAsJ,OAAAnF,EAAAkD,cASArH,KAAA8J,UAAA3F,EAAAa,SAAA,GAOAhF,KAAA+G,aAAA5C,EAAAa,SAAA,GAOAhF,KAAAgH,aAAA7C,EAAAa,SAAA,GASAhF,KAAA2Q,SAAAxM,EAAAa,SAAA,GAOAhF,KAAAkT,cAAA7S,KAAA8D,EAAAa,SAAA,IAAA3E,EAAA,EAOAL,KAAAmT,QAAAhP,EAAA6L,eAAA3P,GAAA,GASAL,KAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAoT,QAAAjP,EAAAa,SAAA,GAOAhF,KAAAwI,cAAA,GAAAlD,OAAAtF,KAAAoT,SAGA/S,EAAA,EAAaA,EAAAL,KAAAwI,cAAA1D,OAA+BzE,IAC5CL,KAAAwI,cAAAnI,GAAA,GAAAgT,GAAAlP,GA/FA,GAAAkP,GAAAnT,EAAA,GAoGAL,GAAAD,QAAAiK,GlB23EM,SAAUhK,EAAQD,EAASM,GmBp9EjC,QAAA+J,GAAA9F,GAEA,YAGA,IAAAmP,GAAAnP,EAAAa,SAAA,GACAuO,GAAA,CAEA,KAAAD,EAAAnD,EAAAI,eACApM,EAAAmD,YAAAnD,EAAAkD,cAAA,GACAiM,EAAAnP,EAAAa,SAAA,GACAuO,GAAA,GAQAvT,KAAAsR,MAAAiC,EAAA,EAAAD,EAAA,KAAAA,EAOAtT,KAAAyE,KAAA8O,EAAA,EAAAD,GAAA,GAOAtT,KAAAwT,SAAAD,EAAA,EAAApP,EAAAa,SAAA,GAOAhF,KAAAsK,SAAAiJ,EAAAD,GAAA,EAAAnP,EAAAa,SAAA,GAQAhF,KAAAyT,eAAAF,EAAA,EAAApP,EAAAa,SAAA,GAOAhF,KAAAoK,WAAAjG,EAAAkD,cAlEA,GAAA8I,GAAAjQ,EAAA,GAsEAL,GAAAD,QAAAqK,GnBu/EM,SAAUpK,EAAQD,EAASM,GoBjjFjC,QAAAwT,GAAAvP,GAEA,YAOAnE,MAAA+R,MAAA5N,EAAAa,SAAA,GAOAhF,KAAA2T,mBAAAxP,EAAAa,SAAA,GAOAhF,KAAA4T,mBAAAzP,EAAAa,SAAA,GAQAhF,KAAA6T,WAAA1P,EAAAa,SAAA,GAQAhF,KAAA8T,sBAAA3P,EAAAa,SAAA,GAQAhF,KAAA+T,wBAAA5P,EAAAa,SAAA,GAOAhF,KAAAgU,oBAAA7P,EAAAa,SAAA,GAOAhF,KAAAiU,WAAA9P,EAAAa,SAAA,GAOAhF,KAAAkU,WAAA/P,EAAAa,SACAhF,KAAA+R,QAAAzL,EAAAE,8BAAA,KAQAxG,KAAAmU,UAAAhQ,EAAAa,SACAhF,KAAA+R,QAAAzL,EAAAE,8BAAA,KAOAxG,KAAAoU,iBAAAjQ,EAAAa,SAAA,GAOAhF,KAAAqU,cAAAlQ,EAAAa,SAAA,GAOAhF,KAAAsU,4BAAAnQ,EAAAa,SAAA,GAOAhF,KAAAuU,4BAAApQ,EAAAa,SAAA,GAOAhF,KAAAwU,kBAAArQ,EAAAa,SAAA,GAOAhF,KAAAyU,kBAAAtQ,EAAAa,SAAA,GAOAhF,KAAA0U,sBAAAvQ,EAAAa,SAAA,GAOAhF,KAAA2U,sBAAAxQ,EAAAa,SAAA,GAOAhF,KAAA4U,kBAAAzQ,EAAAa,SAAA,GAOAhF,KAAA6U,YAAA1Q,EAAAa,SAAA,GAQAhF,KAAA8U,cAAA3Q,EAAAa,SAAA,GAOAhF,KAAA+U,SAAA5Q,EAAAa,SAAA,GAOAhF,KAAAgV,UAAA7Q,EAAAa,SAAA,GAOAhF,KAAAiV,mBAAA9Q,EAAAa,SAAA,GAOAhF,KAAAkV,mBAAA/Q,EAAAa,SACAhF,KAAA+R,QAAAzL,EAAAE,8BAAA,KAOAxG,KAAAmV,kBAAAhR,EAAAa,SACAhF,KAAA+R,QAAAzL,EAAAE,8BAAA,KAOAxG,KAAAoV,kBAAAjR,EAAAa,SACAhF,KAAA+R,QAAAzL,EAAAE,8BAAA,KAOAxG,KAAAqV,iBAAAlR,EAAAa,SACAhF,KAAA+R,QAAAzL,EAAAE,8BAAA,KAOAxG,KAAAsV,YAAAnR,EAAAa,SAAA,GAOAhF,KAAAuV,oBAAApR,EAAAa,SAAA,GAOAhF,KAAA+I,cAAA,GAAAzD,OAAAtF,KAAAuV,oBAGA,QAAAlV,GAAA,EAAiBA,EAAAL,KAAA+I,cAAAjE,OAA+BzE,IAChDL,KAAA+I,cAAA1I,GAAA,GAAAuH,GAAAzD,GAtPA,GAAAyD,GAAA1H,EAAA,GACAoG,EAAApG,EAAA,EA0PAL,GAAAD,QAAA8T,GpBqlFM,SAAU7T,EAAQD,GqBv0FxB,QAAA4V,GAAArR,GAEA,YAOAnE,MAAAY,KAAAuD,EAAA6L,eAAA,MAQAhQ,KAAAyV,KAAAtR,EAAAa,SAAA,GAQAhF,KAAA6H,eAAA1D,EAAAa,SAAA,GAOAhF,KAAA0V,cAAAvR,EAAAa,SAAA,GAOAhF,KAAA2V,iBAAAxR,EAAAa,SAAA,GAOAhF,KAAA4V,qBAAAzR,EAAAa,SAAA,GAOAhF,KAAA6V,qBAAA1R,EAAAa,SAAA,GAOAhF,KAAA8V,oBAAA3R,EAAAa,SAAA,GAOAhF,KAAA+V,oBAAA5R,EAAAa,SAAA,GAOAhF,KAAA6G,gBAAA1C,EAAAa,SAAA,GAIAnF,EAAAD,QAAA4V,GrBw2FM,SAAU3V,EAAQD,GsBt7FxB,QAAAyT,GAAAlP,GAEA,YAOAnE,MAAAsJ,OAAAnF,EAAAa,SAAA,GAOAhF,KAAAyE,KAAAN,EAAAa,SAAA,GAOAhF,KAAAY,KAAAuD,EAAAqF,WAAA,QAIA3J,EAAAD,QAAAyT,GtBu9FM,SAAUxT,EAAQD,GuBl/FxB,QAAAqL,GAAA9G,GAEA,YAEA,IAAA6R,GAAAC,CAOAjW,MAAAkL,UAAA/G,EAAAa,SAAA,GAOAhF,KAAA+G,aAAA5C,EAAAa,SAAA,GAOAhF,KAAAgH,aAAA7C,EAAAa,SAAA,GAOAhF,KAAA4I,gBAAAzE,EAAAa,SAAA,GAOAhF,KAAAmL,UAAAhH,EAAAa,SAAA,GAOAhF,KAAA4K,gBACAoL,EAAA7R,EAAAa,SAAA,GACAiR,EAAA9R,EAAAa,SAAA,IAQAhF,KAAAkW,UAAAD,GAAA,GAAAD,EAOAhW,KAAAmW,iBACAH,EAAA7R,EAAAa,SAAA,GACAiR,EAAA9R,EAAAa,SAAA,IAQAhF,KAAAoW,WAAAH,GAAA,GAAAD,EAOAhW,KAAA2K,aAAAxG,EAAAkD,cAIAxH,EAAAD,QAAAqL,GvBmhGM,SAAUpL,EAAQD,EAASM,GwB3lGjC,QAAA+H,GAAAF,EAAAC,GAEA,YAGAN,IAAA,EAAA1H,KAAA,GAAA8N,GAAA/F,EAAAC,IASAhI,KAAAqW,YAAA,KASArW,KAAAsW,WAAA,KASAtW,KAAAuW,gBAAA,KASAvW,KAAAwW,mBAAA,KASAxW,KAAAyW,6BAAA,KASAzW,KAAA0W,gBAAA,KAWA1W,KAAAgJ,cAAA,SAAAgB,GAKA,OAFA2M,GAAA3W,KAAA4W,qBAEAvW,EAAA,EAAmBA,EAAAsW,EAAA7R,OAA2BzE,IAC9C,GAAA2J,GAAA2M,EAAAtW,GAAAwH,gBACAmC,GAAA2M,EAAAtW,GAAAwH,eACA8O,EAAAtW,GAAAqV,cACA,MAAAiB,GAAAtW,GAAAsV,kBACA3L,EAAA2M,EAAAtW,GAAAwH,eAIA,WASA7H,KAAA6Q,+BAAA,WACA,IAAA7Q,KAAAyW,6BAAA,CAKA,OAHAE,GAAA3W,KAAA4W,qBACAC,EAAA,KAEAxW,EAAA,EAAqBA,EAAAsW,EAAA7R,OAA2BzE,IAChD,aAAAsW,EAAAtW,GAAAO,KAAA,CACAiW,EAAAF,EAAAtW,EACA,OAKAL,KAAAyW,6BADAI,EACAA,EAAAlB,kBAGA,EAIA,MAAA3V,MAAAyW,8BAYAzW,KAAA8W,eAAA,WACA,IAAA9W,KAAAqW,cAGArW,KAAAsH,YAAAtH,KAAA+W,gBAAA9D,QAIAjT,KAAAqW,YAAA,GAAAvF,GAAA9Q,MAEAA,KAAAqW,YAAAvM,YAAAxD,EAAAI,oBACA,SAAAc,GAAA,sBAIA,OAAAxH,MAAAqW,aAYArW,KAAA+W,cAAA,WACA,IAAA/W,KAAAsW,aAEAtW,KAAAsH,YAAA,GAIAtH,KAAAsW,WAAA,GAAAxE,GAAA9R,MAEAA,KAAAsW,WAAAvE,QAAAzL,EAAAC,qBACA,SAAAiB,GAAA,qBAIA,OAAAxH,MAAAsW,YAYAtW,KAAA8I,mBAAA,WACA,IAAA9I,KAAAuW,iBACAvW,KAAA8W,iBAAA3F,qBAAA,IAGAnR,KAAAsH,YAAAtH,KAAA+W,gBAAA9D,OAAA,IAGAjT,KAAAuW,gBAAA,GAAA7C,GAAA1T,MAEAA,KAAAuW,gBAAAxE,QACAzL,EAAAE,+BACAxG,KAAAuW,gBAAAxE,QACAzL,EAAAG,+BACAzG,KAAAuW,gBAAAxE,QACAzL,EAAAK,8BACA,SAAAa,GAAA,0BAIA,OAAAxH,MAAAuW,iBASAvW,KAAAgX,sBAAA,WACA,MAAAhX,MAAA6Q,iCAAA,EACA7Q,KAAAwW,oBAGAxW,KAAAsH,YAAAtH,KAAA6Q,kCACA7Q,KAAAwW,mBAAA,GAAA5P,GAAA5G,MACAA,KAAAwW,qBASAxW,KAAA4W,mBAAA,WACA,IAAA5W,KAAA0W,gBAAA,CAEA1W,KAAAsH,YAAAtH,KAAA+W,gBAAA9D,OAAA,GACAjT,KAAA8W,iBAAA3F,sBAGAnR,KAAA0W,gBAAA,GAAApR,OAAAtF,KAAA8W,iBAAA9F,iBAEA,QAAA3Q,GAAA,EAAqBA,EAAAL,KAAA0W,gBAAA5R,OAAiCzE,IACtDL,KAAA0W,gBAAArW,GAAA,GAAAmV,GAAAxV,MAIA,MAAAA,MAAA0W,iBAnQA,GAAA5I,GAAA5N,EAAA,GACA4Q,EAAA5Q,EAAA,IACA4R,EAAA5R,EAAA,IACAwH,EAAAxH,EAAA,GACAoG,EAAApG,EAAA,GACAsH,EAAAtH,EAAA,GACAwT,EAAAxT,EAAA,IACA0G,EAAA1G,EAAA,GACAsV,EAAAtV,EAAA,GAgQAL,GAAAD,QAAAqI,GxBwoGM,SAAUpI,EAAQD,GyBv4GxB,QAAAyL,GAAAlH,GAEA,YAOAnE,MAAAiX,aAAA9S,EAAAa,SAAA,GAOAhF,KAAAkX,eAAA/S,EAAAa,SAAA,GAOAhF,KAAAmX,eAAAhT,EAAAa,SAAA,GAIAnF,EAAAD,QAAAyL,GzBw6GM,SAAUxL,EAAQD,G0Bn8GxB,QAAA0L,GAAAnH,GAEA,YAOAnE,MAAAoX,UAAAjT,EAAAa,SAAA,GAIAnF,EAAAD,QAAA0L,G1Bo+GM,SAAUzL,EAAQD,EAASM,G2B9+GjC,QAAAsL,GAAArH,GAEA,YAOAnE,MAAAiX,aAAA9S,EAAAa,SAAA,GAOAhF,KAAAkX,eAAA/S,EAAAa,SAAA,GAOAhF,KAAAmX,eAAAhT,EAAAa,SAAA,GAOAhF,KAAAqX,YAAA,GAAAnT,GAAAC,GACAvC,EAAAI,eA3CA,GAAAkC,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EA+CAL,GAAAD,QAAA4L,G3BkhHM,SAAU3L,EAAQD,EAASM,G4BtjHjC,QAAAuL,GAAAtH,GAEA,YAOAnE,MAAAoX,UAAAjT,EAAAa,SAAA,GAOAhF,KAAAqX,YAAA,GAAAnT,GAAAC,GACAvC,EAAAI,eA7BA,GAAAkC,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAiCAL,GAAAD,QAAA6L,G5B0lHM,SAAU5L,EAAQD,G6BnnHxB,QAAA2L,GAAApH,GAEA,YAOAnE,MAAA+G,aAAA5C,EAAAa,SAAA,GAOAhF,KAAAgH,aAAA7C,EAAAa,SAAA,GAOAhF,KAAAsX,YAAAnT,EAAAa,SAAA,GAOAhF,KAAAuX,eAAApT,EAAAa,SAAA,GAOAhF,KAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAwX,iBAAArT,EAAAuE,gBAOA1I,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAAyX,QAAAtT,EAAAuG,kBAOA1K,KAAA0X,UAAAvT,EAAAuE,gBAIA7I,EAAAD,QAAA2L,G7BopHM,SAAU1L,EAAQD,G8BztHxB,QAAAwL,GAAAjH,GAEA,YAOAnE,MAAA2X,UAAAxT,EAAAa,SAAA,GAOAhF,KAAA+G,aAAA5C,EAAAa,SAAA,GAOAhF,KAAAgH,aAAA7C,EAAAa,SAAA,GAOAhF,KAAAsX,YAAAnT,EAAAa,SAAA,GAOAhF,KAAAuX,eAAApT,EAAAa,SAAA,GAOAhF,KAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAA4X,UAAAzT,EAAAuE,gBAOA1I,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAAyX,QAAAtT,EAAAuG,kBAIA7K,EAAAD,QAAAwL,G9B0vHM,SAAUvL,EAAQD,EAASM,G+B5zHjC,QAAAwL,GAAAvH,GAEA,YAOAnE,MAAA6X,YAAA1T,EAAAa,SAAA,GAOAhF,KAAA8X,UAAA3T,EAAAa,SAAA,GAOAhF,KAAA+X,OAAA,GAAA7T,GAAAC,GACAvC,EAAAoC,WApCA,GAAAE,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAwCAL,GAAAD,QAAA8L,G/Bg2HM,SAAU7L,EAAQD,EAASM,GgC73HjC,QAAAyL,GAAAxH,GAEA,YAOAnE,MAAAyN,KAAAtJ,EAAAa,SAAA,GAAAb,EAAAa,SAAA,GAOAhF,KAAA+X,OAAA,GAAA7T,GAAAC,GACAvC,EAAAc,MACAd,EAAA+B,MACA/B,EAAAgC,WAQA5D,KAAAU,MAAAyD,EAAAuE,gBAvCA,GAAAxE,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EA0CAL,GAAAD,QAAA+L,GhCi6HM,SAAU9L,EAAQD,EAASM,GiCh8HjC,QAAA0L,GAAAzH,GAEA,YAOAnE,MAAA+X,OAAA,GAAA7T,GAAAC,GACAvC,EAAAyB,WACAzB,EAAAc,MACAd,EAAAmC,SACAnC,EAAAoC,SACApC,EAAA+B,MACA/B,EAAAsB,eACAtB,EAAAwB,WACAxB,EAAA4B,QACA,EACA5B,EAAAgC,SACAhC,EAAAW,MACAX,EAAAkC,gBACAlC,EAAA6B,WACA7B,EAAAqC,UACArC,EAAAC,SACAD,EAAAI,aACAJ,EAAAkB,KACAlB,EAAAa,cACAb,EAAAuB,oBAQAnD,KAAAyN,KAAA,GAAAvJ,GAAAC,IACA,GACA,EACAvC,EAAAyB,WACAzB,EAAAwB,YACA,IAQApD,KAAAU,MAAAyD,EAAAuE,gBA7DA,GAAAxE,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAgEAL,GAAAD,QAAAgM,GjCo+HM,SAAU/L,EAAQD,EAASM,GkCzhIjC,QAAA2L,GAAA1H,GAEA,YAOAnE,MAAAgY,OAAA7T,EAAAa,SAAA,GAOAhF,KAAA+X,OAAA,GAAA7T,GAAAC,GACAvC,EAAAoC,SACApC,EAAAyB,WACAzB,EAAAC,WAQA7B,KAAAiY,cAAA9T,EAAAuE,gBAvCA,GAAAxE,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EA0CAL,GAAAD,QAAAiM,GlC6jIM,SAAUhM,EAAQD,EAASM,GmC5lIjC,QAAA6L,GAAA5H,GAEA,YAOAnE,MAAA+X,OAAA,GAAA7T,GAAAC,GACAvC,EAAAoC,WAQAhE,KAAAkY,UAAA,GAAAhU,GAAAC,GACAvC,EAAAW,QA/BA,GAAA2B,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAmCAL,GAAAD,QAAAmM,GnCgoIM,SAAUlM,EAAQD,EAASM,GoCxpIjC,QAAA4L,GAAA3H,GAEA,YAOAnE,MAAAmY,WAAAhU,EAAAa,SAAA,GAOAhF,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAAoY,UAAA,GAAAlU,GAAAC,GACAvC,EAAAoC,SACApC,EAAAmC,SACAnC,EAAAqC,YAtCA,GAAAC,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EA0CAL,GAAAD,QAAAkM,GpC4rIM,SAAUjM,EAAQD,EAASM,GqC3tIjC,QAAA8L,GAAA7H,GAEA,YAOAnE,MAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAqY,UAAAlU,EAAAa,SAAA,GAOAhF,KAAAsY,SAAAnU,EAAAuG,kBAOA1K,KAAAuY,cAAApU,EAAAuG,kBAOA1K,KAAAwY,eAAA,GAAAtU,GAAAC,GACAvC,EAAAkB,KACAlB,EAAAa,gBAnDA,GAAAyB,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAuDAL,GAAAD,QAAAoM,GrC+vIM,SAAUnM,EAAQD,EAASM,GsC3yIjC,QAAAgM,GAAA/H,GAEA,YAOAnE,MAAAsJ,OAAAnF,EAAAa,SAAA,GAOAhF,KAAAyY,MAAA,GAAAvU,GAAAC,GACAvC,EAAAc,QA7BA,GAAAwB,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAiCAL,GAAAD,QAAAsM,GtC+0IM,SAAUrM,EAAQD,EAASM,GuCr2IjC,QAAAiM,GAAAhI,GAEA,YAOAnE,MAAA+X,OAAA,GAAA7T,GAAAC,GACAvC,EAAAc,MACAd,EAAA+B,QAQA3D,KAAA0Y,WAAAvU,EAAAuE,gBA/BA,GAAAxE,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAkCAL,GAAAD,QAAAuM,GvCy4IM,SAAUtM,EAAQD,EAASM,GwCh6IjC,QAAAkM,GAAAjI,GAEA,YAOAnE,MAAAgK,IAAA7F,EAAAa,SAAA,GAOAhF,KAAAyY,MAAA,GAAAvU,GAAAC,GACAvC,EAAAc,QA7BA,GAAAwB,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAiCAL,GAAAD,QAAAwM,GxCo8IM,SAAUvM,EAAQD,GyC79IxB,QAAAqM,GAAA9H,GAEA,YAOAnE,MAAAyN,KAAAtJ,EAAAa,SAAA,GAOAhF,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAA8J,UAAA3F,EAAAuE,gBAIA7I,EAAAD,QAAAqM,GzC8/IM,SAAUpM,EAAQD,G0CzhJxB,QAAAyM,GAAAlI,GAEA,YAOAnE,MAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAA0X,UAAAvT,EAAAuE,gBAIA7I,EAAAD,QAAAyM,G1C0jJM,SAAUxM,EAAQD,EAASM,G2CllJjC,QAAAqM,GAAApI,GAEA,YAOAnE,MAAA2Y,MAAA,GAAAzU,GAAAC,GACAvC,EAAAmB,gBAQA/C,KAAA4Y,WAAA,GAAA1U,GAAAC,GACAvC,EAAAoC,SACApC,EAAAmC,SACAnC,EAAAqC,YAjCA,GAAAC,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAqCAL,GAAAD,QAAA2M,G3CsnJM,SAAU1M,EAAQD,EAASM,G4ChpJjC,QAAAoM,GAAAnI,GAEA,YAOAnE,MAAA6Y,OAAA1U,EAAAa,SAAA,GAOAhF,KAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAA2Y,MAAA,GAAAzU,GAAAC,GACAvC,EAAAoC,SACApC,EAAAyB,aAQArD,KAAAY,KAAAuD,EAAAuG,kBA7CA,GAAAxG,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAgDAL,GAAAD,QAAA0M,G5CorJM,SAAUzM,EAAQD,EAASM,G6CztJjC,QAAAsM,GAAArI,GAEA,YAOAnE,MAAA8Y,aAAA3U,EAAAa,SAAA,GAOAhF,KAAA+Y,gBAAA,GAAA7U,GAAAC,GACAvC,EAAAc,MACAd,EAAAyB,aAQArD,KAAAgZ,WAAA7U,EAAAuG,kBAOA1K,KAAAiZ,YAAA,GAAA/U,GAAAC,GACAvC,EAAA4B,SA9CA,GAAAU,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAkDAL,GAAAD,QAAA4M,G7C6vJM,SAAU3M,EAAQD,EAASM,G8CpyJjC,QAAAuM,GAAAtI,GAEA,YAOAnE,MAAAkZ,MAAA,GAAAhV,GAAAC,GACAvC,EAAAoC,WAQAhE,KAAAmZ,UAAA,GAAAjV,GAAAC,GACAvC,EAAAoC,SACApC,EAAAmC,SACAnC,EAAAqC,YAjCA,GAAAC,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAqCAL,GAAAD,QAAA6M,G9Cw0JM,SAAU5M,EAAQD,EAASM,G+Cl2JjC,QAAAwM,GAAAvI,GAEA,YAOAnE,MAAAsJ,OAAAnF,EAAAa,SAAA,GAOAhF,KAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAAwY,eAAA,GAAAtU,GAAAC,GACAvC,EAAAkB,KACAlB,EAAAI,aACAJ,EAAAa,gBA7CA,GAAAyB,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAiDAL,GAAAD,QAAA8M,G/Cs4JM,SAAU7M,EAAQD,EAASM,GgD56JjC,QAAAyM,GAAAxI,GAEA,YAOAnE,MAAAkZ,MAAA,GAAAhV,GAAAC,GACAvC,EAAAoC,SACApC,EAAAmC,SACAnC,EAAA6B,WACA7B,EAAAyB,WACAzB,EAAAqC,YAQAjE,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAA8J,UAAA3F,EAAAuE,gBAzCA,GAAAxE,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EA4CAL,GAAAD,QAAA+M,GhDg9JM,SAAU9M,EAAQD,EAASM,GiDj/JjC,QAAA2M,GAAA1I,GAEA,YAOAnE,MAAAgK,IAAA7F,EAAAa,SAAA,GAOAhF,KAAAoZ,UAAAjV,EAAAa,SAAA,GAOAhF,KAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAA8J,UAAA3F,EAAAuE,gBAOA1I,KAAAqZ,UAAA,GAAAnV,GAAAC,GACAvC,EAAA+B,QAzDA,GAAAO,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EA6DAL,GAAAD,QAAAiN,GjDqhKM,SAAUhN,EAAQD,EAASM,GkDvkKjC,QAAA4M,GAAA3I,GAEA,YAOAnE,MAAAkZ,MAAA,GAAAhV,GAAAC,GACAvC,EAAAoC,WAQAhE,KAAAsZ,WAAA,GAAApV,GAAAC,GACAvC,EAAAyB,WACAzB,EAAAwB,aAQApD,KAAAuZ,kBAAA,GAAArV,GAAAC,GACAvC,EAAAyB,WACAzB,EAAAwB,aA1CA,GAAAc,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EA8CAL,GAAAD,QAAAkN,GlD2mKM,SAAUjN,EAAQD,EAASM,GmD9oKjC,QAAA6M,GAAA5I,GAEA,YAOAnE,MAAAwZ,UAAArV,EAAAa,SAAA,GAOAhF,KAAAyZ,OAAA,GAAAvV,GAAAC,GACAvC,EAAAyB,aAQArD,KAAA0Z,YAAA,GAAAxV,GAAAC,GACAvC,EAAAW,MACAX,EAAAgC,WAvCA,GAAAM,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EA2CAL,GAAAD,QAAAmN,GnDkrKM,SAAUlN,EAAQD,GoDrtKxB,QAAAqN,GAAA9I,GAEA,YAOAnE,MAAAY,KAAAuD,EAAAuG,kBAIA7K,EAAAD,QAAAqN,GpDsvKM,SAAUpN,EAAQD,GqDnwKxB,QAAAoN,GAAA7I,GAEA,YASAnE,MAAA2Z,WAAAxV,EAAAa,SAAA,GAOAhF,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAA4Z,KAAAzV,EAAAwF,gBASA3J,KAAA6Z,MAAA1V,EAAAwF,gBASA3J,KAAA8Z,UAAA3V,EAAAwF,gBAIA9J,EAAAD,QAAAoN,GrDoyKM,SAAUnN,EAAQD,EAASM,GsDh1KjC,QAAA0M,GAAAzI,GAEA,YAOAnE,MAAA+Z,YAAA,GAAA7V,GAAAC,GACAvC,EAAAoC,WAQAhE,KAAAga,eAAA,GAAA9V,GAAAC,GACAvC,EAAAoC,WA/BA,GAAAE,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAmCAL,GAAAD,QAAAgN,GtDo3KM,SAAU/M,EAAQD,GuD/4KxB,QAAAsN,GAAA/I,GAEA,YAOAnE,MAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAia,SAAA9V,EAAAa,SAAA,GAOAhF,KAAAY,KAAAuD,EAAAuG,kBAIA7K,EAAAD,QAAAsN,GvDg7KM,SAAUrN,EAAQD,EAASM,GwDx8KjC,QAAAkN,GAAAjJ,GAEA,YAOAnE,MAAA+X,OAAA,GAAA7T,GAAAC,GACAvC,EAAAoC,WAQAhE,KAAAka,aAAA,GAAAhW,GAAAC,GACAvC,EAAAgC,WA/BA,GAAAM,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAmCAL,GAAAD,QAAAwN,GxD4+KM,SAAUvN,EAAQD,GyDvgLxB,QAAAuN,GAAAhJ,GAEA,YAOAnE,MAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAY,KAAAuD,EAAAuG,kBAOA1K,KAAAyN,KAAAtJ,EAAAuE,gBAIA7I,EAAAD,QAAAuN,GzDwiLM,SAAUtN,EAAQD,G0DnkLxB,QAAAyN,GAAAlJ,GAEA,YAOAnE,MAAA8J,UAAA3F,EAAAuE,gBAIA7I,EAAAD,QAAAyN,G1DomLM,SAAUxN,EAAQD,EAASM,G2D9mLjC,QAAAoN,GAAAnJ,GAEA,YAOAnE,MAAAsR,MAAAnN,EAAAa,SAAA,GAOAhF,KAAAsY,SAAAnU,EAAAuG,kBAOA1K,KAAAuY,cAAApU,EAAAuG,kBAOA1K,KAAAma,QAAA,GAAAjW,GAAAC,GACAvC,EAAAoC,SACApC,EAAAmC,SACAnC,EAAAqC,YAQAjE,KAAAoa,UAAA,GAAAlW,GAAAC,GACAvC,EAAAc,QAQA1C,KAAAqa,WAAA,GAAAnW,GAAAC,GACAvC,EAAAyB,aA/DA,GAAAa,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EAmEAL,GAAAD,QAAA0N,G3DkpLM,SAAUzN,EAAQD,EAASM,G4D1sLjC,QAAAqN,GAAApJ,GAEA,YAOAnE,MAAAsa,gBAAA,GAAApW,GAAAC,GACAvC,EAAA4B,OACA5B,EAAA6B,WACA7B,EAAAI,aACAJ,EAAAmC,WAQA/D,KAAAsY,SAAAnU,EAAAuG,kBAOA1K,KAAAuY,cAAApU,EAAAuG,kBAxCA,GAAAxG,GAAAhE,EAAA,GACA0B,EAAA1B,EAAA,EA2CAL,GAAAD,QAAA2N,G5D8uLM,SAAU1N,EAAQD,G6DjxLxB,QAAA4N,GAAArJ,GAEA,YAOAnE,MAAA8J,UAAA3F,EAAAuE,gBAIA7I,EAAAD,QAAA4N,G7DkzLM,SAAU3N,EAAQD,EAASM,G8Dh0LjC,QAAAqa,KAEA,YAQAva,MAAAwa,IAAA,SAAAzS,GACA0S,QAAAC,IAAA,8DACAD,QAAAC,IAAA,8DACAD,QAAAC,IAAA,6CAEA,GAAA5S,GAAAC,GAAAuG,SAAA,SAAAnK,GACAsW,QAAAC,IAAAvW,EAAA4S,iBACA0D,QAAAC,IAAAvW,EAAA2S,kBACA2D,QAAAC,IAAAvW,EAAA2E,sBACA2R,QAAAC,IAAAvW,EAAAyS,sBACA6D,QAAAC,IAAAvW,EAAA6S,yBACAyD,QAAAC,IAAAvW,EAAA0E,iBACA4R,QAAAC,IAAAvW,EAAAsE,sBACAgS,QAAAC,IAAAvW,EAAAwE,oBACA8R,QAAAC,IAAAvW,EAAAQ,cACA8V,QAAAC,IAAAvW,EAAA4F,sBACK,WACL0Q,QAAAC,IAAA,8BAnCA,GAAA5S,GAAA5H,EAAA,EAyCAL,GAAAD,QAAA,GAAA2a","file":"comla.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"comlajs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"comlajs\"] = factory();\n\telse\n\t\troot[\"comlajs\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * ComlaJS v0.1.0\n * Copyright (c) 2017 Danitso\n * http://www.comlajs.org/\n * \n * This program is free software: you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"comlajs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"comlajs\"] = factory();\n\telse\n\t\troot[\"comlajs\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 60);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TableIndexes.\n *\n * @constructor\n * @struct\n */\nfunction TableIndexes () {\n\n  \"use strict\";\n\n  /**\n   * The table index for the 'Assembly' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY = 32;\n\n  /**\n   * The table index for the 'AssemblyOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_OS = 34;\n\n  /**\n   * The table index for the 'AssemblyProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_PROCESSOR = 33;\n\n  /**\n   * The table index for the 'AssemblyRef' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF = 35;\n\n  /**\n   * The table index for the 'AssemblyRefOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_OS = 37;\n\n  /**\n   * The table index for the 'AssemblyRefProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_PROCESSOR = 36;\n\n  /**\n   * The table index for the 'ClassLayout' table.\n   *\n   * @const {number}\n   */\n  this.CLASS_LAYOUT = 15;\n\n  /**\n   * The table index for the 'Constant' table.\n   *\n   * @const {number}\n   */\n  this.CONSTANT = 11;\n\n  /**\n   * The table index for the 'CustomAttribute' table.\n   *\n   * @const {number}\n   */\n  this.CUSTOM_ATTRIBUTE = 12;\n\n  /**\n   * The table index for the 'DeclSecurity' table.\n   *\n   * @const {number}\n   */\n  this.DECL_SECURITY = 14;\n\n  /**\n   * The table index for the 'Event' table.\n   *\n   * @const {number}\n   */\n  this.EVENT = 20;\n\n  /**\n   * The table index for the 'EventMap' table.\n   *\n   * @const {number}\n   */\n  this.EVENT_MAP = 18;\n\n  /**\n   * The table index for the 'ExportedType' table.\n   *\n   * @const {number}\n   */\n  this.EXPORTED_TYPE = 39;\n\n  /**\n   * The table index for the 'Field' table.\n   *\n   * @const {number}\n   */\n  this.FIELD = 4;\n\n  /**\n   * The table index for the 'FieldLayout' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_LAYOUT = 16;\n\n  /**\n   * The table index for the 'FieldMarshal' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_MARSHAL = 13;\n\n  /**\n   * The table index for the 'FieldRVA' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_RVA = 29;\n\n  /**\n   * The table index for the 'File' table.\n   *\n   * @const {number}\n   */\n  this.FILE = 38;\n\n  /**\n   * The table index for the 'GenericParam' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM = 42;\n\n  /**\n   * The table index for the 'GenericParamConstraint' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM_CONSTRAINT = 44;\n\n  /**\n   * The table index for the 'ImplMap' table.\n   *\n   * @const {number}\n   */\n  this.IMPL_MAP = 28;\n\n  /**\n   * The table index for the 'InterfaceImpl' table.\n   *\n   * @const {number}\n   */\n  this.INTERFACE_IMPL = 9;\n\n  /**\n   * The table index for the 'ManifestResource' table.\n   *\n   * @const {number}\n   */\n  this.MANIFEST_RESOURCE = 40;\n\n  /**\n   * The table index for the 'MemberRef' table.\n   *\n   * @const {number}\n   */\n  this.MEMBER_REF = 10;\n\n  /**\n   * The table index for the 'MethodDef' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_DEF = 6;\n\n  /**\n   * The table index for the 'MethodImpl' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_IMPL = 25;\n\n  /**\n   * The table index for the 'MethodSemantics' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_SEMANTICS = 24;\n\n  /**\n   * The table index for the 'Module' table.\n   *\n   * @const {number}\n   */\n  this.MODULE = 0;\n\n  /**\n   * The table index for the 'ModuleRef' table.\n   *\n   * @const {number}\n   */\n  this.MODULE_REF = 26;\n\n  /**\n   * The table index for the 'NestedClass' table.\n   *\n   * @const {number}\n   */\n  this.NESTED_CLASS = 41;\n\n  /**\n   * The table index for the 'Param' table.\n   *\n   * @const {number}\n   */\n  this.PARAM = 8;\n\n  /**\n   * The table index for the 'Property' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY = 23;\n\n  /**\n   * The table index for the 'PropertyMap' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY_MAP = 21;\n\n  /**\n   * The table index for the 'StandAloneSig' table.\n   *\n   * @const {number}\n   */\n  this.STAND_ALONE_SIG = 17;\n\n  /**\n   * The table index for the 'TypeRef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_REF = 1;\n\n  /**\n   * The table index for the 'TypeDef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_DEF = 2;\n\n  /**\n   * The table index for the 'TypeSpec' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_SPEC = 27;\n\n}\n\nmodule.exports = new TableIndexes();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class RowReference.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n * @param {Array<number>} tableIndexes\n *   The table indexes.\n *\n * @constructor\n * @struct\n */\nfunction RowReference (reader, tableIndexes) {\n\n  \"use strict\";\n\n  /**\n   * The table index.\n   *\n   * @type {number}\n   */\n  this.tableIndex = -1;\n\n  /**\n   * The row index.\n   *\n   * @type {number}\n   */\n  this.rowIndex = -1;\n\n  // Initialize the object.\n  (function (object, reader, tableIndexes) {\n\n    var bc = 1, bv, size = 2, tables = reader.readTables();\n\n    // Determine how many bits are required to represent the table index.\n    while ((bv = Math.pow(2, bc - 1)) < tableIndexes.length) {\n      bc++;\n    }\n\n    // Determine if the index is represented as a 16-bit or 32-bit integer.\n    for (var i = 0; i < tableIndexes.length; i++) {\n      if ((tables[tableIndexes[i]]) &&\n        (tables[tableIndexes[i]].length > 0xFFFF)) {\n        size = 4;\n        break;\n      }\n    }\n\n    // Read the integer that contains both the table index and the row index.\n    var tableRowIndex = reader.readUInt(size);\n\n    // Split the integer into two separate values and update the properties.\n    object.tableIndex = tableIndexes[tableRowIndex & (bv - 1)];\n    object.rowIndex = tableRowIndex >> bc;\n\n  }(this, reader, tableIndexes));\n\n}\n\nmodule.exports = RowReference;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ImageAttributes.\n *\n * @constructor\n * @struct\n */\nfunction ImageAttributes () {\n\n  \"use strict\";\n\n  /**\n   * The DOS header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_DOS_SIGNATURE = 0x5a4d;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\n\n  /**\n   * The NT header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_SIGNATURE = 0x4550;\n\n  /**\n   * The file is a ROM image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_ROM_OPTIONAL_HDR_MAGIC = 0x107;\n\n}\n\nmodule.exports = new ImageAttributes();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDirectory.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectory (reader) {\n\n  \"use strict\";\n\n  /**\n   * The characteristics.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n  /**\n   * The time/date stamp describing the creation time of the resource.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The major version number.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use names and that follow this structure.\n   *\n   * @type {number}\n   */\n  this.numberOfNamedEntries = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use integer IDs, and which follow this\n   * structure.\n   *\n   * @type {number}\n   */\n  this.numberOfIdEntries = reader.readUInt(2);\n\n  /**\n   * The resource directory entries.\n   *\n   * @type {Array<ResourceDirectoryEntry>}\n   */\n  this.entries = new Array(this.numberOfIdEntries + this.numberOfNamedEntries);\n\n  // Parse the resource directory entries.\n  var position = reader.getPosition();\n\n  for (var i = 0; i < this.entries.length; i++) {\n    reader.setPosition(position + (i * 8));\n    this.entries[i] = new ResourceDirectoryEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectory;\n\nvar ResourceDirectoryEntry = __webpack_require__(12);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CustomException = __webpack_require__(8);\nvar Extend = __webpack_require__(2);\n\n/**\n * Class ParserException.\n *\n * @param {string} message\n *   The message.\n *\n * @constructor\n * @extends {CustomException}\n */\nfunction ParserException (message) {\n\n  \"use strict\";\n\n  // Invoke the parent constructor.\n  Extend(true, this, new CustomException(message, 'ParserException'));\n\n}\n\nmodule.exports = ParserException;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DataDirectoryHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DataDirectoryHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The relative virtual address of the table.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the table, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n}\n\nmodule.exports = DataDirectoryHeader;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar AssemblyOSRow = __webpack_require__(23);\nvar AssemblyProcessorRow = __webpack_require__(24);\nvar AssemblyRefOSRow = __webpack_require__(25);\nvar AssemblyRefProcessorRow = __webpack_require__(26);\nvar AssemblyRefRow = __webpack_require__(27);\nvar AssemblyRow = __webpack_require__(28);\nvar ClassLayoutRow = __webpack_require__(29);\nvar ConstantRow = __webpack_require__(30);\nvar CORHeader = __webpack_require__(14);\nvar CustomAttributeRow = __webpack_require__(31);\nvar DeclSecurityRow = __webpack_require__(32);\nvar EventMapRow = __webpack_require__(33);\nvar EventRow = __webpack_require__(34);\nvar ExportedTypeRow = __webpack_require__(35);\nvar Extend = __webpack_require__(2);\nvar FieldRow = __webpack_require__(39);\nvar FieldRVARow = __webpack_require__(38);\nvar FieldLayoutRow = __webpack_require__(36);\nvar FieldMarshalRow = __webpack_require__(37);\nvar FileRow = __webpack_require__(40);\nvar GenericParamRow = __webpack_require__(42);\nvar GenericParamConstraintRow = __webpack_require__(41);\nvar ImplMapRow = __webpack_require__(43);\nvar InterfaceImplRow = __webpack_require__(44);\nvar ParserException = __webpack_require__(5);\nvar ManifestResourceRow = __webpack_require__(45);\nvar MetadataHeader = __webpack_require__(16);\nvar MemberRefRow = __webpack_require__(46);\nvar NestedClassRow = __webpack_require__(52);\nvar MethodDefRow = __webpack_require__(47);\nvar MethodHeader = __webpack_require__(17);\nvar MethodImplRow = __webpack_require__(48);\nvar MethodSemanticsRow = __webpack_require__(49);\nvar ModuleRefRow = __webpack_require__(50);\nvar ModuleRow = __webpack_require__(51);\nvar ParamRow = __webpack_require__(53);\nvar PEParser = __webpack_require__(22);\nvar PropertyMapRow = __webpack_require__(54);\nvar PropertyRow = __webpack_require__(55);\nvar StandAloneSigRow = __webpack_require__(56);\nvar TableIndexes = __webpack_require__(0);\nvar TablesHeader = __webpack_require__(21);\nvar TypeDefRow = __webpack_require__(57);\nvar TypeRefRow = __webpack_require__(58);\nvar TypeSpecRow = __webpack_require__(59);\n\n/**\n * Class CILParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {PEParser}\n */\nfunction CILParser (path, data) {\n\n  \"use strict\";\n\n  // Invoke the parent constructor.\n  Extend(true, this, new PEParser(path, data));\n\n  /**\n   * The COR header.\n   *\n   * @type {CORHeader}\n   *\n   * @protected\n   */\n  this._corHeader = null;\n\n  /**\n   * The metadata header.\n   *\n   * @type {MetadataHeader}\n   *\n   * @protected\n   */\n  this._metadataHeader = null;\n\n  /**\n   * The method headers.\n   *\n   * @type {Array<MethodHeader>}\n   *\n   * @protected\n   */\n  this._methodHeaders = null;\n\n  /**\n   * The metadata tables.\n   *\n   * @type {Array<Object>}\n   *\n   * @protected\n   */\n  this._tables = null;\n\n  /**\n   * The tables header.\n   *\n   * @type {TablesHeader}\n   *\n   * @protected\n   */\n  this._tablesHeader = null;\n\n  /**\n   * Retrieves a stream header.\n   *\n   * @param {string} name\n   *   The stream name.\n   *\n   * @return {StreamHeader|null}\n   *   Returns the stream header or NULL if not found.\n   */\n  this.getStreamHeader = function (name) {\n    var streamHeaders = this.readMetadataHeader().streamHeaders;\n\n    for (var i = 0; i < streamHeaders.length; i++) {\n      if (streamHeaders[i].name === name) {\n        return streamHeaders[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Reads a blob index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readBlobIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x04) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the COR header.\n   *\n   * @return {CORHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readCORHeader = function () {\n    if (!this._corHeader) {\n      // Verify that the CLR (formerly COM) data directory is available.\n      if ((this.readOptionalHeader().dataDirectory.length < 15) ||\n        (this.readOptionalHeader().dataDirectory[14].size < 1)) {\n        throw new ParserException('The CLR data directory is missing');\n      }\n\n      // Move the stream cursor to the position of the COR header.\n      this.setPosition(this.getFileOffset(\n        this.readOptionalHeader().dataDirectory[14].virtualAddress));\n\n      // Read the the header and throw an exception if it is invalid.\n      this._corHeader = new CORHeader(this);\n\n      if (this._corHeader.sizeOfHeader !== 72) {\n        throw new ParserException('Invalid COR header');\n      }\n    }\n\n    return this._corHeader;\n  };\n\n  /**\n   * Reads a GUID from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a 128-bit unique identifier.\n   */\n  this.readGUIDFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#GUID');\n\n    if (!streamHeader) {\n      throw new ParserException('The GUID stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the GUID from the stream and format it before returning it.\n    var guid = '', s = this.readString(16);\n\n    for (var i = 0; i < s.length; i++) {\n      if ((i === 4) || (i === 6) || (i === 8) || (i === 10)) {\n        guid += '-';\n      }\n\n      var hex = s.charCodeAt(i).toString(16);\n      guid += (hex.length === 2) ? hex : '0' + hex;\n    }\n\n    return guid;\n  };\n\n  /**\n   * Reads a GUID index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readGUIDIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x02) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the CLR metadata header.\n   *\n   * @return {MetadataHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readMetadataHeader = function () {\n    if (!this._metadataHeader) {\n      // Verify that the metadata directory is available.\n      if (this.readCORHeader().metadata.size < 1) {\n        throw new ParserException('The metadata header is missing');\n      }\n\n      // Move the stream cursor to the position of the metadata header.\n      this.setPosition(this.getFileOffset(\n        this.readCORHeader().metadata.virtualAddress));\n\n      // Read the header and throw an exception if it is invalid.\n      this._metadataHeader = new MetadataHeader(this);\n\n      if (this._metadataHeader.signature !== 0x424A5342) {\n        throw new ParserException('Invalid metadata header');\n      }\n    }\n\n    return this._metadataHeader;\n  };\n\n  /**\n   * Reads the CLR method headers.\n   *\n   * @return {Array<MethodHeader>}\n   *   Returns an array of headers.\n   */\n  this.readMethodHeaders = function () {\n    if (!this._methodHeaders) {\n      var tables = this.readTables();\n\n      // Initialize the array of method headers.\n      this._methodHeaders = new Array(tables[TableIndexes.METHOD_DEF].length);\n\n      // Parse the method headers referenced by the MethodDef table.\n      for (var i = 0; i < tables[TableIndexes.METHOD_DEF].length; i++) {\n        this.setPosition(this.getFileOffset(tables[TableIndexes.METHOD_DEF][i]\n          .rva));\n        this._methodHeaders[i] = new MethodHeader(this);\n      }\n    }\n\n    return this._methodHeaders;\n  };\n\n  /**\n   * Reads the IL instructions for a method.\n   *\n   * @param {MethodHeader} header\n   *   The method header.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readMethodInstructions = function (header) {\n    this.setPosition(header.codeOffset);\n    return this.readBytes(header.codeSize);\n  };\n\n  /**\n   * Reads a string from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a UTF-8 encoded string.\n   */\n  this.readStringFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#Strings');\n\n    if (!streamHeader) {\n      throw new ParserException('The string stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the NULL terminated string.\n    return decodeURIComponent(encodeURIComponent(this.readString(0, true)));\n  };\n\n  /**\n   * Reads a string index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readStringIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x01) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the metadata tables.\n   *\n   * @return {Object}\n   *   Returns an array containing the tables.\n   */\n  this.readTables = function () {\n    if (!this._tables) {\n      // Ensure that the tables header has been read.\n      var header = this.readTablesHeader();\n\n      // Move the buffer cursor to the position of the tables.\n      this.setPosition(header.tablesOffset);\n\n      // Read the row count for each of the tables as we cannot read the rows\n      // before this has been done.\n      this._tables = [];\n\n      for (var i = 0; i < 64; i++) {\n        if (((i < 32) && (header.maskValidArray[0] & Math.pow(2, i)) === 0) ||\n          ((i >= 32) && (header.maskValidArray[1] & Math.pow(2, i - 32)) ===\n          0)) {\n          continue;\n        }\n\n        this._tables[i] = new Array(this.readUInt(4));\n      }\n\n      // Now that the row counts have been read, go ahead reading all the rows\n      // one table at a time.\n      for (i = 0; i < 64; i++) {\n        if (!this._tables[i]) {\n          continue;\n        }\n\n        var rowClass = this._getTableRowClass(i);\n        var rowCount = this._tables[i].length;\n\n        for (var r = 0; r < rowCount; r++) {\n          this._tables[i][r] = new rowClass(this);\n        }\n      }\n    }\n\n    return this._tables;\n  };\n\n  /**\n   * Reads the metadata tables header.\n   *\n   * @return {TablesHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the table stream is missing or if the header is invalid.\n   */\n  this.readTablesHeader = function () {\n    if (!this._tablesHeader) {\n      // Locate the table stream and throw an exception if it is missing.\n      var streamHeader = this.getStreamHeader('#~');\n\n      if (!streamHeader) {\n        throw new ParserException('The stream for the tables is missing');\n      }\n\n      // Move the stream cursor to the position of the tables header.\n      this.setPosition(this.readMetadataHeader().offset + streamHeader.offset);\n\n      // Read the header and throw an exception if it is invalid.\n      this._tablesHeader = new TablesHeader(this);\n\n      if ((this._tablesHeader.reserved1 !== 0) ||\n        (this._tablesHeader.reserved2 !== 1)) {\n        throw new ParserException('Invalid tables header');\n      }\n    }\n\n    return this._tablesHeader;\n  };\n\n  /**\n   * Retrieves the constructor for a table row.\n   *\n   * @param {number} tableIndex\n   *   The table index.\n   *\n   * @return {Function}\n   *   Returns a constructor.\n   *\n   * @protected\n   */\n  this._getTableRowClass = function (tableIndex) {\n    switch (tableIndex) {\n      case TableIndexes.ASSEMBLY:\n        return AssemblyRow;\n\n      case TableIndexes.ASSEMBLY_OS:\n        return AssemblyOSRow;\n\n      case TableIndexes.ASSEMBLY_PROCESSOR:\n        return AssemblyProcessorRow;\n\n      case TableIndexes.ASSEMBLY_REF:\n        return AssemblyRefRow;\n\n      case TableIndexes.ASSEMBLY_REF_OS:\n        return AssemblyRefOSRow;\n\n      case TableIndexes.ASSEMBLY_REF_PROCESSOR:\n        return AssemblyRefProcessorRow;\n\n      case TableIndexes.CLASS_LAYOUT:\n        return ClassLayoutRow;\n\n      case TableIndexes.CONSTANT:\n        return ConstantRow;\n\n      case TableIndexes.CUSTOM_ATTRIBUTE:\n        return CustomAttributeRow;\n\n      case TableIndexes.DECL_SECURITY:\n        return DeclSecurityRow;\n\n      case TableIndexes.EVENT:\n        return EventRow;\n\n      case TableIndexes.EVENT_MAP:\n        return EventMapRow;\n\n      case TableIndexes.EXPORTED_TYPE:\n        return ExportedTypeRow;\n\n      case TableIndexes.FIELD:\n        return FieldRow;\n\n      case TableIndexes.FIELD_LAYOUT:\n        return FieldLayoutRow;\n\n      case TableIndexes.FIELD_MARSHAL:\n        return FieldMarshalRow;\n\n      case TableIndexes.FIELD_RVA:\n        return FieldRVARow;\n\n      case TableIndexes.FILE:\n        return FileRow;\n\n      case TableIndexes.GENERIC_PARAM:\n        return GenericParamRow;\n\n      case TableIndexes.GENERIC_PARAM_CONSTRAINT:\n        return GenericParamConstraintRow;\n\n      case TableIndexes.IMPL_MAP:\n        return ImplMapRow;\n\n      case TableIndexes.INTERFACE_IMPL:\n        return InterfaceImplRow;\n\n      case TableIndexes.MANIFEST_RESOURCE:\n        return ManifestResourceRow;\n\n      case TableIndexes.MEMBER_REF:\n        return MemberRefRow;\n\n      case TableIndexes.NESTED_CLASS:\n        return NestedClassRow;\n\n      case TableIndexes.METHOD_DEF:\n        return MethodDefRow;\n\n      case TableIndexes.METHOD_IMPL:\n        return MethodImplRow;\n\n      case TableIndexes.METHOD_SEMANTICS:\n        return MethodSemanticsRow;\n\n      case TableIndexes.MODULE:\n        return ModuleRow;\n\n      case TableIndexes.MODULE_REF:\n        return ModuleRefRow;\n\n      case TableIndexes.PARAM:\n        return ParamRow;\n\n      case TableIndexes.PROPERTY:\n        return PropertyRow;\n\n      case TableIndexes.PROPERTY_MAP:\n        return PropertyMapRow;\n\n      case TableIndexes.STAND_ALONE_SIG:\n        return StandAloneSigRow;\n\n      case TableIndexes.TYPE_DEF:\n        return TypeDefRow;\n\n      case TableIndexes.TYPE_REF:\n        return TypeRefRow;\n\n      case TableIndexes.TYPE_SPEC:\n        return TypeSpecRow;\n\n      default:\n        throw new ParserException('Unsupported metadata table at index ' +\n          tableIndex);\n    }\n  };\n\n}\n\nmodule.exports = CILParser;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class CustomException.\n *\n * @param {string} message\n *   The message.\n * @param {string} type\n *   The type of exception.\n *\n * @constructor\n */\nfunction CustomException (message, type) {\n\n  \"use strict\";\n\n  /**\n   * The exception message.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._message = message;\n\n  /**\n   * The exception type.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._type = (typeof type !== 'undefined') ? type : 'CustomException';\n\n  /**\n   * Retrieves the exception message.\n   *\n   * @return {string}\n   */\n  this.getMessage = function () {\n    return this._message;\n  };\n\n  /**\n   * Retrieves the exception type.\n   *\n   * @return {string}\n   */\n  this.getType = function () {\n    return this._type;\n  };\n\n  /**\n   * Converts the exception to a string.\n   *\n   * @return {string}\n   */\n  this.toString = function () {\n    return this.getMessage();\n  };\n\n}\n\nmodule.exports = CustomException;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class BinaryParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n */\nfunction BinaryParser (path, data) {\n\n  \"use strict\";\n\n  /**\n   * The file contents.\n   *\n   * @type {ArrayBuffer}\n   *\n   * @protected\n   */\n  this._data = (typeof data !== 'undefined') ? new Uint8Array(data) : null;\n\n  /**\n   * The file path.\n   *\n   * @type {string}\n   *\n   * @protected\n   */\n  this._path = path;\n\n  /**\n   * The file position.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._position = 0;\n\n  /**\n   * Retrieves the file path.\n   *\n   * @return {string}\n   *   Returns a path.\n   */\n  this.getPath = function () {\n    return this._path;\n  };\n\n  /**\n   * Retrieves the buffer position.\n   *\n   * @return {number}\n   *   Returns the buffer position.\n   */\n  this.getPosition = function () {\n    return this._position;\n  };\n\n  /**\n   * Retrieves the buffer size.\n   *\n   * @return {number}\n   *   Returns the buffer size.\n   */\n  this.getSize = function () {\n    return this._data.byteLength;\n  };\n\n  /**\n   * Loads the file contents.\n   *\n   * @param {Function} success\n   *   The success callback.\n   * @param {Function} error\n   *   The error callback.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   */\n  this.loadFile = function (success, error) {\n    var request = new XMLHttpRequest();\n    request.open('GET', this.getPath(), true);\n    request.responseType = 'arraybuffer';\n    request.onreadystatechange = function(reader) {\n      return function() {\n        if (request.readyState === XMLHttpRequest.DONE) {\n          if (request.status === 200) {\n            // Store the data as an UInt8 array and reset the position.\n            reader._data = new Uint8Array(request.response);\n            reader._position = 0;\n\n            // Invoke the success callback in order for the invoker to proceed.\n            success(reader);\n          }\n          else {\n            error(reader);\n          }\n        }\n      };\n    }(this);\n    request.send(null);\n    return this;\n  };\n\n  /**\n   * Reads the next bytes from the buffer.\n   *\n   * @param {number} count\n   *   The number of bytes to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readBytes = function (count) {\n    var bytes = [];\n\n    for (var i = 0; i < count; i++) {\n      if (this._position >= this.getSize()) {\n        break;\n      }\n\n      bytes.push(this._data[this._position++]);\n    }\n\n    return bytes;\n  };\n\n  /**\n   * Reads an ASCII string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a NULL\n   *   terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a NULL terminator after the string has been read in\n   *   which case the string will be terminated.\n   * @param {number} boundary\n   *   The string boundary in bytes.\n   *\n   * @return {string}\n   *   Returns an ASCII string.\n   */\n  this.readString = function (length, terminate, boundary) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (((!boundary) || (s.length % boundary === 0)) &&\n        (s.endsWith(\"\\0\"))) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(\"\\0\")) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return s;\n  };\n\n  /**\n   * Reads the next unsigned integer from the buffer.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   *\n   * @return {number|null}\n   *   Returns the integer or NULL if the end is reached.\n   */\n  this.readUInt = function (size) {\n    var bytes = this.readBytes(size);\n    var integer = 0;\n\n    if (bytes.length != size) {\n      return null;\n    }\n\n    for (var i = size - 1; i > -1; i--) {\n      integer |= (bytes[i] << (8 * i));\n    }\n\n    return integer;\n  };\n\n  /**\n   * Reads the next unsigned integers.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   * @param {number} count\n   *   The number of integers to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of integers.\n   */\n  this.readUIntArray = function (size, count) {\n    var integers = [];\n\n    for (var i = 0; i < count; i++) {\n      var integer = this.readUInt(size);\n\n      if (integer === null) {\n        break;\n      }\n\n      integers.push(integer);\n    }\n\n    return integers;\n  };\n\n  /**\n   * Reads a UTF-8 string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a\n   *   string terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a string terminator after the string has been read in\n   *   which case the string will always be terminated.\n   *\n   * @return {string}\n   *   Returns a UTF-8 string.\n   */\n  this.readUTF8String = function (length, terminate) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (s.endsWith(\"\\0\\0\")) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(\"\\0\\0\")) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return decodeURI(encodeURIComponent(s));\n  };\n\n  /**\n   * Sets the file path.\n   *\n   * @param {string} path\n   *   The file path.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPath = function (path) {\n    this._path = path;\n    return this;\n  };\n\n  /**\n   * Sets the buffer position.\n   *\n   * @param {number} position\n   *   The new position.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPosition = function (position) {\n    this._position = position;\n    return this;\n  };\n\n}\n\nmodule.exports = BinaryParser;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class MethodFlags.\n *\n * @constructor\n * @struct\n */\nfunction MethodFlags () {\n\n  \"use strict\";\n\n  /**\n   * The fat format flag.\n   *\n   * @const {number}\n   */\n  this.FAT_FORMAT = 0x3;\n\n  /**\n   * The initialize locals flag.\n   *\n   * @const {number}\n   */\n  this.INITIALIZE_LOCALS = 0x10;\n\n  /**\n   * The more sections flag.\n   *\n   * @const {number}\n   */\n  this.MORE_SECTIONS = 0x8;\n\n  /**\n   * The tiny format flag.\n   *\n   * @const {number}\n   */\n  this.TINY_FORMAT = 0x2;\n\n}\n\nmodule.exports = new MethodFlags();\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDataEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDataEntry (reader) {\n\n  \"use strict\";\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.getFileOffset(reader.readUInt(4));\n\n  /**\n   * The data size.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The code page.\n   *\n   * @type {number}\n   */\n  this.codePage = reader.readUInt(4);\n\n  /**\n   * The reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n}\n\nmodule.exports = ResourceDataEntry;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar ResourceDataEntry = __webpack_require__(11);\nvar ResourceDirectory = __webpack_require__(4);\n\n/**\n * Class ResourceDirectoryEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectoryEntry (reader) {\n\n  \"use strict\";\n\n  /**\n   * The name.\n   *\n   * @type {number}\n   */\n  this.name = reader.readUInt(4);\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.readUInt(4);\n\n  /**\n   * The data entry.\n   *\n   * @type {ResourceDataEntry}\n   */\n  this.data = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *   The resource directory or NULL if this entry does not point to one.\n   */\n  this.directory = null;\n\n  // Read either a resource directory or a data entry.\n  if (this.offsetToData >>> 31 === 1) {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      (this.offsetToData << 1 >>> 1);\n    reader.setPosition(this.offsetToData);\n    this.directory = new ResourceDirectory(reader);\n  }\n  else {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      this.offsetToData;\n    reader.setPosition(this.offsetToData);\n    this.data = new ResourceDataEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectoryEntry;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class COFFHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction COFFHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The signature.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The architecture type of the computer.\n   *\n   * @type {number}\n   */\n  this.machine = reader.readUInt(2);\n\n  /**\n   * The number of sections.\n   *\n   * @type {number}\n   */\n  this.numberOfSections = reader.readUInt(2);\n\n  /**\n   * The low 32 bits of the time stamp of the image.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The offset of the symbol table, in bytes, or zero if no COFF symbol table\n   * exists.\n   *\n   * @type {number}\n   */\n  this.pointerToSymbolTable = reader.readUInt(4);\n\n  /**\n   * The number of symbols in the symbol table.\n   *\n   * @type {number}\n   */\n  this.numberOfSymbols = reader.readUInt(4);\n\n  /**\n   * The size of the optional header, in bytes. This value should be 0 for\n   * object files.\n   *\n   * @type {number}\n   */\n  this.sizeOfOptionalHeader = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image. This member can be one or more of the\n   * following values.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(2);\n\n}\n\nmodule.exports = COFFHeader;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = __webpack_require__(6);\n\n/**\n * Class CORHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction CORHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The size of the header, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeader = reader.readUInt(4);\n\n  /**\n   * The major runtime version.\n   *\n   * @type {number}\n   */\n  this.majorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The minor runtime version.\n   *\n   * @type {number}\n   */\n  this.minorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The metadata directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.metadata = new DataDirectoryHeader(reader);\n\n  /**\n   * The runtime flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The entry point address or token.\n   *\n   * @type {number}\n   */\n  this.entryPoint = reader.readUInt(4);\n\n  /**\n   * The resources directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.resources = new DataDirectoryHeader(reader);\n\n  /**\n   * The strong name signature directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.strongNameSignature = new DataDirectoryHeader(reader);\n\n  /**\n   * The code manager table directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.codeManagerTable = new DataDirectoryHeader(reader);\n\n  /**\n   * The VTable fix-ups directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.vTableFixups = new DataDirectoryHeader(reader);\n\n  /**\n   * The exported address table jumps directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.exportAddressTableJumps = new DataDirectoryHeader(reader);\n\n  /**\n   * The managed native header directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.managedNativeHeader = new DataDirectoryHeader(reader);\n\n}\n\nmodule.exports = CORHeader;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DOSHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DOSHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The magic number.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The number of bytes on the last page in the file.\n   *\n   * @type {number}\n   */\n  this.cblp = reader.readUInt(2);\n\n  /**\n   * The number of pages in the file.\n   *\n   * @type {number}\n   */\n  this.cp = reader.readUInt(2);\n\n  /**\n   * The number of relocations.\n   *\n   * @type {number}\n   */\n  this.crlc = reader.readUInt(2);\n\n  /**\n   * The size of the header in paragraphs.\n   *\n   * @type {number}\n   */\n  this.cparhdr = reader.readUInt(2);\n\n  /**\n   * The minimum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.minAlloc = reader.readUInt(2);\n\n  /**\n   * The maximum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.maxAlloc = reader.readUInt(2);\n\n  /**\n   * The initial (relative) SS value.\n   *\n   * @type {number}\n   */\n  this.ss = reader.readUInt(2);\n\n  /**\n   * The initial SP value.\n   *\n   * @type {number}\n   */\n  this.sp = reader.readUInt(2);\n\n  /**\n   * The checksum.\n   *\n   * @type {number}\n   */\n  this.csum = reader.readUInt(2);\n\n  /**\n   * The initial IP value.\n   *\n   * @type {number}\n   */\n  this.ip = reader.readUInt(2);\n\n  /**\n   * The initial (relative) CS value.\n   *\n   * @type {number}\n   */\n  this.cs = reader.readUInt(2);\n\n  /**\n   * The file address of the relocation table.\n   *\n   * @type {number}\n   */\n  this.lfarlc = reader.readUInt(2);\n\n  /**\n   * The overlay number.\n   *\n   * @type {number}\n   */\n  this.ovno = reader.readUInt(2);\n\n  /**\n   * The first reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res1 = reader.readUIntArray(2, 4);\n\n  /**\n   * The OEM identifier.\n   *\n   * @type {number}\n   */\n  this.oemid = reader.readUInt(2);\n\n  /**\n   * The OEM information.\n   *\n   * @type {number}\n   */\n  this.oeminfo = reader.readUInt(2);\n\n  /**\n   * The second reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res2 = reader.readUIntArray(2, 10);\n\n  /**\n   * The file address of the new EXE header.\n   *\n   * @type {number}\n   */\n  this.lfanew = reader.readUInt(4);\n\n}\n\nmodule.exports = DOSHeader;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar StreamHeader = __webpack_require__(20);\n\n/**\n * Class MetadataHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction MetadataHeader (reader) {\n\n  \"use strict\";\n\n  var i;\n\n  /**\n   * The file offset to the header relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.offset = reader.getPosition();\n\n  /**\n   * The signature.\n   *\n   * This value should always equal 0x424A5342.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * A reserved value.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n  /**\n   * The length of the version string.\n   *\n   * @type {number}\n   */\n  this.versionLength = (i = (i = reader.readUInt(4)) + (i % 4));\n\n  /**\n   * The version string.\n   *\n   * @type {string}\n   */\n  this.version = reader.readUTF8String(i, true);\n\n  /**\n   * The flags.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The number of streams.\n   *\n   * @type {number}\n   */\n  this.streams = reader.readUInt(2);\n\n  /**\n   * The stream headers.\n   *\n   * @type {Array<StreamHeader>}\n   */\n  this.streamHeaders = new Array(this.streams);\n\n  // Read the stream headers.\n  for (i = 0; i < this.streamHeaders.length; i++) {\n    this.streamHeaders[i] = new StreamHeader(reader);\n  }\n\n}\n\nmodule.exports = MetadataHeader;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar MethodFlags = __webpack_require__(10);\n\n/**\n * Class MethodHeader.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodHeader (reader) {\n\n  \"use strict\";\n\n  // Retrieve the first one or two bytes specifying the flags and header size.\n  var flags_and_size = reader.readUInt(1);\n  var tiny = true;\n\n  if ((flags_and_size & MethodFlags.TINY_FORMAT) === 0) {\n    reader.setPosition(reader.getPosition() - 1);\n    flags_and_size = reader.readUInt(2);\n    tiny = false;\n  }\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = tiny ? flags_and_size & 0x03 : flags_and_size & 0xFFF;\n\n  /**\n   * The header size.\n   *\n   * @type {number}\n   */\n  this.size = tiny ? 1 : flags_and_size >> 12;\n\n  /**\n   * The maximum number of items on the operand stack.\n   *\n   * @return {number}\n   */\n  this.maxStack = tiny ? 0 : reader.readUInt(2);\n\n  /**\n   * The size in bytes of the actual method body.\n   *\n   * @return {number}\n   */\n  this.codeSize = tiny ? flags_and_size >> 2 : reader.readUInt(4);\n\n  /**\n   * The metadata token for a signature describing the layout of the local\n   * variables for the method\n   *\n   * @return {number}\n   */\n  this.localVarSigTok = tiny ? 0 : reader.readUInt(4);\n\n  /**\n   * The file offset to the code.\n   *\n   * @type {number}\n   */\n  this.codeOffset = reader.getPosition();\n\n}\n\nmodule.exports = MethodHeader;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = __webpack_require__(6);\nvar ImageAttributes = __webpack_require__(3);\n\n/**\n * Class OptionalHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction OptionalHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The state of the image file.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The major version number of the linker.\n   *\n   * @type {number}\n   */\n  this.majorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The minor version number of the linker.\n   *\n   * @type {number}\n   */\n  this.minorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The size of the code section, in bytes, or the sum of all such sections if\n   * there are multiple code sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfCode = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data section, in bytes, or the sum of all such\n   * sections if there are multiple initialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfInitializedData = reader.readUInt(4);\n\n  /**\n   * The size of the uninitialized data section, in bytes, or the sum of all\n   * such sections if there are multiple uninitialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfUninitializedData = reader.readUInt(4);\n\n  /**\n   * A pointer to the entry point function, relative to the image base address.\n   *\n   * @type {number}\n   */\n  this.addressOfEntryPoint = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the code section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfCode = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the data section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfData = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 0 : 4);\n\n  /**\n   * The preferred address of the first byte of the image when it is loaded in\n   * memory.\n   *\n   * @type {number}\n   */\n  this.imageBase = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The alignment of sections loaded in memory, in bytes.\n   *\n   * @type {number}\n   */\n  this.sectionAlignment = reader.readUInt(4);\n\n  /**\n   * The alignment of the raw data of sections in the image file, in bytes.\n   *\n   * @type {number}\n   */\n  this.fileAlignment = reader.readUInt(4);\n\n  /**\n   * The major version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.majorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.minorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the image.\n   *\n   * @type {number}\n   */\n  this.majorImageVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the image.\n   *\n   * @type {number}\n   */\n  this.minorImageVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.majorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.minorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * This member is reserved and must be 0.\n   *\n   * @type {number}\n   */\n  this.win32VersionValue = reader.readUInt(4);\n\n  /**\n   * The size of the image, in bytes, including all headers.\n   *\n   * @type {number}\n   */\n  this.sizeOfImage = reader.readUInt(4);\n\n  /**\n   * The combined size of the following items, rounded to a multiple of the\n   * value specified in the fileAlignment member.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeaders = reader.readUInt(4);\n\n  /**\n   * The image file checksum.\n   *\n   * @type {number}\n   */\n  this.checkSum = reader.readUInt(4);\n\n  /**\n   * The subsystem required to run this image.\n   *\n   * @type {number}\n   */\n  this.subsystem = reader.readUInt(2);\n\n  /**\n   * The DLL characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.dllCharacteristics = reader.readUInt(2);\n\n  /**\n   * The number of bytes to reserve for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to reserve for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * This member is obsolete.\n   *\n   * @type {number}\n   */\n  this.loaderFlags = reader.readUInt(4);\n\n  /**\n   * The number of directory entries in the remainder of the optional header.\n   *\n   * @type {number}\n   */\n  this.numberOfRvaAndSizes = reader.readUInt(4);\n\n  /**\n   * The array of data directory headers.\n   *\n   * @type {Array<DataDirectoryHeader>}\n   */\n  this.dataDirectory = new Array(this.numberOfRvaAndSizes);\n\n  // Read the data directory headers.\n  for (var i = 0; i < this.dataDirectory.length; i++) {\n    this.dataDirectory[i] = new DataDirectoryHeader(reader);\n  }\n\n}\n\nmodule.exports = OptionalHeader;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class SectionHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction SectionHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The section name.\n   *\n   * @type {string}\n   */\n  this.name = reader.readUTF8String(8, true);\n\n  /**\n   * The file address or the total size of the section when loaded into memory,\n   * in bytes.\n   *\n   * @type {number}\n   */\n  this.misc = reader.readUInt(4);\n\n  /**\n   * The address of the first byte of the section when loaded into memory,\n   * relative to the image base.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data on disk, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the first page within the COFF file.\n   *\n   * @type {number}\n   */\n  this.pointerToRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToRelocations = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToLinenumbers = reader.readUInt(4);\n\n  /**\n   * The number of relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfRelocations = reader.readUInt(2);\n\n  /**\n   * The number of line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfLinenumbers = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n}\n\nmodule.exports = SectionHeader;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StreamHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction StreamHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The file offset to the stream relative to the metadata header.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The size of the stream, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The name of the stream.\n   *\n   * @type {string}\n   */\n  this.name = reader.readString(0, true, 4);\n\n}\n\nmodule.exports = StreamHeader;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TablesHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction TablesHeader (reader) {\n\n  \"use strict\";\n\n  var i1, i2;\n\n  /**\n   * The first reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved1 = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(1);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(1);\n\n  /**\n   * The size of the indexes into the different streams.\n   *\n   * @type {number}\n   */\n  this.heapOffsetSizes = reader.readUInt(1);\n\n  /**\n   * The second reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved2 = reader.readUInt(1);\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {Array<number>}\n   */\n  this.maskValidArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {number}\n   */\n  this.maskValid = (i2 << 32) | i1;\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {Array<number>}\n   */\n  this.maskSortedArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {number}\n   */\n  this.maskSorted = (i2 << 32) | i1;\n\n  /**\n   * The file offset to the tables relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.tablesOffset = reader.getPosition();\n\n}\n\nmodule.exports = TablesHeader;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar BinaryParser = __webpack_require__(9);\nvar COFFHeader = __webpack_require__(13);\nvar DOSHeader = __webpack_require__(15);\nvar Extend = __webpack_require__(2);\nvar ImageAttributes = __webpack_require__(3);\nvar ParserException = __webpack_require__(5);\nvar OptionalHeader = __webpack_require__(18);\nvar ResourceDirectory = __webpack_require__(4);\nvar SectionHeader = __webpack_require__(19);\n\n/**\n * Class PEParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {BinaryParser}\n */\nfunction PEParser (path, data) {\n\n  \"use strict\";\n\n  // Invoke the parent constructor.\n  Extend(true, this, new BinaryParser(path, data));\n\n  /**\n   * The COFF header.\n   *\n   * @type {COFFHeader}\n   *\n   * @protected\n   */\n  this._coffHeader = null;\n\n  /**\n   * The DOS header.\n   *\n   * @type {DOSHeader}\n   *\n   * @protected\n   */\n  this._dosHeader = null;\n\n  /**\n   * The optional header.\n   *\n   * @type {OptionalHeader}\n   *\n   * @protected\n   */\n  this._optionalHeader = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *\n   * @protected\n   */\n  this._resourceDirectory = null;\n\n  /**\n   * The resource directory file offset.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._resourceDirectoryFileOffset = null;\n\n  /**\n   * The section headers.\n   *\n   * @type {Array<SectionHeader>}\n   *\n   * @protected\n   */\n  this._sectionHeaders = null;\n\n  /**\n   * Calculates the file offset for a relative virtual address.\n   *\n   * @param {number} rva\n   *   The relative virtual address.\n   *\n   * @return {number}\n   *   Returns a file offset.\n   */\n  this.getFileOffset = function (rva) {\n    // Determine which section the address belongs to and convert it to a file\n    // offset.\n    var sectionHeaders = this.readSectionHeaders();\n\n    for (var i = 0; i < sectionHeaders.length; i++) {\n      if ((rva >= sectionHeaders[i].virtualAddress) &&\n        (rva <= sectionHeaders[i].virtualAddress +\n        sectionHeaders[i].sizeOfRawData)) {\n        return sectionHeaders[i].pointerToRawData +\n          (rva - sectionHeaders[i].virtualAddress);\n      }\n    }\n\n    return -1;\n  };\n\n  /**\n   * Retrieves the resource directory file offset.\n   *\n   * @return {number}\n   *   Returns the file offset or -1 if the resource directory is empty.\n   */\n  this.getResourceDirectoryFileOffset = function() {\n    if (!this._resourceDirectoryFileOffset) {\n      // Locate the resource section in order to determine the file offset.\n      var sectionHeaders = this.readSectionHeaders();\n      var sectionHeader = null;\n\n      for (var i = 0; i < sectionHeaders.length; i++) {\n        if (sectionHeaders[i].name === '.rsrc') {\n          sectionHeader = sectionHeaders[i];\n          break;\n        }\n      }\n\n      if (sectionHeader) {\n        this._resourceDirectoryFileOffset = sectionHeader.pointerToRawData;\n      }\n      else {\n        this._resourceDirectoryFileOffset = -1;\n      }\n    }\n\n    return this._resourceDirectoryFileOffset;\n  };\n\n  /**\n   * Reads the COFF header.\n   *\n   * @return {COFFHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readCOFFHeader = function () {\n    if (!this._coffHeader) {\n      // Move the stream cursor to the position of the COFF header as specified\n      // by the DOS header.\n      this.setPosition(this.readDOSHeader().lfanew);\n\n      // Read the header and throw an exception if the header seems to be\n      // invalid.\n      this._coffHeader = new COFFHeader(this);\n\n      if (this._coffHeader.signature !== ImageAttributes.IMAGE_NT_SIGNATURE) {\n        throw new ParserException('Invalid COFF header');\n      }\n    }\n\n    return this._coffHeader;\n  };\n\n  /**\n   * Reads the DOS header.\n   *\n   * @return {DOSHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readDOSHeader = function () {\n    if (!this._dosHeader) {\n      // Reset the position to the beginning of the stream.\n      this.setPosition(0);\n\n      // Read the header from the buffer and throw an exception if the header is\n      // invalid.\n      this._dosHeader = new DOSHeader(this);\n\n      if (this._dosHeader.magic !== ImageAttributes.IMAGE_DOS_SIGNATURE) {\n        throw new ParserException('Invalid DOS header');\n      }\n    }\n\n    return this._dosHeader;\n  };\n\n  /**\n   * Reads the optional header.\n   *\n   * @return {OptionalHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readOptionalHeader = function () {\n    if ((!this._optionalHeader) &&\n      (this.readCOFFHeader().sizeOfOptionalHeader > 0)) {\n      // Move the stream cursor to the position of the optional header as\n      // specified by the DOS header and the size of the COFF header.\n      this.setPosition(this.readDOSHeader().lfanew + 24);\n\n      // Read the entire header including the data directories.\n      this._optionalHeader = new OptionalHeader(this);\n\n      if ((this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR32_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_ROM_OPTIONAL_HDR_MAGIC)) {\n        throw new ParserException('Invalid optional header');\n      }\n    }\n\n    return this._optionalHeader;\n  };\n\n  /**\n   * Reads the resource directory.\n   *\n   * @return {ResourceDirectory}\n   *   Returns the resource directory.\n   */\n  this.readResourceDirectory = function() {\n    if (this.getResourceDirectoryFileOffset() < 1) {\n      return this._resourceDirectory;\n    }\n\n    this.setPosition(this.getResourceDirectoryFileOffset());\n    this._resourceDirectory = new ResourceDirectory(this);\n    return this._resourceDirectory;\n  };\n\n  /**\n   * Reads the section headers.\n   *\n   * @return {Array<SectionHeader>}\n   *   Returns an array of section headers.\n   */\n  this.readSectionHeaders = function () {\n    if (!this._sectionHeaders) {\n      // Move the stream cursor to the position of the section headers.\n      this.setPosition(this.readDOSHeader().lfanew + 24 +\n        this.readCOFFHeader().sizeOfOptionalHeader);\n\n      // Read each of the section headers.\n      this._sectionHeaders = new Array(this.readCOFFHeader().numberOfSections);\n\n      for (var i = 0; i < this._sectionHeaders.length; i++) {\n        this._sectionHeaders[i] = new SectionHeader(this);\n      }\n    }\n\n    return this._sectionHeaders;\n  };\n\n}\n\nmodule.exports = PEParser;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyOSRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyOSRow;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyProcessorRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyProcessorRow;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class AssemblyRefOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefOSRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefOSRow;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class AssemblyRefProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefProcessorRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefProcessorRow;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key or token as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKeyOrToken = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = AssemblyRefRow;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The id of the hashing algorithm.\n   *\n   * @type {number}\n   */\n  this.hashAlgId = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKey = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n}\n\nmodule.exports = AssemblyRow;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ClassLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ClassLayoutRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The packing size.\n   *\n   * @type {number}\n   */\n  this.packingSize = reader.readUInt(2);\n\n  /**\n   * The class size.\n   *\n   * @type {number}\n   */\n  this.classSize = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = ClassLayoutRow;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ConstantRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The type.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(1) + reader.readUInt(1);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM,\n    TableIndexes.PROPERTY\n  ]);\n\n  /**\n   * The value as an index into the Blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = ConstantRow;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction CustomAttributeRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.FIELD,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_DEF,\n    TableIndexes.PARAM,\n    TableIndexes.INTERFACE_IMPL,\n    TableIndexes.MEMBER_REF,\n    TableIndexes.MODULE,\n    -1,\n    TableIndexes.PROPERTY,\n    TableIndexes.EVENT,\n    TableIndexes.STAND_ALONE_SIG,\n    TableIndexes.MODULE_REF,\n    TableIndexes.TYPE_SPEC,\n    TableIndexes.ASSEMBLY,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE,\n    TableIndexes.MANIFEST_RESOURCE\n  ]);\n\n  /**\n   * The reference to the type row.\n   *\n   * @type {RowReference}\n   */\n  this.type = new RowReference(reader, [\n    -1,\n    -1,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF,\n    -1\n  ]);\n\n  /**\n   * The value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = CustomAttributeRow;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class DeclSecurityRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction DeclSecurityRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The action.\n   *\n   * @type {number}\n   */\n  this.action = reader.readUInt(2);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.ASSEMBLY\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.permissionSet = reader.readBlobIndex();\n\n}\n\nmodule.exports = DeclSecurityRow;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class EventMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventMapRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first event row.\n   *\n   * @type {RowReference}\n   */\n  this.eventList = new RowReference(reader, [\n    TableIndexes.EVENT\n  ]);\n\n}\n\nmodule.exports = EventMapRow;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class EventRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The event flags.\n   *\n   * @type {number}\n   */\n  this.eventFlags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The event type as a reference to a TypeDef, TypeRef or TypeSpec row.\n   *\n   * @type {RowReference}\n   */\n  this.eventType = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = EventRow;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ExportedTypeRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ExportedTypeRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type definition id.\n   *\n   * @type {number}\n   */\n  this.typeDefId = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ExportedTypeRow;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class FieldLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldLayoutRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldLayoutRow;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class FieldMarshalRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldMarshalRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.nativeType = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldMarshalRow;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class FieldRVARow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRVARow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The relative virtual address of the initial value.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The field as a reference to a Field row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldRVARow;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FieldRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldRow;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FileRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FileRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = FileRow;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class GenericParamConstraintRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamConstraintRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the owner row.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.GENERIC_PARAM\n  ]);\n\n  /**\n   * The reference to the class row.\n   *\n   * @type {RowReference}\n   */\n  this.constraint = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = GenericParamConstraintRow;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class GenericParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The index of the generic parameter.\n   *\n   * @type {number}\n   */\n  this.number = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The reference to the owner of the generic parameter.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = GenericParamRow;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ImplMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ImplMapRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The mapping flags.\n   *\n   * @type {number}\n   */\n  this.mappingFlags = reader.readUInt(2);\n\n  /**\n   * The forwarded member as a reference to a Field or MethodDef row.\n   *\n   * @type {RowReference}\n   */\n  this.memberForwarded = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The import name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.importName = reader.readStringIndex();\n\n  /**\n   * The import scope as a reference to a ModuleRef row.\n   *\n   * @type {RowReference}\n   */\n  this.importScope = new RowReference(reader, [\n    TableIndexes.MODULE\n  ]);\n\n}\n\nmodule.exports = ImplMapRow;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class InterfaceImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction InterfaceImplRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the interface definition row.\n   *\n   * @type {RowReference}\n   */\n  this.interface = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = InterfaceImplRow;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class ManifestResourceRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ManifestResourceRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ManifestResourceRow;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class MemberRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MemberRefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.MODULE_REF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = MemberRefRow;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class MethodDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodDefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The relative virtual address.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The implementation flags.\n   *\n   * @type {number}\n   */\n  this.implFlags = reader.readUInt(2);\n\n  /**\n   * The method flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n  /**\n   * The reference to the param definition row.\n   *\n   * @type {RowReference}\n   */\n  this.paramList = new RowReference(reader, [\n    TableIndexes.PARAM\n  ]);\n\n}\n\nmodule.exports = MethodDefRow;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class MethodImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodImplRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the method body row.\n   *\n   * @type {RowReference}\n   */\n  this.methodBody = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n  /**\n   * The reference to the method declaration row.\n   *\n   * @type {RowReference}\n   */\n  this.methodDeclaration = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n}\n\nmodule.exports = MethodImplRow;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class MethodSemanticsRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodSemanticsRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The semantics.\n   *\n   * @type {number}\n   */\n  this.semantics = reader.readUInt(2);\n\n  /**\n   * The reference to the method row.\n   *\n   * @type {RowReference}\n   */\n  this.method = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The reference to the associated row.\n   *\n   * @type {RowReference}\n   */\n  this.association = new RowReference(reader, [\n    TableIndexes.EVENT,\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = MethodSemanticsRow;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ModuleRefRow;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The generation.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.generation = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The module id as an index into the GUID heap.\n   *\n   * @type {number}\n   */\n  this.mvid = reader.readGUIDIndex();\n\n  /**\n   * The encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encId = reader.readGUIDIndex();\n\n  /**\n   * The base encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encBaseId = reader.readGUIDIndex();\n\n}\n\nmodule.exports = ModuleRow;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class NestedClassRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction NestedClassRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the nested class information row.\n   *\n   * @type {RowReference}\n   */\n  this.nestedClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the enclosing class information row.\n   *\n   * @type {RowReference}\n   */\n  this.enclosingClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = NestedClassRow;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ParamRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The sequence.\n   *\n   * @type {number}\n   */\n  this.sequence = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ParamRow;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class PropertyMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyMapRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first property row.\n   *\n   * @type {RowReference}\n   */\n  this.propertyList = new RowReference(reader, [\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = PropertyMapRow;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class PropertyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The property flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.type = reader.readBlobIndex();\n\n}\n\nmodule.exports = PropertyRow;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StandAloneSigRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction StandAloneSigRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = StandAloneSigRow;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class TypeDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeDefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.extends = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The reference to the field information row.\n   *\n   * @type {RowReference}\n   */\n  this.fieldList = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n  /**\n   * The reference to the method information row.\n   *\n   * @type {RowReference}\n   */\n  this.methodList = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n}\n\nmodule.exports = TypeDefRow;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = __webpack_require__(1);\nvar TableIndexes = __webpack_require__(0);\n\n/**\n * Class TypeRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeRefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.resolutionScope = new RowReference(reader, [\n    TableIndexes.MODULE,\n    TableIndexes.MODULE_REF,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.TYPE_REF\n  ]);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n}\n\nmodule.exports = TypeRefRow;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TypeSpecRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeSpecRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = TypeSpecRow;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CILParser = __webpack_require__(7);\n\n/**\n * Class Main.\n *\n * @constructor\n * @final\n */\nfunction Main () {\n\n  \"use strict\";\n\n  /**\n   * Runs an executable.\n   *\n   * @param {string} path\n   *   The path.\n   */\n  this.run = function (path) {\n    console.log('#### This library is not yet able to run applications ####');\n    console.log('----------------------------------------------------------');\n    console.log('Dumping information about the executable:');\n\n    (new CILParser(path)).loadFile(function(reader) {\n      console.log(reader.readDOSHeader());\n      console.log(reader.readCOFFHeader());\n      console.log(reader.readOptionalHeader());\n      console.log(reader.readSectionHeaders());\n      console.log(reader.readResourceDirectory());\n      console.log(reader.readCORHeader());\n      console.log(reader.readMetadataHeader());\n      console.log(reader.readTablesHeader());\n      console.log(reader.readTables());\n      console.log(reader.readMethodHeaders());\n    }, function() {\n      console.log('Failed to load the file');\n    });\n  };\n\n}\n\nmodule.exports = new Main();\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// comla.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 60);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap aca47db9265e61be5842","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TableIndexes.\n *\n * @constructor\n * @struct\n */\nfunction TableIndexes () {\n\n  \"use strict\";\n\n  /**\n   * The table index for the 'Assembly' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY = 32;\n\n  /**\n   * The table index for the 'AssemblyOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_OS = 34;\n\n  /**\n   * The table index for the 'AssemblyProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_PROCESSOR = 33;\n\n  /**\n   * The table index for the 'AssemblyRef' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF = 35;\n\n  /**\n   * The table index for the 'AssemblyRefOS' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_OS = 37;\n\n  /**\n   * The table index for the 'AssemblyRefProcessor' table.\n   *\n   * @const {number}\n   */\n  this.ASSEMBLY_REF_PROCESSOR = 36;\n\n  /**\n   * The table index for the 'ClassLayout' table.\n   *\n   * @const {number}\n   */\n  this.CLASS_LAYOUT = 15;\n\n  /**\n   * The table index for the 'Constant' table.\n   *\n   * @const {number}\n   */\n  this.CONSTANT = 11;\n\n  /**\n   * The table index for the 'CustomAttribute' table.\n   *\n   * @const {number}\n   */\n  this.CUSTOM_ATTRIBUTE = 12;\n\n  /**\n   * The table index for the 'DeclSecurity' table.\n   *\n   * @const {number}\n   */\n  this.DECL_SECURITY = 14;\n\n  /**\n   * The table index for the 'Event' table.\n   *\n   * @const {number}\n   */\n  this.EVENT = 20;\n\n  /**\n   * The table index for the 'EventMap' table.\n   *\n   * @const {number}\n   */\n  this.EVENT_MAP = 18;\n\n  /**\n   * The table index for the 'ExportedType' table.\n   *\n   * @const {number}\n   */\n  this.EXPORTED_TYPE = 39;\n\n  /**\n   * The table index for the 'Field' table.\n   *\n   * @const {number}\n   */\n  this.FIELD = 4;\n\n  /**\n   * The table index for the 'FieldLayout' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_LAYOUT = 16;\n\n  /**\n   * The table index for the 'FieldMarshal' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_MARSHAL = 13;\n\n  /**\n   * The table index for the 'FieldRVA' table.\n   *\n   * @const {number}\n   */\n  this.FIELD_RVA = 29;\n\n  /**\n   * The table index for the 'File' table.\n   *\n   * @const {number}\n   */\n  this.FILE = 38;\n\n  /**\n   * The table index for the 'GenericParam' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM = 42;\n\n  /**\n   * The table index for the 'GenericParamConstraint' table.\n   *\n   * @const {number}\n   */\n  this.GENERIC_PARAM_CONSTRAINT = 44;\n\n  /**\n   * The table index for the 'ImplMap' table.\n   *\n   * @const {number}\n   */\n  this.IMPL_MAP = 28;\n\n  /**\n   * The table index for the 'InterfaceImpl' table.\n   *\n   * @const {number}\n   */\n  this.INTERFACE_IMPL = 9;\n\n  /**\n   * The table index for the 'ManifestResource' table.\n   *\n   * @const {number}\n   */\n  this.MANIFEST_RESOURCE = 40;\n\n  /**\n   * The table index for the 'MemberRef' table.\n   *\n   * @const {number}\n   */\n  this.MEMBER_REF = 10;\n\n  /**\n   * The table index for the 'MethodDef' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_DEF = 6;\n\n  /**\n   * The table index for the 'MethodImpl' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_IMPL = 25;\n\n  /**\n   * The table index for the 'MethodSemantics' table.\n   *\n   * @const {number}\n   */\n  this.METHOD_SEMANTICS = 24;\n\n  /**\n   * The table index for the 'Module' table.\n   *\n   * @const {number}\n   */\n  this.MODULE = 0;\n\n  /**\n   * The table index for the 'ModuleRef' table.\n   *\n   * @const {number}\n   */\n  this.MODULE_REF = 26;\n\n  /**\n   * The table index for the 'NestedClass' table.\n   *\n   * @const {number}\n   */\n  this.NESTED_CLASS = 41;\n\n  /**\n   * The table index for the 'Param' table.\n   *\n   * @const {number}\n   */\n  this.PARAM = 8;\n\n  /**\n   * The table index for the 'Property' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY = 23;\n\n  /**\n   * The table index for the 'PropertyMap' table.\n   *\n   * @const {number}\n   */\n  this.PROPERTY_MAP = 21;\n\n  /**\n   * The table index for the 'StandAloneSig' table.\n   *\n   * @const {number}\n   */\n  this.STAND_ALONE_SIG = 17;\n\n  /**\n   * The table index for the 'TypeRef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_REF = 1;\n\n  /**\n   * The table index for the 'TypeDef' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_DEF = 2;\n\n  /**\n   * The table index for the 'TypeSpec' table.\n   *\n   * @const {number}\n   */\n  this.TYPE_SPEC = 27;\n\n}\n\nmodule.exports = new TableIndexes();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Constant/TableIndexes.js\n// module id = 0\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class RowReference.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n * @param {Array<number>} tableIndexes\n *   The table indexes.\n *\n * @constructor\n * @struct\n */\nfunction RowReference (reader, tableIndexes) {\n\n  \"use strict\";\n\n  /**\n   * The table index.\n   *\n   * @type {number}\n   */\n  this.tableIndex = -1;\n\n  /**\n   * The row index.\n   *\n   * @type {number}\n   */\n  this.rowIndex = -1;\n\n  // Initialize the object.\n  (function (object, reader, tableIndexes) {\n\n    var bc = 1, bv, size = 2, tables = reader.readTables();\n\n    // Determine how many bits are required to represent the table index.\n    while ((bv = Math.pow(2, bc - 1)) < tableIndexes.length) {\n      bc++;\n    }\n\n    // Determine if the index is represented as a 16-bit or 32-bit integer.\n    for (var i = 0; i < tableIndexes.length; i++) {\n      if ((tables[tableIndexes[i]]) &&\n        (tables[tableIndexes[i]].length > 0xFFFF)) {\n        size = 4;\n        break;\n      }\n    }\n\n    // Read the integer that contains both the table index and the row index.\n    var tableRowIndex = reader.readUInt(size);\n\n    // Split the integer into two separate values and update the properties.\n    object.tableIndex = tableIndexes[tableRowIndex & (bv - 1)];\n    object.rowIndex = tableRowIndex >> bc;\n\n  }(this, reader, tableIndexes));\n\n}\n\nmodule.exports = RowReference;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Reference/RowReference.js\n// module id = 1\n// module chunks = 0 1","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extend/index.js\n// module id = 2\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ImageAttributes.\n *\n * @constructor\n * @struct\n */\nfunction ImageAttributes () {\n\n  \"use strict\";\n\n  /**\n   * The DOS header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_DOS_SIGNATURE = 0x5a4d;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\n\n  /**\n   * The file is an executable image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\n\n  /**\n   * The NT header signature.\n   *\n   * @const {number}\n   */\n  this.IMAGE_NT_SIGNATURE = 0x4550;\n\n  /**\n   * The file is a ROM image.\n   *\n   * @const {number}\n   */\n  this.IMAGE_ROM_OPTIONAL_HDR_MAGIC = 0x107;\n\n}\n\nmodule.exports = new ImageAttributes();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Constant/ImageAttributes.js\n// module id = 3\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDirectory.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectory (reader) {\n\n  \"use strict\";\n\n  /**\n   * The characteristics.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n  /**\n   * The time/date stamp describing the creation time of the resource.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The major version number.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use names and that follow this structure.\n   *\n   * @type {number}\n   */\n  this.numberOfNamedEntries = reader.readUInt(2);\n\n  /**\n   * The number of array elements that use integer IDs, and which follow this\n   * structure.\n   *\n   * @type {number}\n   */\n  this.numberOfIdEntries = reader.readUInt(2);\n\n  /**\n   * The resource directory entries.\n   *\n   * @type {Array<ResourceDirectoryEntry>}\n   */\n  this.entries = new Array(this.numberOfIdEntries + this.numberOfNamedEntries);\n\n  // Parse the resource directory entries.\n  var position = reader.getPosition();\n\n  for (var i = 0; i < this.entries.length; i++) {\n    reader.setPosition(position + (i * 8));\n    this.entries[i] = new ResourceDirectoryEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectory;\n\nvar ResourceDirectoryEntry = require('./../Entry/ResourceDirectoryEntry');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Directory/ResourceDirectory.js\n// module id = 4\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CustomException = require('./../../Exception/CustomException');\nvar Extend = require('extend');\n\n/**\n * Class ParserException.\n *\n * @param {string} message\n *   The message.\n *\n * @constructor\n * @extends {CustomException}\n */\nfunction ParserException (message) {\n\n  \"use strict\";\n\n  // Invoke the parent constructor.\n  Extend(true, this, new CustomException(message, 'ParserException'));\n\n}\n\nmodule.exports = ParserException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Exception/ParserException.js\n// module id = 5\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DataDirectoryHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DataDirectoryHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The relative virtual address of the table.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the table, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n}\n\nmodule.exports = DataDirectoryHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/DataDirectoryHeader.js\n// module id = 6\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar AssemblyOSRow = require('./Row/AssemblyOSRow');\nvar AssemblyProcessorRow = require('./Row/AssemblyProcessorRow');\nvar AssemblyRefOSRow = require('./Row/AssemblyRefOSRow');\nvar AssemblyRefProcessorRow = require('./Row/AssemblyRefProcessorRow');\nvar AssemblyRefRow = require('./Row/AssemblyRefRow');\nvar AssemblyRow = require('./Row/AssemblyRow');\nvar ClassLayoutRow = require('./Row/ClassLayoutRow');\nvar ConstantRow = require('./Row/ConstantRow');\nvar CORHeader = require('./Header/CORHeader');\nvar CustomAttributeRow = require('./Row/CustomAttributeRow');\nvar DeclSecurityRow = require('./Row/DeclSecurityRow');\nvar EventMapRow = require('./Row/EventMapRow');\nvar EventRow = require('./Row/EventRow');\nvar ExportedTypeRow = require('./Row/ExportedTypeRow');\nvar Extend = require('extend');\nvar FieldRow = require('./Row/FieldRow');\nvar FieldRVARow = require('./Row/FieldRVARow');\nvar FieldLayoutRow = require('./Row/FieldLayoutRow');\nvar FieldMarshalRow = require('./Row/FieldMarshalRow');\nvar FileRow = require('./Row/FileRow');\nvar GenericParamRow = require('./Row/GenericParamRow');\nvar GenericParamConstraintRow = require('./Row/GenericParamConstraintRow');\nvar ImplMapRow = require('./Row/ImplMapRow');\nvar InterfaceImplRow = require('./Row/InterfaceImplRow');\nvar ParserException = require('./Exception/ParserException');\nvar ManifestResourceRow = require('./Row/ManifestResourceRow');\nvar MetadataHeader = require('./Header/MetadataHeader');\nvar MemberRefRow = require('./Row/MemberRefRow');\nvar NestedClassRow = require('./Row/NestedClassRow');\nvar MethodDefRow = require('./Row/MethodDefRow');\nvar MethodHeader = require('./Header/MethodHeader');\nvar MethodImplRow = require('./Row/MethodImplRow');\nvar MethodSemanticsRow = require('./Row/MethodSemanticsRow');\nvar ModuleRefRow = require('./Row/ModuleRefRow');\nvar ModuleRow = require('./Row/ModuleRow');\nvar ParamRow = require('./Row/ParamRow');\nvar PEParser = require('./PEParser');\nvar PropertyMapRow = require('./Row/PropertyMapRow');\nvar PropertyRow = require('./Row/PropertyRow');\nvar StandAloneSigRow = require('./Row/StandAloneSigRow');\nvar TableIndexes = require('./Constant/TableIndexes');\nvar TablesHeader = require('./Header/TablesHeader');\nvar TypeDefRow = require('./Row/TypeDefRow');\nvar TypeRefRow = require('./Row/TypeRefRow');\nvar TypeSpecRow = require('./Row/TypeSpecRow');\n\n/**\n * Class CILParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {PEParser}\n */\nfunction CILParser (path, data) {\n\n  \"use strict\";\n\n  // Invoke the parent constructor.\n  Extend(true, this, new PEParser(path, data));\n\n  /**\n   * The COR header.\n   *\n   * @type {CORHeader}\n   *\n   * @protected\n   */\n  this._corHeader = null;\n\n  /**\n   * The metadata header.\n   *\n   * @type {MetadataHeader}\n   *\n   * @protected\n   */\n  this._metadataHeader = null;\n\n  /**\n   * The method headers.\n   *\n   * @type {Array<MethodHeader>}\n   *\n   * @protected\n   */\n  this._methodHeaders = null;\n\n  /**\n   * The metadata tables.\n   *\n   * @type {Array<Object>}\n   *\n   * @protected\n   */\n  this._tables = null;\n\n  /**\n   * The tables header.\n   *\n   * @type {TablesHeader}\n   *\n   * @protected\n   */\n  this._tablesHeader = null;\n\n  /**\n   * Retrieves a stream header.\n   *\n   * @param {string} name\n   *   The stream name.\n   *\n   * @return {StreamHeader|null}\n   *   Returns the stream header or NULL if not found.\n   */\n  this.getStreamHeader = function (name) {\n    var streamHeaders = this.readMetadataHeader().streamHeaders;\n\n    for (var i = 0; i < streamHeaders.length; i++) {\n      if (streamHeaders[i].name === name) {\n        return streamHeaders[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Reads a blob index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readBlobIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x04) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the COR header.\n   *\n   * @return {CORHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readCORHeader = function () {\n    if (!this._corHeader) {\n      // Verify that the CLR (formerly COM) data directory is available.\n      if ((this.readOptionalHeader().dataDirectory.length < 15) ||\n        (this.readOptionalHeader().dataDirectory[14].size < 1)) {\n        throw new ParserException('The CLR data directory is missing');\n      }\n\n      // Move the stream cursor to the position of the COR header.\n      this.setPosition(this.getFileOffset(\n        this.readOptionalHeader().dataDirectory[14].virtualAddress));\n\n      // Read the the header and throw an exception if it is invalid.\n      this._corHeader = new CORHeader(this);\n\n      if (this._corHeader.sizeOfHeader !== 72) {\n        throw new ParserException('Invalid COR header');\n      }\n    }\n\n    return this._corHeader;\n  };\n\n  /**\n   * Reads a GUID from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a 128-bit unique identifier.\n   */\n  this.readGUIDFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#GUID');\n\n    if (!streamHeader) {\n      throw new ParserException('The GUID stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the GUID from the stream and format it before returning it.\n    var guid = '', s = this.readString(16);\n\n    for (var i = 0; i < s.length; i++) {\n      if ((i === 4) || (i === 6) || (i === 8) || (i === 10)) {\n        guid += '-';\n      }\n\n      var hex = s.charCodeAt(i).toString(16);\n      guid += (hex.length === 2) ? hex : '0' + hex;\n    }\n\n    return guid;\n  };\n\n  /**\n   * Reads a GUID index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readGUIDIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x02) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the CLR metadata header.\n   *\n   * @return {MetadataHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is missing or is invalid.\n   */\n  this.readMetadataHeader = function () {\n    if (!this._metadataHeader) {\n      // Verify that the metadata directory is available.\n      if (this.readCORHeader().metadata.size < 1) {\n        throw new ParserException('The metadata header is missing');\n      }\n\n      // Move the stream cursor to the position of the metadata header.\n      this.setPosition(this.getFileOffset(\n        this.readCORHeader().metadata.virtualAddress));\n\n      // Read the header and throw an exception if it is invalid.\n      this._metadataHeader = new MetadataHeader(this);\n\n      if (this._metadataHeader.signature !== 0x424A5342) {\n        throw new ParserException('Invalid metadata header');\n      }\n    }\n\n    return this._metadataHeader;\n  };\n\n  /**\n   * Reads the CLR method headers.\n   *\n   * @return {Array<MethodHeader>}\n   *   Returns an array of headers.\n   */\n  this.readMethodHeaders = function () {\n    if (!this._methodHeaders) {\n      var tables = this.readTables();\n\n      // Initialize the array of method headers.\n      this._methodHeaders = new Array(tables[TableIndexes.METHOD_DEF].length);\n\n      // Parse the method headers referenced by the MethodDef table.\n      for (var i = 0; i < tables[TableIndexes.METHOD_DEF].length; i++) {\n        this.setPosition(this.getFileOffset(tables[TableIndexes.METHOD_DEF][i]\n          .rva));\n        this._methodHeaders[i] = new MethodHeader(this);\n      }\n    }\n\n    return this._methodHeaders;\n  };\n\n  /**\n   * Reads the IL instructions for a method.\n   *\n   * @param {MethodHeader} header\n   *   The method header.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readMethodInstructions = function (header) {\n    this.setPosition(header.codeOffset);\n    return this.readBytes(header.codeSize);\n  };\n\n  /**\n   * Reads a string from the heap.\n   *\n   * @param {number} index\n   *   The index into the heap.\n   *\n   * @return {string}\n   *   Returns a UTF-8 encoded string.\n   */\n  this.readStringFromHeap = function (index) {\n    // Locate the table stream and throw an exception if it is missing.\n    var streamHeader = this.getStreamHeader('#Strings');\n\n    if (!streamHeader) {\n      throw new ParserException('The string stream is missing');\n    }\n\n    // Move the stream cursor to the position of the string.\n    this.setPosition(this.readMetadataHeader().offset + streamHeader.offset +\n      index);\n\n    // Read the NULL terminated string.\n    return decodeURIComponent(encodeURIComponent(this.readString(0, true)));\n  };\n\n  /**\n   * Reads a string index from the stream.\n   *\n   * @return {number}\n   *   Returns an index.\n   */\n  this.readStringIndex = function () {\n    if ((this.readTablesHeader().heapOffsetSizes & 0x01) !== 0) {\n      return this.readUInt(4);\n    }\n    else {\n      return this.readUInt(2);\n    }\n  };\n\n  /**\n   * Reads the metadata tables.\n   *\n   * @return {Object}\n   *   Returns an array containing the tables.\n   */\n  this.readTables = function () {\n    if (!this._tables) {\n      // Ensure that the tables header has been read.\n      var header = this.readTablesHeader();\n\n      // Move the buffer cursor to the position of the tables.\n      this.setPosition(header.tablesOffset);\n\n      // Read the row count for each of the tables as we cannot read the rows\n      // before this has been done.\n      this._tables = [];\n\n      for (var i = 0; i < 64; i++) {\n        if (((i < 32) && (header.maskValidArray[0] & Math.pow(2, i)) === 0) ||\n          ((i >= 32) && (header.maskValidArray[1] & Math.pow(2, i - 32)) ===\n          0)) {\n          continue;\n        }\n\n        this._tables[i] = new Array(this.readUInt(4));\n      }\n\n      // Now that the row counts have been read, go ahead reading all the rows\n      // one table at a time.\n      for (i = 0; i < 64; i++) {\n        if (!this._tables[i]) {\n          continue;\n        }\n\n        var rowClass = this._getTableRowClass(i);\n        var rowCount = this._tables[i].length;\n\n        for (var r = 0; r < rowCount; r++) {\n          this._tables[i][r] = new rowClass(this);\n        }\n      }\n    }\n\n    return this._tables;\n  };\n\n  /**\n   * Reads the metadata tables header.\n   *\n   * @return {TablesHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the table stream is missing or if the header is invalid.\n   */\n  this.readTablesHeader = function () {\n    if (!this._tablesHeader) {\n      // Locate the table stream and throw an exception if it is missing.\n      var streamHeader = this.getStreamHeader('#~');\n\n      if (!streamHeader) {\n        throw new ParserException('The stream for the tables is missing');\n      }\n\n      // Move the stream cursor to the position of the tables header.\n      this.setPosition(this.readMetadataHeader().offset + streamHeader.offset);\n\n      // Read the header and throw an exception if it is invalid.\n      this._tablesHeader = new TablesHeader(this);\n\n      if ((this._tablesHeader.reserved1 !== 0) ||\n        (this._tablesHeader.reserved2 !== 1)) {\n        throw new ParserException('Invalid tables header');\n      }\n    }\n\n    return this._tablesHeader;\n  };\n\n  /**\n   * Retrieves the constructor for a table row.\n   *\n   * @param {number} tableIndex\n   *   The table index.\n   *\n   * @return {Function}\n   *   Returns a constructor.\n   *\n   * @protected\n   */\n  this._getTableRowClass = function (tableIndex) {\n    switch (tableIndex) {\n      case TableIndexes.ASSEMBLY:\n        return AssemblyRow;\n\n      case TableIndexes.ASSEMBLY_OS:\n        return AssemblyOSRow;\n\n      case TableIndexes.ASSEMBLY_PROCESSOR:\n        return AssemblyProcessorRow;\n\n      case TableIndexes.ASSEMBLY_REF:\n        return AssemblyRefRow;\n\n      case TableIndexes.ASSEMBLY_REF_OS:\n        return AssemblyRefOSRow;\n\n      case TableIndexes.ASSEMBLY_REF_PROCESSOR:\n        return AssemblyRefProcessorRow;\n\n      case TableIndexes.CLASS_LAYOUT:\n        return ClassLayoutRow;\n\n      case TableIndexes.CONSTANT:\n        return ConstantRow;\n\n      case TableIndexes.CUSTOM_ATTRIBUTE:\n        return CustomAttributeRow;\n\n      case TableIndexes.DECL_SECURITY:\n        return DeclSecurityRow;\n\n      case TableIndexes.EVENT:\n        return EventRow;\n\n      case TableIndexes.EVENT_MAP:\n        return EventMapRow;\n\n      case TableIndexes.EXPORTED_TYPE:\n        return ExportedTypeRow;\n\n      case TableIndexes.FIELD:\n        return FieldRow;\n\n      case TableIndexes.FIELD_LAYOUT:\n        return FieldLayoutRow;\n\n      case TableIndexes.FIELD_MARSHAL:\n        return FieldMarshalRow;\n\n      case TableIndexes.FIELD_RVA:\n        return FieldRVARow;\n\n      case TableIndexes.FILE:\n        return FileRow;\n\n      case TableIndexes.GENERIC_PARAM:\n        return GenericParamRow;\n\n      case TableIndexes.GENERIC_PARAM_CONSTRAINT:\n        return GenericParamConstraintRow;\n\n      case TableIndexes.IMPL_MAP:\n        return ImplMapRow;\n\n      case TableIndexes.INTERFACE_IMPL:\n        return InterfaceImplRow;\n\n      case TableIndexes.MANIFEST_RESOURCE:\n        return ManifestResourceRow;\n\n      case TableIndexes.MEMBER_REF:\n        return MemberRefRow;\n\n      case TableIndexes.NESTED_CLASS:\n        return NestedClassRow;\n\n      case TableIndexes.METHOD_DEF:\n        return MethodDefRow;\n\n      case TableIndexes.METHOD_IMPL:\n        return MethodImplRow;\n\n      case TableIndexes.METHOD_SEMANTICS:\n        return MethodSemanticsRow;\n\n      case TableIndexes.MODULE:\n        return ModuleRow;\n\n      case TableIndexes.MODULE_REF:\n        return ModuleRefRow;\n\n      case TableIndexes.PARAM:\n        return ParamRow;\n\n      case TableIndexes.PROPERTY:\n        return PropertyRow;\n\n      case TableIndexes.PROPERTY_MAP:\n        return PropertyMapRow;\n\n      case TableIndexes.STAND_ALONE_SIG:\n        return StandAloneSigRow;\n\n      case TableIndexes.TYPE_DEF:\n        return TypeDefRow;\n\n      case TableIndexes.TYPE_REF:\n        return TypeRefRow;\n\n      case TableIndexes.TYPE_SPEC:\n        return TypeSpecRow;\n\n      default:\n        throw new ParserException('Unsupported metadata table at index ' +\n          tableIndex);\n    }\n  };\n\n}\n\nmodule.exports = CILParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/CILParser.js\n// module id = 7\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class CustomException.\n *\n * @param {string} message\n *   The message.\n * @param {string} type\n *   The type of exception.\n *\n * @constructor\n */\nfunction CustomException (message, type) {\n\n  \"use strict\";\n\n  /**\n   * The exception message.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._message = message;\n\n  /**\n   * The exception type.\n   *\n   * @type {string}\n   *\n   * @private\n   */\n  this._type = (typeof type !== 'undefined') ? type : 'CustomException';\n\n  /**\n   * Retrieves the exception message.\n   *\n   * @return {string}\n   */\n  this.getMessage = function () {\n    return this._message;\n  };\n\n  /**\n   * Retrieves the exception type.\n   *\n   * @return {string}\n   */\n  this.getType = function () {\n    return this._type;\n  };\n\n  /**\n   * Converts the exception to a string.\n   *\n   * @return {string}\n   */\n  this.toString = function () {\n    return this.getMessage();\n  };\n\n}\n\nmodule.exports = CustomException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Exception/CustomException.js\n// module id = 8\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class BinaryParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n */\nfunction BinaryParser (path, data) {\n\n  \"use strict\";\n\n  /**\n   * The file contents.\n   *\n   * @type {ArrayBuffer}\n   *\n   * @protected\n   */\n  this._data = (typeof data !== 'undefined') ? new Uint8Array(data) : null;\n\n  /**\n   * The file path.\n   *\n   * @type {string}\n   *\n   * @protected\n   */\n  this._path = path;\n\n  /**\n   * The file position.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._position = 0;\n\n  /**\n   * Retrieves the file path.\n   *\n   * @return {string}\n   *   Returns a path.\n   */\n  this.getPath = function () {\n    return this._path;\n  };\n\n  /**\n   * Retrieves the buffer position.\n   *\n   * @return {number}\n   *   Returns the buffer position.\n   */\n  this.getPosition = function () {\n    return this._position;\n  };\n\n  /**\n   * Retrieves the buffer size.\n   *\n   * @return {number}\n   *   Returns the buffer size.\n   */\n  this.getSize = function () {\n    return this._data.byteLength;\n  };\n\n  /**\n   * Loads the file contents.\n   *\n   * @param {Function} success\n   *   The success callback.\n   * @param {Function} error\n   *   The error callback.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   */\n  this.loadFile = function (success, error) {\n    var request = new XMLHttpRequest();\n    request.open('GET', this.getPath(), true);\n    request.responseType = 'arraybuffer';\n    request.onreadystatechange = function(reader) {\n      return function() {\n        if (request.readyState === XMLHttpRequest.DONE) {\n          if (request.status === 200) {\n            // Store the data as an UInt8 array and reset the position.\n            reader._data = new Uint8Array(request.response);\n            reader._position = 0;\n\n            // Invoke the success callback in order for the invoker to proceed.\n            success(reader);\n          }\n          else {\n            error(reader);\n          }\n        }\n      };\n    }(this);\n    request.send(null);\n    return this;\n  };\n\n  /**\n   * Reads the next bytes from the buffer.\n   *\n   * @param {number} count\n   *   The number of bytes to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of bytes.\n   */\n  this.readBytes = function (count) {\n    var bytes = [];\n\n    for (var i = 0; i < count; i++) {\n      if (this._position >= this.getSize()) {\n        break;\n      }\n\n      bytes.push(this._data[this._position++]);\n    }\n\n    return bytes;\n  };\n\n  /**\n   * Reads an ASCII string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a NULL\n   *   terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a NULL terminator after the string has been read in\n   *   which case the string will be terminated.\n   * @param {number} boundary\n   *   The string boundary in bytes.\n   *\n   * @return {string}\n   *   Returns an ASCII string.\n   */\n  this.readString = function (length, terminate, boundary) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (((!boundary) || (s.length % boundary === 0)) &&\n        (s.endsWith(\"\\0\"))) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(\"\\0\")) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return s;\n  };\n\n  /**\n   * Reads the next unsigned integer from the buffer.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   *\n   * @return {number|null}\n   *   Returns the integer or NULL if the end is reached.\n   */\n  this.readUInt = function (size) {\n    var bytes = this.readBytes(size);\n    var integer = 0;\n\n    if (bytes.length != size) {\n      return null;\n    }\n\n    for (var i = size - 1; i > -1; i--) {\n      integer |= (bytes[i] << (8 * i));\n    }\n\n    return integer;\n  };\n\n  /**\n   * Reads the next unsigned integers.\n   *\n   * @param {number} size\n   *   The integer size in bytes.\n   * @param {number} count\n   *   The number of integers to read.\n   *\n   * @return {Array<number>}\n   *   Returns an array of integers.\n   */\n  this.readUIntArray = function (size, count) {\n    var integers = [];\n\n    for (var i = 0; i < count; i++) {\n      var integer = this.readUInt(size);\n\n      if (integer === null) {\n        break;\n      }\n\n      integers.push(integer);\n    }\n\n    return integers;\n  };\n\n  /**\n   * Reads a UTF-8 string from the buffer.\n   *\n   * @param {number} length\n   *   The length of the string. Specify 0 to have the function look for a\n   *   string terminator.\n   * @param {boolean} terminate\n   *   Whether to look for a string terminator after the string has been read in\n   *   which case the string will always be terminated.\n   *\n   * @return {string}\n   *   Returns a UTF-8 string.\n   */\n  this.readUTF8String = function (length, terminate) {\n    var i, s = '';\n\n    while ((i = this.readUInt(1)) !== null) {\n      s += String.fromCharCode(i);\n\n      if (length > 0) {\n        if (s.length === length) {\n          break;\n        }\n      }\n      else if (s.endsWith(\"\\0\\0\")) {\n        break;\n      }\n    }\n\n    if ((terminate) && ((i = s.indexOf(\"\\0\\0\")) > -1)) {\n      s = s.substring(0, i);\n    }\n\n    return decodeURI(encodeURIComponent(s));\n  };\n\n  /**\n   * Sets the file path.\n   *\n   * @param {string} path\n   *   The file path.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPath = function (path) {\n    this._path = path;\n    return this;\n  };\n\n  /**\n   * Sets the buffer position.\n   *\n   * @param {number} position\n   *   The new position.\n   *\n   * @return {BinaryParser}\n   *   Returns this instance.\n   *\n   * @modifies {this}\n   */\n  this.setPosition = function (position) {\n    this._position = position;\n    return this;\n  };\n\n}\n\nmodule.exports = BinaryParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/BinaryParser.js\n// module id = 9\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class MethodFlags.\n *\n * @constructor\n * @struct\n */\nfunction MethodFlags () {\n\n  \"use strict\";\n\n  /**\n   * The fat format flag.\n   *\n   * @const {number}\n   */\n  this.FAT_FORMAT = 0x3;\n\n  /**\n   * The initialize locals flag.\n   *\n   * @const {number}\n   */\n  this.INITIALIZE_LOCALS = 0x10;\n\n  /**\n   * The more sections flag.\n   *\n   * @const {number}\n   */\n  this.MORE_SECTIONS = 0x8;\n\n  /**\n   * The tiny format flag.\n   *\n   * @const {number}\n   */\n  this.TINY_FORMAT = 0x2;\n\n}\n\nmodule.exports = new MethodFlags();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Constant/MethodFlags.js\n// module id = 10\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ResourceDataEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDataEntry (reader) {\n\n  \"use strict\";\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.getFileOffset(reader.readUInt(4));\n\n  /**\n   * The data size.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The code page.\n   *\n   * @type {number}\n   */\n  this.codePage = reader.readUInt(4);\n\n  /**\n   * The reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n}\n\nmodule.exports = ResourceDataEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Entry/ResourceDataEntry.js\n// module id = 11\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar ResourceDataEntry = require('./ResourceDataEntry');\nvar ResourceDirectory = require('./../Directory/ResourceDirectory');\n\n/**\n * Class ResourceDirectoryEntry.\n *\n * @param {PEParser} reader\n *   The PE reader.\n *\n * @constructor\n * @struct\n */\nfunction ResourceDirectoryEntry (reader) {\n\n  \"use strict\";\n\n  /**\n   * The name.\n   *\n   * @type {number}\n   */\n  this.name = reader.readUInt(4);\n\n  /**\n   * The file offset to the raw data.\n   *\n   * @type {number}\n   */\n  this.offsetToData = reader.readUInt(4);\n\n  /**\n   * The data entry.\n   *\n   * @type {ResourceDataEntry}\n   */\n  this.data = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *   The resource directory or NULL if this entry does not point to one.\n   */\n  this.directory = null;\n\n  // Read either a resource directory or a data entry.\n  if (this.offsetToData >>> 31 === 1) {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      (this.offsetToData << 1 >>> 1);\n    reader.setPosition(this.offsetToData);\n    this.directory = new ResourceDirectory(reader);\n  }\n  else {\n    this.offsetToData = reader.getResourceDirectoryFileOffset() +\n      this.offsetToData;\n    reader.setPosition(this.offsetToData);\n    this.data = new ResourceDataEntry(reader);\n  }\n\n}\n\nmodule.exports = ResourceDirectoryEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Entry/ResourceDirectoryEntry.js\n// module id = 12\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class COFFHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction COFFHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The signature.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The architecture type of the computer.\n   *\n   * @type {number}\n   */\n  this.machine = reader.readUInt(2);\n\n  /**\n   * The number of sections.\n   *\n   * @type {number}\n   */\n  this.numberOfSections = reader.readUInt(2);\n\n  /**\n   * The low 32 bits of the time stamp of the image.\n   *\n   * @type {number}\n   */\n  this.timeDateStamp = reader.readUInt(4);\n\n  /**\n   * The offset of the symbol table, in bytes, or zero if no COFF symbol table\n   * exists.\n   *\n   * @type {number}\n   */\n  this.pointerToSymbolTable = reader.readUInt(4);\n\n  /**\n   * The number of symbols in the symbol table.\n   *\n   * @type {number}\n   */\n  this.numberOfSymbols = reader.readUInt(4);\n\n  /**\n   * The size of the optional header, in bytes. This value should be 0 for\n   * object files.\n   *\n   * @type {number}\n   */\n  this.sizeOfOptionalHeader = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image. This member can be one or more of the\n   * following values.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(2);\n\n}\n\nmodule.exports = COFFHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/COFFHeader.js\n// module id = 13\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = require('./DataDirectoryHeader');\n\n/**\n * Class CORHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction CORHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The size of the header, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeader = reader.readUInt(4);\n\n  /**\n   * The major runtime version.\n   *\n   * @type {number}\n   */\n  this.majorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The minor runtime version.\n   *\n   * @type {number}\n   */\n  this.minorRuntimeVersion = reader.readUInt(2);\n\n  /**\n   * The metadata directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.metadata = new DataDirectoryHeader(reader);\n\n  /**\n   * The runtime flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The entry point address or token.\n   *\n   * @type {number}\n   */\n  this.entryPoint = reader.readUInt(4);\n\n  /**\n   * The resources directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.resources = new DataDirectoryHeader(reader);\n\n  /**\n   * The strong name signature directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.strongNameSignature = new DataDirectoryHeader(reader);\n\n  /**\n   * The code manager table directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.codeManagerTable = new DataDirectoryHeader(reader);\n\n  /**\n   * The VTable fix-ups directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.vTableFixups = new DataDirectoryHeader(reader);\n\n  /**\n   * The exported address table jumps directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.exportAddressTableJumps = new DataDirectoryHeader(reader);\n\n  /**\n   * The managed native header directory header.\n   *\n   * @type {DataDirectoryHeader}\n   */\n  this.managedNativeHeader = new DataDirectoryHeader(reader);\n\n}\n\nmodule.exports = CORHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/CORHeader.js\n// module id = 14\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class DOSHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction DOSHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The magic number.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The number of bytes on the last page in the file.\n   *\n   * @type {number}\n   */\n  this.cblp = reader.readUInt(2);\n\n  /**\n   * The number of pages in the file.\n   *\n   * @type {number}\n   */\n  this.cp = reader.readUInt(2);\n\n  /**\n   * The number of relocations.\n   *\n   * @type {number}\n   */\n  this.crlc = reader.readUInt(2);\n\n  /**\n   * The size of the header in paragraphs.\n   *\n   * @type {number}\n   */\n  this.cparhdr = reader.readUInt(2);\n\n  /**\n   * The minimum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.minAlloc = reader.readUInt(2);\n\n  /**\n   * The maximum number of extra paragraphs which are needed.\n   *\n   * @type {number}\n   */\n  this.maxAlloc = reader.readUInt(2);\n\n  /**\n   * The initial (relative) SS value.\n   *\n   * @type {number}\n   */\n  this.ss = reader.readUInt(2);\n\n  /**\n   * The initial SP value.\n   *\n   * @type {number}\n   */\n  this.sp = reader.readUInt(2);\n\n  /**\n   * The checksum.\n   *\n   * @type {number}\n   */\n  this.csum = reader.readUInt(2);\n\n  /**\n   * The initial IP value.\n   *\n   * @type {number}\n   */\n  this.ip = reader.readUInt(2);\n\n  /**\n   * The initial (relative) CS value.\n   *\n   * @type {number}\n   */\n  this.cs = reader.readUInt(2);\n\n  /**\n   * The file address of the relocation table.\n   *\n   * @type {number}\n   */\n  this.lfarlc = reader.readUInt(2);\n\n  /**\n   * The overlay number.\n   *\n   * @type {number}\n   */\n  this.ovno = reader.readUInt(2);\n\n  /**\n   * The first reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res1 = reader.readUIntArray(2, 4);\n\n  /**\n   * The OEM identifier.\n   *\n   * @type {number}\n   */\n  this.oemid = reader.readUInt(2);\n\n  /**\n   * The OEM information.\n   *\n   * @type {number}\n   */\n  this.oeminfo = reader.readUInt(2);\n\n  /**\n   * The second reserved words.\n   *\n   * @type {Array<number>}\n   */\n  this.res2 = reader.readUIntArray(2, 10);\n\n  /**\n   * The file address of the new EXE header.\n   *\n   * @type {number}\n   */\n  this.lfanew = reader.readUInt(4);\n\n}\n\nmodule.exports = DOSHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/DOSHeader.js\n// module id = 15\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar StreamHeader = require('./StreamHeader');\n\n/**\n * Class MetadataHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction MetadataHeader (reader) {\n\n  \"use strict\";\n\n  var i;\n\n  /**\n   * The file offset to the header relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.offset = reader.getPosition();\n\n  /**\n   * The signature.\n   *\n   * This value should always equal 0x424A5342.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * A reserved value.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.reserved = reader.readUInt(4);\n\n  /**\n   * The length of the version string.\n   *\n   * @type {number}\n   */\n  this.versionLength = (i = (i = reader.readUInt(4)) + (i % 4));\n\n  /**\n   * The version string.\n   *\n   * @type {string}\n   */\n  this.version = reader.readUTF8String(i, true);\n\n  /**\n   * The flags.\n   *\n   * This value should always equal 0x00.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The number of streams.\n   *\n   * @type {number}\n   */\n  this.streams = reader.readUInt(2);\n\n  /**\n   * The stream headers.\n   *\n   * @type {Array<StreamHeader>}\n   */\n  this.streamHeaders = new Array(this.streams);\n\n  // Read the stream headers.\n  for (i = 0; i < this.streamHeaders.length; i++) {\n    this.streamHeaders[i] = new StreamHeader(reader);\n  }\n\n}\n\nmodule.exports = MetadataHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/MetadataHeader.js\n// module id = 16\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar MethodFlags = require('../Constant/MethodFlags');\n\n/**\n * Class MethodHeader.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodHeader (reader) {\n\n  \"use strict\";\n\n  // Retrieve the first one or two bytes specifying the flags and header size.\n  var flags_and_size = reader.readUInt(1);\n  var tiny = true;\n\n  if ((flags_and_size & MethodFlags.TINY_FORMAT) === 0) {\n    reader.setPosition(reader.getPosition() - 1);\n    flags_and_size = reader.readUInt(2);\n    tiny = false;\n  }\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = tiny ? flags_and_size & 0x03 : flags_and_size & 0xFFF;\n\n  /**\n   * The header size.\n   *\n   * @type {number}\n   */\n  this.size = tiny ? 1 : flags_and_size >> 12;\n\n  /**\n   * The maximum number of items on the operand stack.\n   *\n   * @return {number}\n   */\n  this.maxStack = tiny ? 0 : reader.readUInt(2);\n\n  /**\n   * The size in bytes of the actual method body.\n   *\n   * @return {number}\n   */\n  this.codeSize = tiny ? flags_and_size >> 2 : reader.readUInt(4);\n\n  /**\n   * The metadata token for a signature describing the layout of the local\n   * variables for the method\n   *\n   * @return {number}\n   */\n  this.localVarSigTok = tiny ? 0 : reader.readUInt(4);\n\n  /**\n   * The file offset to the code.\n   *\n   * @type {number}\n   */\n  this.codeOffset = reader.getPosition();\n\n}\n\nmodule.exports = MethodHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/MethodHeader.js\n// module id = 17\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar DataDirectoryHeader = require('./DataDirectoryHeader');\nvar ImageAttributes = require('./../Constant/ImageAttributes');\n\n/**\n * Class OptionalHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction OptionalHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The state of the image file.\n   *\n   * @type {number}\n   */\n  this.magic = reader.readUInt(2);\n\n  /**\n   * The major version number of the linker.\n   *\n   * @type {number}\n   */\n  this.majorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The minor version number of the linker.\n   *\n   * @type {number}\n   */\n  this.minorLinkerVersion = reader.readUInt(1);\n\n  /**\n   * The size of the code section, in bytes, or the sum of all such sections if\n   * there are multiple code sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfCode = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data section, in bytes, or the sum of all such\n   * sections if there are multiple initialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfInitializedData = reader.readUInt(4);\n\n  /**\n   * The size of the uninitialized data section, in bytes, or the sum of all\n   * such sections if there are multiple uninitialized data sections.\n   *\n   * @type {number}\n   */\n  this.sizeOfUninitializedData = reader.readUInt(4);\n\n  /**\n   * A pointer to the entry point function, relative to the image base address.\n   *\n   * @type {number}\n   */\n  this.addressOfEntryPoint = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the code section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfCode = reader.readUInt(4);\n\n  /**\n   * A pointer to the beginning of the data section, relative to the image base.\n   *\n   * @type {number}\n   */\n  this.baseOfData = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 0 : 4);\n\n  /**\n   * The preferred address of the first byte of the image when it is loaded in\n   * memory.\n   *\n   * @type {number}\n   */\n  this.imageBase = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The alignment of sections loaded in memory, in bytes.\n   *\n   * @type {number}\n   */\n  this.sectionAlignment = reader.readUInt(4);\n\n  /**\n   * The alignment of the raw data of sections in the image file, in bytes.\n   *\n   * @type {number}\n   */\n  this.fileAlignment = reader.readUInt(4);\n\n  /**\n   * The major version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.majorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the required operating system.\n   *\n   * @type {number}\n   */\n  this.minorOperatingSystemVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the image.\n   *\n   * @type {number}\n   */\n  this.majorImageVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the image.\n   *\n   * @type {number}\n   */\n  this.minorImageVersion = reader.readUInt(2);\n\n  /**\n   * The major version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.majorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * The minor version number of the subsystem.\n   *\n   * @type {number}\n   */\n  this.minorSubsystemVersion = reader.readUInt(2);\n\n  /**\n   * This member is reserved and must be 0.\n   *\n   * @type {number}\n   */\n  this.win32VersionValue = reader.readUInt(4);\n\n  /**\n   * The size of the image, in bytes, including all headers.\n   *\n   * @type {number}\n   */\n  this.sizeOfImage = reader.readUInt(4);\n\n  /**\n   * The combined size of the following items, rounded to a multiple of the\n   * value specified in the fileAlignment member.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeaders = reader.readUInt(4);\n\n  /**\n   * The image file checksum.\n   *\n   * @type {number}\n   */\n  this.checkSum = reader.readUInt(4);\n\n  /**\n   * The subsystem required to run this image.\n   *\n   * @type {number}\n   */\n  this.subsystem = reader.readUInt(2);\n\n  /**\n   * The DLL characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.dllCharacteristics = reader.readUInt(2);\n\n  /**\n   * The number of bytes to reserve for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the stack.\n   *\n   * @type {number}\n   */\n  this.sizeOfStackCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to reserve for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapReserve = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * The number of bytes to commit for the local heap.\n   *\n   * @type {number}\n   */\n  this.sizeOfHeapCommit = reader.readUInt(\n    (this.magic === ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) ? 8 : 4);\n\n  /**\n   * This member is obsolete.\n   *\n   * @type {number}\n   */\n  this.loaderFlags = reader.readUInt(4);\n\n  /**\n   * The number of directory entries in the remainder of the optional header.\n   *\n   * @type {number}\n   */\n  this.numberOfRvaAndSizes = reader.readUInt(4);\n\n  /**\n   * The array of data directory headers.\n   *\n   * @type {Array<DataDirectoryHeader>}\n   */\n  this.dataDirectory = new Array(this.numberOfRvaAndSizes);\n\n  // Read the data directory headers.\n  for (var i = 0; i < this.dataDirectory.length; i++) {\n    this.dataDirectory[i] = new DataDirectoryHeader(reader);\n  }\n\n}\n\nmodule.exports = OptionalHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/OptionalHeader.js\n// module id = 18\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class SectionHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction SectionHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The section name.\n   *\n   * @type {string}\n   */\n  this.name = reader.readUTF8String(8, true);\n\n  /**\n   * The file address or the total size of the section when loaded into memory,\n   * in bytes.\n   *\n   * @type {number}\n   */\n  this.misc = reader.readUInt(4);\n\n  /**\n   * The address of the first byte of the section when loaded into memory,\n   * relative to the image base.\n   *\n   * @type {number}\n   */\n  this.virtualAddress = reader.readUInt(4);\n\n  /**\n   * The size of the initialized data on disk, in bytes.\n   *\n   * @type {number}\n   */\n  this.sizeOfRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the first page within the COFF file.\n   *\n   * @type {number}\n   */\n  this.pointerToRawData = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToRelocations = reader.readUInt(4);\n\n  /**\n   * A file pointer to the beginning of the line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.pointerToLinenumbers = reader.readUInt(4);\n\n  /**\n   * The number of relocation entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfRelocations = reader.readUInt(2);\n\n  /**\n   * The number of line-number entries for the section.\n   *\n   * @type {number}\n   */\n  this.numberOfLinenumbers = reader.readUInt(2);\n\n  /**\n   * The characteristics of the image.\n   *\n   * @type {number}\n   */\n  this.characteristics = reader.readUInt(4);\n\n}\n\nmodule.exports = SectionHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/SectionHeader.js\n// module id = 19\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StreamHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction StreamHeader (reader) {\n\n  \"use strict\";\n\n  /**\n   * The file offset to the stream relative to the metadata header.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The size of the stream, in bytes.\n   *\n   * @type {number}\n   */\n  this.size = reader.readUInt(4);\n\n  /**\n   * The name of the stream.\n   *\n   * @type {string}\n   */\n  this.name = reader.readString(0, true, 4);\n\n}\n\nmodule.exports = StreamHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/StreamHeader.js\n// module id = 20\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TablesHeader.\n *\n * @param {BinaryParser} reader\n *   The binary reader.\n *\n * @constructor\n * @struct\n */\nfunction TablesHeader (reader) {\n\n  \"use strict\";\n\n  var i1, i2;\n\n  /**\n   * The first reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved1 = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(1);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(1);\n\n  /**\n   * The size of the indexes into the different streams.\n   *\n   * @type {number}\n   */\n  this.heapOffsetSizes = reader.readUInt(1);\n\n  /**\n   * The second reserved value.\n   *\n   * @type {number}\n   */\n  this.reserved2 = reader.readUInt(1);\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {Array<number>}\n   */\n  this.maskValidArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are present.\n   *\n   * @type {number}\n   */\n  this.maskValid = (i2 << 32) | i1;\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {Array<number>}\n   */\n  this.maskSortedArray = [\n    (i1 = reader.readUInt(4)),\n    (i2 = reader.readUInt(4))\n  ];\n\n  /**\n   * The bit-mask that indicates which of the tables that are sorted.\n   *\n   * @type {number}\n   */\n  this.maskSorted = (i2 << 32) | i1;\n\n  /**\n   * The file offset to the tables relative to the beginning of the stream.\n   *\n   * @type {number}\n   */\n  this.tablesOffset = reader.getPosition();\n\n}\n\nmodule.exports = TablesHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Header/TablesHeader.js\n// module id = 21\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar BinaryParser = require('./BinaryParser');\nvar COFFHeader = require('./Header/COFFHeader');\nvar DOSHeader = require('./Header/DOSHeader');\nvar Extend = require('extend');\nvar ImageAttributes = require('./Constant/ImageAttributes');\nvar ParserException = require('./Exception/ParserException');\nvar OptionalHeader = require('./Header/OptionalHeader');\nvar ResourceDirectory = require('./Directory/ResourceDirectory');\nvar SectionHeader = require('./Header/SectionHeader');\n\n/**\n * Class PEParser.\n *\n * @param {string} path\n *   The file path.\n * @param {ArrayBuffer} [data]\n *   The file contents.\n *\n * @constructor\n * @extends {BinaryParser}\n */\nfunction PEParser (path, data) {\n\n  \"use strict\";\n\n  // Invoke the parent constructor.\n  Extend(true, this, new BinaryParser(path, data));\n\n  /**\n   * The COFF header.\n   *\n   * @type {COFFHeader}\n   *\n   * @protected\n   */\n  this._coffHeader = null;\n\n  /**\n   * The DOS header.\n   *\n   * @type {DOSHeader}\n   *\n   * @protected\n   */\n  this._dosHeader = null;\n\n  /**\n   * The optional header.\n   *\n   * @type {OptionalHeader}\n   *\n   * @protected\n   */\n  this._optionalHeader = null;\n\n  /**\n   * The resource directory.\n   *\n   * @type {ResourceDirectory}\n   *\n   * @protected\n   */\n  this._resourceDirectory = null;\n\n  /**\n   * The resource directory file offset.\n   *\n   * @type {number}\n   *\n   * @protected\n   */\n  this._resourceDirectoryFileOffset = null;\n\n  /**\n   * The section headers.\n   *\n   * @type {Array<SectionHeader>}\n   *\n   * @protected\n   */\n  this._sectionHeaders = null;\n\n  /**\n   * Calculates the file offset for a relative virtual address.\n   *\n   * @param {number} rva\n   *   The relative virtual address.\n   *\n   * @return {number}\n   *   Returns a file offset.\n   */\n  this.getFileOffset = function (rva) {\n    // Determine which section the address belongs to and convert it to a file\n    // offset.\n    var sectionHeaders = this.readSectionHeaders();\n\n    for (var i = 0; i < sectionHeaders.length; i++) {\n      if ((rva >= sectionHeaders[i].virtualAddress) &&\n        (rva <= sectionHeaders[i].virtualAddress +\n        sectionHeaders[i].sizeOfRawData)) {\n        return sectionHeaders[i].pointerToRawData +\n          (rva - sectionHeaders[i].virtualAddress);\n      }\n    }\n\n    return -1;\n  };\n\n  /**\n   * Retrieves the resource directory file offset.\n   *\n   * @return {number}\n   *   Returns the file offset or -1 if the resource directory is empty.\n   */\n  this.getResourceDirectoryFileOffset = function() {\n    if (!this._resourceDirectoryFileOffset) {\n      // Locate the resource section in order to determine the file offset.\n      var sectionHeaders = this.readSectionHeaders();\n      var sectionHeader = null;\n\n      for (var i = 0; i < sectionHeaders.length; i++) {\n        if (sectionHeaders[i].name === '.rsrc') {\n          sectionHeader = sectionHeaders[i];\n          break;\n        }\n      }\n\n      if (sectionHeader) {\n        this._resourceDirectoryFileOffset = sectionHeader.pointerToRawData;\n      }\n      else {\n        this._resourceDirectoryFileOffset = -1;\n      }\n    }\n\n    return this._resourceDirectoryFileOffset;\n  };\n\n  /**\n   * Reads the COFF header.\n   *\n   * @return {COFFHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readCOFFHeader = function () {\n    if (!this._coffHeader) {\n      // Move the stream cursor to the position of the COFF header as specified\n      // by the DOS header.\n      this.setPosition(this.readDOSHeader().lfanew);\n\n      // Read the header and throw an exception if the header seems to be\n      // invalid.\n      this._coffHeader = new COFFHeader(this);\n\n      if (this._coffHeader.signature !== ImageAttributes.IMAGE_NT_SIGNATURE) {\n        throw new ParserException('Invalid COFF header');\n      }\n    }\n\n    return this._coffHeader;\n  };\n\n  /**\n   * Reads the DOS header.\n   *\n   * @return {DOSHeader}\n   *   Returns the header as an object.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readDOSHeader = function () {\n    if (!this._dosHeader) {\n      // Reset the position to the beginning of the stream.\n      this.setPosition(0);\n\n      // Read the header from the buffer and throw an exception if the header is\n      // invalid.\n      this._dosHeader = new DOSHeader(this);\n\n      if (this._dosHeader.magic !== ImageAttributes.IMAGE_DOS_SIGNATURE) {\n        throw new ParserException('Invalid DOS header');\n      }\n    }\n\n    return this._dosHeader;\n  };\n\n  /**\n   * Reads the optional header.\n   *\n   * @return {OptionalHeader}\n   *   Returns the header values.\n   *\n   * @throws {ParserException}\n   *   Thrown if the header is invalid.\n   */\n  this.readOptionalHeader = function () {\n    if ((!this._optionalHeader) &&\n      (this.readCOFFHeader().sizeOfOptionalHeader > 0)) {\n      // Move the stream cursor to the position of the optional header as\n      // specified by the DOS header and the size of the COFF header.\n      this.setPosition(this.readDOSHeader().lfanew + 24);\n\n      // Read the entire header including the data directories.\n      this._optionalHeader = new OptionalHeader(this);\n\n      if ((this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR64_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_NT_OPTIONAL_HDR32_MAGIC) &&\n        (this._optionalHeader.magic !==\n        ImageAttributes.IMAGE_ROM_OPTIONAL_HDR_MAGIC)) {\n        throw new ParserException('Invalid optional header');\n      }\n    }\n\n    return this._optionalHeader;\n  };\n\n  /**\n   * Reads the resource directory.\n   *\n   * @return {ResourceDirectory}\n   *   Returns the resource directory.\n   */\n  this.readResourceDirectory = function() {\n    if (this.getResourceDirectoryFileOffset() < 1) {\n      return this._resourceDirectory;\n    }\n\n    this.setPosition(this.getResourceDirectoryFileOffset());\n    this._resourceDirectory = new ResourceDirectory(this);\n    return this._resourceDirectory;\n  };\n\n  /**\n   * Reads the section headers.\n   *\n   * @return {Array<SectionHeader>}\n   *   Returns an array of section headers.\n   */\n  this.readSectionHeaders = function () {\n    if (!this._sectionHeaders) {\n      // Move the stream cursor to the position of the section headers.\n      this.setPosition(this.readDOSHeader().lfanew + 24 +\n        this.readCOFFHeader().sizeOfOptionalHeader);\n\n      // Read each of the section headers.\n      this._sectionHeaders = new Array(this.readCOFFHeader().numberOfSections);\n\n      for (var i = 0; i < this._sectionHeaders.length; i++) {\n        this._sectionHeaders[i] = new SectionHeader(this);\n      }\n    }\n\n    return this._sectionHeaders;\n  };\n\n}\n\nmodule.exports = PEParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/PEParser.js\n// module id = 22\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyOSRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyOSRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyOSRow.js\n// module id = 23\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyProcessorRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n}\n\nmodule.exports = AssemblyProcessorRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyProcessorRow.js\n// module id = 24\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class AssemblyRefOSRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefOSRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.osPlatformID = reader.readUInt(4);\n\n  /**\n   * The OS major version.\n   *\n   * @type {number}\n   */\n  this.osMajorVersion = reader.readUInt(4);\n\n  /**\n   * The OS minor version.\n   *\n   * @type {number}\n   */\n  this.osMinorVersion = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefOSRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyRefOSRow.js\n// module id = 25\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class AssemblyRefProcessorRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefProcessorRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The processor type.\n   *\n   * @type {number}\n   */\n  this.processor = reader.readUInt(4);\n\n  /**\n   * The reference to the assembly reference row.\n   *\n   * @type {RowReference}\n   */\n  this.assemblyRef = new RowReference(reader, [\n    TableIndexes.ASSEMBLY_REF\n  ]);\n\n}\n\nmodule.exports = AssemblyRefProcessorRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyRefProcessorRow.js\n// module id = 26\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key or token as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKeyOrToken = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = AssemblyRefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyRefRow.js\n// module id = 27\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class AssemblyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction AssemblyRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The id of the hashing algorithm.\n   *\n   * @type {number}\n   */\n  this.hashAlgId = reader.readUInt(4);\n\n  /**\n   * The major version.\n   *\n   * @type {number}\n   */\n  this.majorVersion = reader.readUInt(2);\n\n  /**\n   * The minor version.\n   *\n   * @type {number}\n   */\n  this.minorVersion = reader.readUInt(2);\n\n  /**\n   * The build number.\n   *\n   * @type {number}\n   */\n  this.buildNumber = reader.readUInt(2);\n\n  /**\n   * The revision number.\n   *\n   * @type {number}\n   */\n  this.revisionNumber = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The public key as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.publicKey = reader.readBlobIndex();\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The culture as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.culture = reader.readStringIndex();\n\n}\n\nmodule.exports = AssemblyRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/AssemblyRow.js\n// module id = 28\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ClassLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ClassLayoutRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The packing size.\n   *\n   * @type {number}\n   */\n  this.packingSize = reader.readUInt(2);\n\n  /**\n   * The class size.\n   *\n   * @type {number}\n   */\n  this.classSize = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = ClassLayoutRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ClassLayoutRow.js\n// module id = 29\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ConstantRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The type.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(1) + reader.readUInt(1);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM,\n    TableIndexes.PROPERTY\n  ]);\n\n  /**\n   * The value as an index into the Blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = ConstantRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ConstantRow.js\n// module id = 30\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ConstantRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction CustomAttributeRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.FIELD,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_DEF,\n    TableIndexes.PARAM,\n    TableIndexes.INTERFACE_IMPL,\n    TableIndexes.MEMBER_REF,\n    TableIndexes.MODULE,\n    -1,\n    TableIndexes.PROPERTY,\n    TableIndexes.EVENT,\n    TableIndexes.STAND_ALONE_SIG,\n    TableIndexes.MODULE_REF,\n    TableIndexes.TYPE_SPEC,\n    TableIndexes.ASSEMBLY,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE,\n    TableIndexes.MANIFEST_RESOURCE\n  ]);\n\n  /**\n   * The reference to the type row.\n   *\n   * @type {RowReference}\n   */\n  this.type = new RowReference(reader, [\n    -1,\n    -1,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF,\n    -1\n  ]);\n\n  /**\n   * The value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.value = reader.readBlobIndex();\n\n}\n\nmodule.exports = CustomAttributeRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/CustomAttributeRow.js\n// module id = 31\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class DeclSecurityRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction DeclSecurityRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The action.\n   *\n   * @type {number}\n   */\n  this.action = reader.readUInt(2);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.ASSEMBLY\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.permissionSet = reader.readBlobIndex();\n\n}\n\nmodule.exports = DeclSecurityRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/DeclSecurityRow.js\n// module id = 32\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class EventMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventMapRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first event row.\n   *\n   * @type {RowReference}\n   */\n  this.eventList = new RowReference(reader, [\n    TableIndexes.EVENT\n  ]);\n\n}\n\nmodule.exports = EventMapRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/EventMapRow.js\n// module id = 33\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class EventRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction EventRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The event flags.\n   *\n   * @type {number}\n   */\n  this.eventFlags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The event type as a reference to a TypeDef, TypeRef or TypeSpec row.\n   *\n   * @type {RowReference}\n   */\n  this.eventType = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = EventRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/EventRow.js\n// module id = 34\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ExportedTypeRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ExportedTypeRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type definition id.\n   *\n   * @type {number}\n   */\n  this.typeDefId = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ExportedTypeRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ExportedTypeRow.js\n// module id = 35\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class FieldLayoutRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldLayoutRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldLayoutRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FieldLayoutRow.js\n// module id = 36\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class FieldMarshalRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldMarshalRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.PARAM\n  ]);\n\n  /**\n   * The native type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.nativeType = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldMarshalRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FieldMarshalRow.js\n// module id = 37\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class FieldRVARow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRVARow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The relative virtual address of the initial value.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The field as a reference to a Field row.\n   *\n   * @type {RowReference}\n   */\n  this.field = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n}\n\nmodule.exports = FieldRVARow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FieldRVARow.js\n// module id = 38\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FieldRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FieldRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.type = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = FieldRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FieldRow.js\n// module id = 39\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class FileRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction FileRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The OS platform id.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The hash value as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.hashValue = reader.readBlobIndex();\n\n}\n\nmodule.exports = FileRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/FileRow.js\n// module id = 40\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class GenericParamConstraintRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamConstraintRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the owner row.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.GENERIC_PARAM\n  ]);\n\n  /**\n   * The reference to the class row.\n   *\n   * @type {RowReference}\n   */\n  this.constraint = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = GenericParamConstraintRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/GenericParamConstraintRow.js\n// module id = 41\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class GenericParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction GenericParamRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The index of the generic parameter.\n   *\n   * @type {number}\n   */\n  this.number = reader.readUInt(2);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The reference to the owner of the generic parameter.\n   *\n   * @type {RowReference}\n   */\n  this.owner = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = GenericParamRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/GenericParamRow.js\n// module id = 42\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ImplMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ImplMapRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The mapping flags.\n   *\n   * @type {number}\n   */\n  this.mappingFlags = reader.readUInt(2);\n\n  /**\n   * The forwarded member as a reference to a Field or MethodDef row.\n   *\n   * @type {RowReference}\n   */\n  this.memberForwarded = new RowReference(reader, [\n    TableIndexes.FIELD,\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The import name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.importName = reader.readStringIndex();\n\n  /**\n   * The import scope as a reference to a ModuleRef row.\n   *\n   * @type {RowReference}\n   */\n  this.importScope = new RowReference(reader, [\n    TableIndexes.MODULE\n  ]);\n\n}\n\nmodule.exports = ImplMapRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ImplMapRow.js\n// module id = 43\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class InterfaceImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction InterfaceImplRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the interface definition row.\n   *\n   * @type {RowReference}\n   */\n  this.interface = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n}\n\nmodule.exports = InterfaceImplRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/InterfaceImplRow.js\n// module id = 44\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class ManifestResourceRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ManifestResourceRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The offset.\n   *\n   * @type {number}\n   */\n  this.offset = reader.readUInt(4);\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.implementation = new RowReference(reader, [\n    TableIndexes.FILE,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.EXPORTED_TYPE\n  ]);\n\n}\n\nmodule.exports = ManifestResourceRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ManifestResourceRow.js\n// module id = 45\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MemberRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MemberRefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.MODULE_REF,\n    TableIndexes.METHOD_DEF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = MemberRefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/MemberRefRow.js\n// module id = 46\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MethodDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodDefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The relative virtual address.\n   *\n   * @type {number}\n   */\n  this.rva = reader.readUInt(4);\n\n  /**\n   * The implementation flags.\n   *\n   * @type {number}\n   */\n  this.implFlags = reader.readUInt(2);\n\n  /**\n   * The method flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n  /**\n   * The reference to the param definition row.\n   *\n   * @type {RowReference}\n   */\n  this.paramList = new RowReference(reader, [\n    TableIndexes.PARAM\n  ]);\n\n}\n\nmodule.exports = MethodDefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/MethodDefRow.js\n// module id = 47\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MethodImplRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodImplRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the class definition row.\n   *\n   * @type {RowReference}\n   */\n  this.class = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the method body row.\n   *\n   * @type {RowReference}\n   */\n  this.methodBody = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n  /**\n   * The reference to the method declaration row.\n   *\n   * @type {RowReference}\n   */\n  this.methodDeclaration = new RowReference(reader, [\n    TableIndexes.METHOD_DEF,\n    TableIndexes.MEMBER_REF\n  ]);\n\n}\n\nmodule.exports = MethodImplRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/MethodImplRow.js\n// module id = 48\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class MethodSemanticsRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction MethodSemanticsRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The semantics.\n   *\n   * @type {number}\n   */\n  this.semantics = reader.readUInt(2);\n\n  /**\n   * The reference to the method row.\n   *\n   * @type {RowReference}\n   */\n  this.method = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n  /**\n   * The reference to the associated row.\n   *\n   * @type {RowReference}\n   */\n  this.association = new RowReference(reader, [\n    TableIndexes.EVENT,\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = MethodSemanticsRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/MethodSemanticsRow.js\n// module id = 49\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ModuleRefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ModuleRefRow.js\n// module id = 50\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ModuleRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ModuleRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The generation.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.generation = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The module id as an index into the GUID heap.\n   *\n   * @type {number}\n   */\n  this.mvid = reader.readGUIDIndex();\n\n  /**\n   * The encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encId = reader.readGUIDIndex();\n\n  /**\n   * The base encryption id as an index into the GUID heap.\n   *\n   * This value should always be zero.\n   *\n   * @type {number}\n   */\n  this.encBaseId = reader.readGUIDIndex();\n\n}\n\nmodule.exports = ModuleRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ModuleRow.js\n// module id = 51\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class NestedClassRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction NestedClassRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the nested class information row.\n   *\n   * @type {RowReference}\n   */\n  this.nestedClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the enclosing class information row.\n   *\n   * @type {RowReference}\n   */\n  this.enclosingClass = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n}\n\nmodule.exports = NestedClassRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/NestedClassRow.js\n// module id = 52\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class ParamRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction ParamRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The sequence.\n   *\n   * @type {number}\n   */\n  this.sequence = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n}\n\nmodule.exports = ParamRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/ParamRow.js\n// module id = 53\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class PropertyMapRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyMapRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the parent row.\n   *\n   * @type {RowReference}\n   */\n  this.parent = new RowReference(reader, [\n    TableIndexes.TYPE_DEF\n  ]);\n\n  /**\n   * The reference to the first property row.\n   *\n   * @type {RowReference}\n   */\n  this.propertyList = new RowReference(reader, [\n    TableIndexes.PROPERTY\n  ]);\n\n}\n\nmodule.exports = PropertyMapRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/PropertyMapRow.js\n// module id = 54\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class PropertyRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction PropertyRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The property flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(2);\n\n  /**\n   * The name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.name = reader.readStringIndex();\n\n  /**\n   * The type as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.type = reader.readBlobIndex();\n\n}\n\nmodule.exports = PropertyRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/PropertyRow.js\n// module id = 55\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class StandAloneSigRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction StandAloneSigRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = StandAloneSigRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/StandAloneSigRow.js\n// module id = 56\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class TypeDefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeDefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The flags.\n   *\n   * @type {number}\n   */\n  this.flags = reader.readUInt(4);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.extends = new RowReference(reader, [\n    TableIndexes.TYPE_DEF,\n    TableIndexes.TYPE_REF,\n    TableIndexes.TYPE_SPEC\n  ]);\n\n  /**\n   * The reference to the field information row.\n   *\n   * @type {RowReference}\n   */\n  this.fieldList = new RowReference(reader, [\n    TableIndexes.FIELD\n  ]);\n\n  /**\n   * The reference to the method information row.\n   *\n   * @type {RowReference}\n   */\n  this.methodList = new RowReference(reader, [\n    TableIndexes.METHOD_DEF\n  ]);\n\n}\n\nmodule.exports = TypeDefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/TypeDefRow.js\n// module id = 57\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar RowReference = require('./../Reference/RowReference');\nvar TableIndexes = require('./../Constant/TableIndexes');\n\n/**\n * Class TypeRefRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeRefRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The reference to the type information row.\n   *\n   * @type {RowReference}\n   */\n  this.resolutionScope = new RowReference(reader, [\n    TableIndexes.MODULE,\n    TableIndexes.MODULE_REF,\n    TableIndexes.ASSEMBLY_REF,\n    TableIndexes.TYPE_REF\n  ]);\n\n  /**\n   * The type name as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeName = reader.readStringIndex();\n\n  /**\n   * The type namespace as an index into the string heap.\n   *\n   * @type {number}\n   */\n  this.typeNamespace = reader.readStringIndex();\n\n}\n\nmodule.exports = TypeRefRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/TypeRefRow.js\n// module id = 58\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Class TypeSpecRow.\n *\n * @param {CILParser} reader\n *   The CIL reader.\n *\n * @constructor\n * @struct\n */\nfunction TypeSpecRow (reader) {\n\n  \"use strict\";\n\n  /**\n   * The signature as an index into the blob heap.\n   *\n   * @type {number}\n   */\n  this.signature = reader.readBlobIndex();\n\n}\n\nmodule.exports = TypeSpecRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Parser/Row/TypeSpecRow.js\n// module id = 59\n// module chunks = 0 1","/**\n * This file is part of ComlaJS.\n *\n * ComlaJS is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ComlaJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ComlaJS. If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar CILParser = require('./Parser/CILParser');\n\n/**\n * Class Main.\n *\n * @constructor\n * @final\n */\nfunction Main () {\n\n  \"use strict\";\n\n  /**\n   * Runs an executable.\n   *\n   * @param {string} path\n   *   The path.\n   */\n  this.run = function (path) {\n    console.log('#### This library is not yet able to run applications ####');\n    console.log('----------------------------------------------------------');\n    console.log('Dumping information about the executable:');\n\n    (new CILParser(path)).loadFile(function(reader) {\n      console.log(reader.readDOSHeader());\n      console.log(reader.readCOFFHeader());\n      console.log(reader.readOptionalHeader());\n      console.log(reader.readSectionHeaders());\n      console.log(reader.readResourceDirectory());\n      console.log(reader.readCORHeader());\n      console.log(reader.readMetadataHeader());\n      console.log(reader.readTablesHeader());\n      console.log(reader.readTables());\n      console.log(reader.readMethodHeaders());\n    }, function() {\n      console.log('Failed to load the file');\n    });\n  };\n\n}\n\nmodule.exports = new Main();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Main.js\n// module id = 60\n// module chunks = 0 1"],"sourceRoot":""}